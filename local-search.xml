<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>如何评价 Steam 新游《捞女游戏》（已改名《情感反诈模拟器》）？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7-steam-%E6%96%B0%E6%B8%B8%E3%80%8A%E6%8D%9E%E5%A5%B3%E6%B8%B8%E6%88%8F%E3%80%8B%EF%BC%88%E5%B7%B2%E6%94%B9%E5%90%8D%E3%80%8A%E6%83%85%E6%84%9F%E5%8F%8D%E8%AF%88%E6%A8%A1%E6%8B%9F%E5%99%A8%E3%80%8B%EF%BC%89%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7-steam-%E6%96%B0%E6%B8%B8%E3%80%8A%E6%8D%9E%E5%A5%B3%E6%B8%B8%E6%88%8F%E3%80%8B%EF%BC%88%E5%B7%B2%E6%94%B9%E5%90%8D%E3%80%8A%E6%83%85%E6%84%9F%E5%8F%8D%E8%AF%88%E6%A8%A1%E6%8B%9F%E5%99%A8%E3%80%8B%EF%BC%89%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>由于实在没什么精力去推影游，恰好 B 站关注里有人发了实况，就快速借助视频云通关了，之后某些游戏画面也会直接截取自主播实况视频，顺便贴个主播地址，B 站关注咖米谢谢喵。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cardlink">url: https://space.bilibili.com/7770395<br>title: &quot;咖米狸的个人空间-咖米狸个人主页-哔哩哔哩视频&quot;<br>description: &quot;哔哩哔哩咖米狸的个人空间，提供咖米狸分享的视频、音频、文章、动态、收藏等内容，关注咖米狸账号，第一时间了解UP主动态。游戏/外设 商业合作私信或➕Q:41336588（备注品牌）网瘾咖咖平日会在B站直播各种好玩的游戏哒&quot;<br>host: space.bilibili.com<br>favicon: https://www.bilibili.com/favicon.ico<br>image: https://www.bilibili.com/favicon.ico<br></code></pre></td></tr></table></figure><p>恰好游戏的第一章和直播强相关，所以看主播玩游戏也是一种特别的体验了。之后还刷到了不少直播的切片，看主播们各式各样的反应，也算是非常美味。P.S.能直播玩这游戏，还放出视频的主播，一定是站在相同战线了。</p><hr><p>回到正题，游戏质量的评价。说实话，游戏整体的质量也就中等水平。同类型的恋爱模拟影游，都非常能卷。从选角、剧情、人设种种方面，本作并没有太多的优势，反而因为选题的特殊性而放弃了部分加分技巧。</p><p>比如本作采用了第三人称视角，而同类作品中现象级的几部都采用了第一人称（《完蛋》《学习》）。第一人称在这类游戏上有天然优势，增加代入感的同时也可以更加充分地展示出女角色的魅力。不过本作中，显然男主角也是非常重要，抛弃第一人称，常规的电影视角显然是更合适的。</p><p>再比如同类作品的整体结构是共通线+主推角色的角色线，不同角色在性格、人设上有较大差异，让玩家可以根据自己的喜好自由选择「单推人」，还能在多个角色间拉扯。这样在角色塑造上更加详略得当，可以让玩家在主推角色上发掘更多故事，玩法上也增加了自由度。</p><p>而本作是闯关类型的结构，必须攻略一人后再攻略下一个，且一关比一关难（角色设定上）。最后攻略「变凤凰」高层的时候已经套路化，剧情转变突然，女角色逐渐降智，智斗的解决是通过降智去实现有点搞了。角色人设上也主要为了「捞女」剧情服务，很难多元展示不同类型女性的魅力，后续尽管人设上有一定差异，但还是有很大同质性，让玩家产生厌倦感。最终结局部分，又想到了自由度，可以选择一位角色达成真结局。于是强行给每个悔过&#x2F;洗白的角色安排了一个 happy ending，也是让人有点摸不着头脑，包括陈欣欣的假死。</p><p>欲扬先抑，抛开一些技巧上的不足，还有部分因为众所周知的原因无法过审的内容（沈梦娜线很多东西上不了台面）而导致后续剧情平庸，本作依然是有一些值得拿得出手的高能片段。或者说某些场面的拍摄、剪辑、演出达到了电影级别，对同类游戏形成降维打击。</p><p>最广为人知的就是酒吧游戏。男女主快速一问一答，面部特写正反打（怼脸男女主演技也都在线），对话稍稍舒缓的时候再切一个包含两人的中景。俩人的回答也很有意思，男主基本都是实话，且回答简练干脆（是、有）；女主则基本上是假话，还会加上「当然」之类的副词，尽显自己的心虚，然后明知男主没有撒谎却在不断喝酒掩饰。最后男主亮出手腕的伤疤时，女主震惊的表情加上眼角的一滴泪，让此段场景封神。</p><p><img src="https://pic3.zhimg.com/80/v2-0c625976271dc26ccbfc07a1787e0def_720w.jpg" alt="到斩杀线了"></p><p>之后就是 BGM 响起，各种回忆交织，原来之前也一直在玩这个游戏，而且之前说的尽是实话，如今都替换成了谎言。切回现实，剪辑也稍作变化，很明显用了抽帧，王家卫导演的《重庆森林》同款手法，表现了角色的矛盾、挣扎与恍惚。只能说专业导演还真有两把刷子，特别是在他擅长的领域上（男女情感冲突）。</p><p>后面还有几段对话场景也值得夸奖，但在镜头语言上并没有超出上面的场景，所以就简单带过。</p><p>比如和诗琪咖啡店讨论喜欢的作家和作品，虽然都是我没看过的作品，但双方对答如流，引用原话互相切磋，颇有伯牙子期之风。</p><p><img src="https://pic1.zhimg.com/80/v2-b4b472ca83f9e267b3432d0bd430aa41_720w.jpg" alt="文艺对对子"></p><p>再比如和最终 boss 梦娜几番价值观辩论，也是相当精彩，此作的价值观那是相当的正。既引出了社会问题，也剖析了背后的原因，可惜再深度的内容只能点到为止了。</p><p><img src="https://pic1.zhimg.com/80/v2-e7beb269c0ad306512d837ef4bce8714_720w.jpg" alt="不是，这么正的价值观也能被封？"></p><p>总结一下：作为游戏而言，本作缺乏游戏技巧的应用，在多支线剧情结构处理上显得有些不成熟，有些剧情处理得有些简陋；但在影视拍摄和剪辑制作上，展现出很高的水平，尤其是某些封神场面。</p><hr><p>然后就是游戏外的一些话题与流量。原名《捞女游戏》可谓争议度拉满，敏感词「捞女」直接放在游戏名里可谓非常勇了。然后自然是引来了各类讨伐：</p><blockquote><p>游戏上线当天，制作人胡耀辉的 B 站账号被封禁，游戏的 B 站官方账号内容也突然消失，投稿的视频和图文动态全部被清除。<br>次日，极目新闻对《捞女游戏》发文评价，认为其存在煽动性别对立、污名化女性等问题，并呼吁加强审核。<br>游戏在 Steam 平台上的名字被改为《情感反诈模拟器》，游戏官方在游戏社区的账号也更名为《情感反诈模拟器》，游戏内置的留言板功能被清空并下线。<br> 在微博平台，相关的话题被屏蔽，搜索部分关键词会显示“该话题内容未予显示”。<br>   小黑盒官方号被封禁。<br>   小红书上搜索“捞女游戏”相关内容时，无法显示，但搜索“情感反诈模拟器”则可以显示。<br>   《捞女游戏》女主刘梦茹被曝抖音衣服上有 girls supporting girls(已删除)。</p></blockquote><p>线下 DLC 频出，每出一个相关事件，必然引发热议，男女对立果然很有话题度。然而现实是为女性发声可以，为男性发声封禁，一国两制，讽刺之至。但凡看过一点游戏内容，也不至于让制作组受此待遇。</p><p>至于游戏制作发行方是否的确有通过敏感话题吸引流量一说，确实不是特别好评判，但至少游戏本身不只是为了吸引流量，作品的三观非常正。前两章直播诈骗、渣男套路可谓非常贴合之后的「情感反诈」主题了。可惜这些都是老生常谈的内容，并没有太多深度，只能给到一些小朋友（刚上大学或者刚毕业）一种另类的视听体验去强化这些基础反诈知识了。</p><p>最后，游戏本体 33 元，首发 88 折，只要 29 元，放在同类游戏中也是相当便宜且有竞争力的。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>steam</tag>
      
      <tag>影游</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价《原神》丝柯克传说任务「磷星之章」？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E4%B8%9D%E6%9F%AF%E5%85%8B%E4%BC%A0%E8%AF%B4%E4%BB%BB%E5%8A%A1%E3%80%8C%E7%A3%B7%E6%98%9F%E4%B9%8B%E7%AB%A0%E3%80%8D%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E4%B8%9D%E6%9F%AF%E5%85%8B%E4%BC%A0%E8%AF%B4%E4%BB%BB%E5%8A%A1%E3%80%8C%E7%A3%B7%E6%98%9F%E4%B9%8B%E7%AB%A0%E3%80%8D%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>前半部分的训练略显无聊，铺垫显得有点重复且长；后半部分内心世界的演出堪称顶级，通过角色的内心挣扎与成长，展现了初心与情感的重要性，让人深受共鸣和治愈。</p><p>丝柯克传说任务的亮点并不在剧情上，整体故事的起承转合都不那么明显，剧情脉络也非常简单清晰。总结一下剧情，就是极恶骑的好友惦记旅行者和丝柯克的能力，对旅行者下了手，并引出了丝柯克。二人一番修行后（武力与心性兼修），找出始作俑者，并成功解决了问题。</p><p>真正的亮点在于将角色故事以及相关的背景设定，巧妙地融合在故事里。比如丝柯克过去的故事，比如极恶骑的理念，还有降临者、世界的一些基本设定，这次真的是「世界级剧情」了。</p><h2 id="降临者与偷渡客"><a href="#降临者与偷渡客" class="headerlink" title="降临者与偷渡客"></a>降临者与偷渡客</h2><p>这个情报在 PV 中已有所提及，这次剧情里再次强调。我之所以在这里又一次说明这一点，是因为我完全反对 4.8 里旅行者摄像头化狡辩党口中的「旅行者是见证者」的措辞。</p><p>事已至此，见证者假说，或者纯粹的见证者而不干预世界的假说，可以说是完完全全破产。老米在 4.8 之后一直在强调旅行者的作用这一点，我也是非常满意。</p><p><img src="https://pic2.zhimg.com/80/v2-beadd14a22e3923b7538645503cf0a9c_1440w.jpg" alt="降临者会改变提瓦特的命运"></p><h2 id="训练与武痴"><a href="#训练与武痴" class="headerlink" title="训练与武痴"></a>训练与武痴</h2><p>整个传说任务几乎花了一半的篇幅在讲丝柯克点播旅行者训练剑术、元素力和实战，中间穿插丝柯克过去的记忆（什么记忆共享，奶奶醋坛子又要翻了）。尽管训练本质上就是非常枯燥，但如此过度的使用重复的内容还是容易让玩家感到厌烦，主要是这个打桩实在有些无聊。社区已有不少玩家在吐槽这一点了，不禁让人回想起在梅洛彼得堡的第一人称坐牢体验。</p><p><img src="https://pic1.zhimg.com/80/v2-44f558e18fff78fcc19a5159882ff233_1440w.jpg" alt="枯燥的训练，之前反雷电将军特训起码还有招式的区别和闪避时机把控的乐趣性"></p><p>不过正是由于这些负面体验，加上丝柯克一旁的指点，才让我们对丝柯克的武痴这一形象有了更深的理解。一个小时的篇幅，半功半过。</p><h2 id="生命绚烂，别被黑暗压垮"><a href="#生命绚烂，别被黑暗压垮" class="headerlink" title="生命绚烂，别被黑暗压垮"></a>生命绚烂，别被黑暗压垮</h2><p>如果丝柯克的人设只是武痴，那么角色的塑造一定是单薄而失败的，所以就有了保留初心与情感的小丝柯克在后半段的封神演出。</p><p>在极恶骑师父的教导下，丝柯克学习的是不断压制自己的情感，不断地变强；然而小丝柯克也是在不断地变强。前期就能在内心世界拨开黑暗，带旅行者略窥一二。后期更是能在丝柯克虚弱状态下带领旅行者观察全部的内心世界。</p><p>从水流源头的清澈，到末尾的浑浊与深渊化，非常具象地表现了丝柯克的内心。好在初心与情感自己找了上来，并且在旅行者的帮助下，理性与感性、目标与初心融合，丝柯克正视了自己，迈出了成为真正强者的重要一步。</p><p><img src="https://pic1.zhimg.com/80/v2-c34a7f10d413f8d5e391a45205328b91_1440w.jpg" alt="生命绚烂，别被黑暗压垮"></p><p>这句话太有力量了，感觉自己也有被共鸣和治愈到。生活充满了困难，但也别被黑暗压垮，回归初心，正视自己，刚好和我前几天生日的时候发的想法观点一致了。所谓二次元的美好与力量，不正是如此吗？</p><p>艾莉丝女士的含金量还在进一步提升。</p><p><img src="https://pic2.zhimg.com/80/v2-49eba28b1dcd4f963c744ba02634b9f6_1440w.jpg" alt="别忘了关注自己"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>剧情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《原神》5.7 版本魔神任务第五章•第六幕「你存在的时空」体验如何？</title>
    <link href="/post/%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-7-%E7%89%88%E6%9C%AC%E9%AD%94%E7%A5%9E%E4%BB%BB%E5%8A%A1%E7%AC%AC%E4%BA%94%E7%AB%A0%E2%80%A2%E7%AC%AC%E5%85%AD%E5%B9%95%E3%80%8C%E4%BD%A0%E5%AD%98%E5%9C%A8%E7%9A%84%E6%97%B6%E7%A9%BA%E3%80%8D%E4%BD%93%E9%AA%8C%E5%A6%82%E4%BD%95%EF%BC%9F/"/>
    <url>/post/%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-7-%E7%89%88%E6%9C%AC%E9%AD%94%E7%A5%9E%E4%BB%BB%E5%8A%A1%E7%AC%AC%E4%BA%94%E7%AB%A0%E2%80%A2%E7%AC%AC%E5%85%AD%E5%B9%95%E3%80%8C%E4%BD%A0%E5%AD%98%E5%9C%A8%E7%9A%84%E6%97%B6%E7%A9%BA%E3%80%8D%E4%BD%93%E9%AA%8C%E5%A6%82%E4%BD%95%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>旅人章的信息量从来不会让人失望，特别是这一次。虽然引入了时空错乱这一烧脑要素，但故事整体还算清晰明了，没有太多谜语人的成分。</p><p>关于故事剧情梗概和原学探讨已有不少人发表了自己的观点，我这里就不掺和了。我想主要从两个切入点讲一下剧情体验。一是时空悖论的震撼感，二是整体剧情的松弛感。</p><h2 id="时空悖论的震撼感"><a href="#时空悖论的震撼感" class="headerlink" title="时空悖论的震撼感"></a>时空悖论的震撼感</h2><p>首先这个时空错乱的信息非常好猜。从剧情标题，版本前瞻图，到故事细节推进，都无不在暗示这 500 年时间线的交错。但是我还是有被最后一幕「时之执政」伊斯塔露构造的交错场景震撼。</p><p><img src="https://pic1.zhimg.com/80/v2-80354aa85e928c51ffd4cab84a144bd2_720w.jpg" alt="错乱的时空"></p><p><img src="https://pic2.zhimg.com/80/v2-f19e45869e695c9ddd2e7778574b6aa7_720w.jpg" alt="交与不交飞船钥匙的抉择"></p><p>当这个选项一出来的时候，我原本轻松的神经一下就紧张起来了，生怕自己的选择会给这个新 npc 老婆带来不好的结局。一番思索后，我决定打破命运，收回钥匙。可惜命运并非如此轻易就可以改变，转手反主就把钥匙给了 NPC，结局还是一样。</p><p><img src="https://pic1.zhimg.com/80/v2-37ecbe48b6b6d0b4ebfa579e3083f54f_720w.jpg" alt="不愿错过五百年前与你重逢的机会"></p><p>所以时空悖论就是，未来的正主将钥匙交给了过去的人，过去的人保留着钥匙遇到了 500 年后还没交出钥匙的正主。此一时空中存在三把钥匙，凭空多出来的一把就是悖论。（有一说一，飞船钥匙在第一幕出现的时候还略显突兀，降临者双子居然是坐飞船来提瓦特的，一下子逼格略降，稍稍吐槽下。不过最后悖论的关键点就是飞船钥匙，它的必要性又无可取代，是个不错的媒介。）</p><p>如此巧妙的设计，不禁一下就让我联想到了一个古早的游戏——《Stanley 博士的家》。2 代里也有时空穿梭的元素，里面有个道具——改锥，和飞船钥匙有异曲同工之妙。大致剧情就是未来时间线的主角通过过去的自己捡到的改锥爬上了楼梯，达成了干扰过去时间线主角的目标；而过去时间线的主角是如何捡到这把改锥的呢，就是在被干扰后在梯子现场捡到的。如此一来，这个改锥就在某个时空凭空出现了。</p><p><img src="https://pic3.zhimg.com/80/v2-cad96562332afeef63189498e73ba20c_720w.jpg" alt="凭空出现的改锥"></p><p>原作游戏诞生 20 年前，整体剧情相当优秀，各种解密也非常有趣，有兴趣的读者可以自行体验游玩或观看相关视频。</p><h2 id="整体剧情的松弛感"><a href="#整体剧情的松弛感" class="headerlink" title="整体剧情的松弛感"></a>整体剧情的松弛感</h2><p>我发现纳塔版本的剧情，在日常部分很有喜剧的特色，无论是活动剧情，还是主线剧情。这次的旅人章，在日常部分也充满了这种松弛感，人人都是段子手，让人忍俊不禁。</p><p>以前还没发现，伊安珊的搞笑天赋也是不俗的，总是能一本正经的讲出意想不到的话（原谅我奇怪的笑点）。</p><p><img src="https://pic4.zhimg.com/80/v2-d78d61dd6015c9b010157a2dce316dcf_720w.jpg" alt="伊安珊一个眼神搞定了派蒙"></p><p><img src="https://pic3.zhimg.com/80/v2-379fc1aa127579c30b23035c85da6661_720w.jpg" alt="深渊教团报仇说"></p><p><img src="https://pic3.zhimg.com/80/v2-55d364f454ed681d1ab08c109bca2b71_720w.jpg" alt="常见到可以毁灭世界的兄妹矛盾"></p><p>玛薇卡尽管没几句台词，但也金句频出，特别是那句揍你哥哥一拳（话说男主视角揍妹妹一拳真的没问题吗？这可是火神的一拳）。</p><p><img src="https://pic2.zhimg.com/80/v2-74ca7fefb9ce998ad36bf603319febf8_720w.jpg" alt="「教训」"></p><p>茜特菈莉奶奶已经快变成谐星了，不仅嘀咕的毛病没改，还要再加上吃醋的 tag。</p><p><img src="https://pic1.zhimg.com/80/v2-3bdd28845e6b158a70c12272937c6f92_720w.jpg" alt="派蒙：我觉得你可以不用说出来"></p><p><img src="https://pic1.zhimg.com/80/v2-1bfe75ca926fb0e65ec001fa3d136c8c_720w.jpg" alt="OS：我也想拉"></p><p>令人意想不到的一向严肃的戴因也有很搞笑的台词——死一百次<code>*</code>2。</p><p><img src="https://pic4.zhimg.com/80/v2-eaa6d0e6e57a960f22d71823ae5bfca3_720w.jpg" alt="你们两个不死人不要再打了"></p><p>最后，坎瑞亚 NPC 妹子很可爱，拉下手就脸红，对视 3 秒就是极限，妹妹视角的「姛味」有点重了。不过作为哥哥视角还是很香的，又是后悔选妹妹的一集。</p><p><img src="https://pic1.zhimg.com/80/v2-1eadfc804b3d51e8872636df2844e4ac_720w.jpg" alt="最近新增的脸红表情（爱可菲待机动作也有）"></p><p><img src="https://pic1.zhimg.com/80/v2-689db95980bfd23eedb2ad37dddeab84_720w.jpg" alt="三秒"></p><p>希望老米最够拯救世界的时候能留这个 NPC 一条活路。</p>]]></content>
    
    
    <categories>
      
      <category>原神</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>剧情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于概率方法的Excel数据构造方法</title>
    <link href="/post/%E5%9F%BA%E4%BA%8E%E6%A6%82%E7%8E%87%E6%96%B9%E6%B3%95%E7%9A%84excel%E6%95%B0%E6%8D%AE%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95/"/>
    <url>/post/%E5%9F%BA%E4%BA%8E%E6%A6%82%E7%8E%87%E6%96%B9%E6%B3%95%E7%9A%84excel%E6%95%B0%E6%8D%AE%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<p>起因是工作中突然接到了一个需求，需要模拟一些数据。</p><p><img src="https://pic4.zhimg.com/80/v2-4c8cee909bfdfdf265086ca13267c7f5_720w.jpg" alt="原始数据可视化"></p><p>原始数据大约有 10000+的数据量，从可视化结果上大致可以得出特征：</p><ul><li>数据比较稳定，偶有一些波动；</li><li>大体上呈现一定的上升趋势，但上升速度比较缓慢，总体也就增长了 1、2 这样。</li></ul><p>需求：保持数据的整体特征不变，但末尾呈现更加明显的增长趋势。</p><p>本来想着开 vscode 写 python 代码了，突然一想有点麻烦，不如在原来的 excel 里试一试。</p><p>当然如何在 excel 里造这样的数据，我也毫无思路，于是果断问起了大模型。</p><blockquote><p>excel 生成范围内随机自然数，多个连续自然数有较好的连续性，不会随意上下变动。</p></blockquote><p>大模型首先给出了 RANDBETWEEN 函数，但是这个函数相邻数据间的波动过于频繁，显然与原始数据模式不同。</p><p><img src="https://pic2.zhimg.com/80/v2-98a4b3389fca0efa5c84ed5b6338e73a_720w.jpg" alt="RANDBETWEEN(-1,1)可视化"></p><p>于是追问：</p><blockquote><p>这样前一个数和后一个数可能都会不同，能不能提高前后数值的一致性，一个数连续出现几次，然后再随机变成另一个数。</p></blockquote><p>大模型又给出了新的方案，通过构造一个计数器的中间值，当中间值满足计数条件的时候，再对上一个数值进行变动处理。</p><p>仔细看了下大模型的输出，虽然细节上有点问题，但整体思路 ok，于是照着这个流程开始试验。</p><p>第一步，生成一列随机数，使用 RANDBETWEEN 函数生成 1-100 的随机数。</p><p>第二步，计算变化量列，当随机数那一列的值达到某种规则的时候，对应的变化量为-1，0 或 1。由于我的要求是相对快速上升，于是大致定了随机数为 1 的时候，变化量为-1；随机数为 99、100 的时候，变化量为 1；其余为 0。翻译一下，就是 2%概率+1，1%概率-1，97%不变。其中转化过程使用 IFS 函数：IFS(A1&gt;&#x3D;99,1,A1&lt;&#x3D;1,-1,AND(A1&gt;1,A1&lt;99),0)。</p><p>第三步，用上一个值+变化量构造目标数据。</p><p><img src="https://pic1.zhimg.com/80/v2-9975ee0f7aea5535240f5ee9b3b4e2fc_720w.jpg" alt="最终结果可视化"></p><p>最终模拟了 500 个数据，从结果上看和原始数据的特征大体一致。值得注意的是，随机结果具有不稳定性，且 500 个数据量也不是特别大，可能需要多次尝试并找到合适的结果。</p><p>本文重在介绍思路，很多数据构造的需求完全可以由 excel 来实现。比如在此基础上，可以调整波动范围（IFS 函数多设置几个条件，概率也可以调整），直至生成自己满意的数据。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>概率</tag>
      
      <tag>数据分析</tag>
      
      <tag>Excel</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价《原神》5.6的魔神任务《悖理》？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-6%E7%9A%84%E9%AD%94%E7%A5%9E%E4%BB%BB%E5%8A%A1%E3%80%8A%E6%82%96%E7%90%86%E3%80%8B%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-6%E7%9A%84%E9%AD%94%E7%A5%9E%E4%BB%BB%E5%8A%A1%E3%80%8A%E6%82%96%E7%90%86%E3%80%8B%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>出色的前瞻铺垫与渲染，不错的庭审与反转，温馨的老角色回顾，以及王炸的伏笔回收和新卫星引出。总体个人评分 8.0 吧。</p><hr><p>要说本次主线最出色的部分，我愿意投给前瞻给出的版本图和 PV。</p><p><img src="https://pic4.zhimg.com/80/v2-0885cf6ccbcf254bcf4b6659b4c67d6b_1440w.jpg" alt="悖理"></p><p>4.8 版本给出过雪山杜林复活的大伏笔，所以纳塔版本有蒙德的故事是有所预料的。不过待到 5.6 才端出来，而且给了一个间章的魔神任务，还是有那么一点意料之外。毕竟强相关的阿贝多两章故事和夏活剧情都是限时的，这次终于整合到主线了。</p><p>「悖理」二字的含金量，配合版本图，「大的要来了」的感觉十分强烈。琴和温迪，就如画面呈现的那样，分别代表蒙德的明与暗两大领袖；阿贝多 C 位结合雪山的背景，必然和杜林有关；剩下的凯亚，又是坎瑞亚后裔，直击原的核心主线；再加上「悖理」二字，违背天理。整合这么多劲爆内容，这个故事究竟会有多少大料出来，狠狠期待了，这也是前瞻消息一出时社区大部分的内容偏向。</p><p>顺便 PV 里还透露了魔女会、法尔伽，以及重量级的阿贝多谋杀被审判的戏码，和版本图交相呼应。作为版本宣传，这无疑是相当成功的一回，从 PV 播放量在版本末期逆势回涨也证明了这一点。</p><hr><p>说回剧情本身，「悖理」差不多可以分为三个主要章节——一是庭审，二是蒙德城保卫战，三是根除杜林问题。</p><p>庭审部分是相当出彩的叙诡下的悬疑故事。「阿贝多杀人埋尸」，这一重磅引子，有很多亮点可以解析。</p><p><img src="https://pic1.zhimg.com/80/v2-0b6a624494300b42c65737dc156ba774_1440w.jpg" alt="庭审"></p><p>一是阿贝多的身份特殊，人造人、炼金术，很早就提到的「失控了希望旅行者来阻止」，还有假冒阿贝多的 2 号、3 号等相关剧情，阿贝多的人设确实有很多亦正亦邪的成分，加上茫茫烟雾弹，玩家确实很容易陷入此阿贝多是否真的杀人埋尸的怀疑中。</p><p>二是指控方赫塔，「西风骑士团」后勤，虽说不是什么著名 NPC，但也算有头有脸的正方角色，类比于「检方」，不会无缘无故控诉同僚。</p><p>三是证据链齐全。两起案件，三层证据，层层递进，几乎无懈可击，里面的证人还有我们熟知的卢老爷，也难怪第一场庭审就认定了阿贝多有罪。玩家虽然感觉有一些不对，但也不得不被眼前的已有信息说服。</p><p>后面的反转，赫塔是魔物幻形，蒙德城早已有很多人受到魔物的影响，骑士团几乎全员做局。这些信息并没有透露给旅行者（玩家），算是典型的叙诡。反转整体做得铺垫很满，从 NPC 的行为异常，到好几个版本前的内鬼 NPC 剧情，再到各种以前的主线支线，完全是非常合理的反转。不过我作为玩家还是很难猜到具体的方向，也算是独特的剧情体验了。</p><p>不过我还是更喜欢前半庭审部分的悬疑氛围塑造上，之后的反转虽然精彩，却难有一种震撼的感觉，有种只是被告知了结果「哦，原来如此」的感觉，仅此而已。</p><p>蒙德保卫战，老角色战斗试用，有一点公式化的老角色登场怀旧，没有什么特别出色的地方，也没有什么硬伤。比较难崩的是城门口卢老爷和凯亚战斗试用的时候把卢老爷玩去世了，原始人的数值一眼难尽，霜铠王依旧是萌新噩梦。还有就是角色逸闻，蒙德高层里估计只有芭芭拉不知道风神巴巴托斯是传奇卖唱酒懵子了。</p><p>最后的根除杜林威胁的部分，就是纯粹填坑与挖坑了。用杜林的心脏和魔女会特有材料，塑造了小杜林的身躯，点了一下悖理的题，雪山杜林的故事（加上 4.8 童话书小杜林的故事）终于告一段落了；还有法尔伽三方会谈，魔女会究竟有着怎样的实力，莱茵多特吞噬生之执政（这一点也很悖理）的情报也逐渐展开。赠送的国际象棋 boss 战也是设计得非常巧妙。</p><p><img src="https://pic1.zhimg.com/80/v2-be2830de5967121a1f8a70e4fa2dd3c8_1440w.jpg" alt="小杜林成人"></p><p>可惜 4.8 明明约好了杜林的故事会让流浪者一起参与解决，这次最终并没有正面出场，同为人造人，还是略感遗憾。从时间上来看，这一版本回收 4.8 的故事也略显晚一些，恐怕 4.8 起的大节奏着实有了让老米修改剧本的可能性。</p><hr><p>总结一下，《悖理》虽为主线蒙德间章，但故事内核上更像是阿贝多传说任务 2，探讨人造人如何融入社会的话题。这个话题并没有那么新颖，在 AI 概念的阶段，就有不少小说、电影都在探讨。有关前瞻 PV 里透露的温迪、凯亚的主线剧情猜测也在剧情落幕的时候破产了——并没有那么多的大料。</p><p>庭审部分的悬疑设计非常出彩，但最后的收尾略显平淡，用炼金术「伟业」作为最终过场动画，总感觉没有彻底解决杜林问题的直观感，少一段战胜魔物的 CG。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>剧情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从破圈到回归——《原神》纳塔版本中期回顾</title>
    <link href="/post/%E4%BB%8E%E7%A0%B4%E5%9C%88%E5%88%B0%E5%9B%9E%E5%BD%92%E2%80%94%E2%80%94%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E7%BA%B3%E5%A1%94%E7%89%88%E6%9C%AC%E4%B8%AD%E6%9C%9F%E5%9B%9E%E9%A1%BE/"/>
    <url>/post/%E4%BB%8E%E7%A0%B4%E5%9C%88%E5%88%B0%E5%9B%9E%E5%BD%92%E2%80%94%E2%80%94%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E7%BA%B3%E5%A1%94%E7%89%88%E6%9C%AC%E4%B8%AD%E6%9C%9F%E5%9B%9E%E9%A1%BE/</url>
    
    <content type="html"><![CDATA[<p>距离《原神》节奏最大的 4.8 版本已过去大半个纳塔版本，不仅纳塔的主线已经完结，纳塔的地图也基本更新完了，剩下内容的估计就是支线烬寂海 DLC 或者挪德卡莱预热了。</p><p>自从上次锐评 4.8 版本节奏后，虽然断断续续写过一些剧情感触、游戏设计层面的回答，但感觉少了一篇 4.8 版本后游戏变化的总结。所以，本篇将以 4.8 锐评的两个关键点——主角摄像头化和头铁用散兵出发，聊聊纳塔的设计思路的变化。</p><p><a href="https://www.zhihu.com/question/662355717/answer/3591240349">朝花夕拾，从须弥到童话国，散兵剧情节奏冲突到底源自何处?</a></p><p>体感上而言，纳塔版本确实有了很多的改变，无论是剧情设计、角色设计还是地图设计。</p><h2 id="剧情设计"><a href="#剧情设计" class="headerlink" title="剧情设计"></a>剧情设计</h2><p>首先是剧情设计上，在经历一整个枫丹主线上的主角摄像头化后，纳塔版本（包含活动支线剧情等）终于是回归了游戏「主角」应有的待遇上。这种主角待遇并非无脑龙傲天，而是一种符合设定伏笔，展现主角特性，又不失其他角色高光展示的塑造。</p><p>回顾一下这大半年主角都有哪些高光时刻：</p><p>1.净化深渊之力。一个从开服就透露的能力终于在纳塔主线中再度回归。虽然实质上没起到决定性或扭转局面的作用，但让主角拾回了一种独一无二的能力。</p><p>2.元素力的使用。自从稻妻结束后，旅行者使用元素力的镜头少之又少（草、水印象里就没用过，还有很多危急时刻也想不起来用很是让人吐槽）。虽然纳塔版本出了点「意外」，没和神像共鸣学习火元素力，但制作组也算是想起了原来主角已经有好多种元素力了（给了一串镜头意义不明的多元素力表演），更别说在深渊最终 boss 战里独特的火元素力和命座加持了。</p><p>3.降临者的独特性。从草国得到的降临者身份情报，然后一整个水国没怎么展示。唯一有点可能的场景是，密闭空间里芙芙可以向旅行者透露保守的秘密，但是并没有。这段本来是可以拉高旅行者评价的，可惜编剧选择了继续拉高芙芙评价。然后火国则基本上一直在强调这一点，无论是主线对抗深渊，甚至海灯节脱离地脉规则救胡桃都是如此。</p><p><img src="https://pic1.zhimg.com/80/v2-61f83032d6c3a3bf7bc88ae63b04cc1f_1440w.png?source=d16d100b" alt="主角救场（与钢炼有种莫名的相似感）"></p><p><img src="https://pic1.zhimg.com/80/v2-e1ad4e2e7e112a0d18ed3e403798f3f2_1440w.png?source=d16d100b" alt="可惜钢炼里没当场救出来"></p><p>p.s.经评论区指点，这一救场场景和《EVA 破》救绫波丽的场景更相似。</p><p><img src="https://picx.zhimg.com/80/v2-522202cd0a1e081419d08f81c5fa80f9_1440w.png" alt="「EVA破」拼尽全力救绫波丽的真嗣"></p><p>4.参与感与影响力。4.8 版本的时候，一度有过主角是见证者还是参与者的讨（si）论（bi）。当时我的观点是，主角应该要增强参与感与玩家代入感，人机感太强的见证者在二游里实在无聊。好在这一点在纳塔版本改善很多，无论是战争的刻画，还是更多剧情 PV 的参与，以及很多人物关系的影响（奶奶、胡桃、瑞希，还有最喜欢的大世界常驻角色剧情游逸旅闻）。特别是对美少女角色的 ML 式（其实很弱）剧情，感觉突然这大半年喂的又多又大胆，有种宅男向游戏回归之感。</p><p>至于散兵的剧情安排上，目前整个纳塔版本都没有出现散兵的情报（花神诞祭仅作为彩蛋蹲在某个角落），4.8 版本最直白的雪山杜林复活的伏笔完全没有回收。哪怕是前瞻最有可能的蒙德间章主线，也并没有安排散兵的出现（当然实际版本说不定会安排一下）。</p><p>如果这层伏笔没回收，很难评判 4.8 版本头铁用散兵的用意，以至于用了一次后有种再也不敢端出来的感觉。</p><p>另外纳塔主线落幕的时候有个 4.8 伏笔回收的热门视频，什么椅子对应、过去未来现在对应、NPC 发色与主角团对应等等。如果说 3.8 乐园里纯水精灵化人是对枫丹主线的暗示，那么 4.8 的暗示实在是有些抽象。在我看来是属于有点阅读理解了，只是相似的抽象概念重合而已。</p><h2 id="角色设计"><a href="#角色设计" class="headerlink" title="角色设计"></a>角色设计</h2><p>关于角色设计，之前写过一篇回答讲述纳塔角色设计的用心程度和部分世界观上的突兀感。</p><p><a href="https://www.zhihu.com/question/4766877606/answer/68750829105">我认为纳塔角色明显进步了，为什么很多人认为纳塔角色不如前五国？</a></p><p>总体而言，原的角色设计很有地区独特性。纳塔因为文化差异的原因，角色设计的美学不敢苟同。但不妨碍还是有那么些角色美少女感很强，比如奶奶、蓝砚、爱可菲。老米这一方面的能力是绝不缺的，无非是如何与世界观融合得更好一些。</p><h2 id="地图设计"><a href="#地图设计" class="headerlink" title="地图设计"></a>地图设计</h2><p>纳塔共有三次地图更新，分别是初版、奥奇卡纳塔、火山（远古圣山）。初版属于略带纳塔风格的普通地貌；奥奇卡纳塔是奇幻风格地图的又一力作，高空与深渊，在一次 boss 战的演出中表现得淋漓精致；火山属于远古科技风格的地图，有种亮色版渊下宫的感觉（由于没探索玩就不多做评价了）。</p><p>地图设计上有一些风格的变化，比如会考虑独特的角色跑图能力，有种为了角色而设计地图的感觉。</p><p>另外就是地图任务的设计上也有了改变——在探索中发现事件，而不是跟着超长的世界任务去跑图，自由探索中很少有卡点。这一点我在稻妻版本完结后也有提及，讲到自己并不喜欢强制跟着地图任务跑图，丢失大世界设计的乐趣。之后须弥的地图设计可谓完全背离我的游玩偏好，再后来枫丹、纳塔有所改善。</p><p><a href="https://zhuanlan.zhihu.com/p/556926738">爱丽丝的人偶一号：再谈《原神》玩法：写在须弥更新之前</a></p><p><img src="https://picx.zhimg.com/80/v2-55c1f7c5d636149d9813bb82cd5fa270_1440w.png?source=d16d100b" alt="2年前的锐评"></p><p>结合前几天挪德卡莱设计理念的前瞻，还有最近的关于地图探索的问卷里特别提到的「自由探索体验」，我确实感觉地图设计也在回归。</p><p><img src="https://pica.zhimg.com/80/v2-f5384a4a386cf1436e9f8c188df9cdf2_1440w.png?source=d16d100b" alt="支线任务与地图「润物细无声」的融合"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>从破圈到回归，是我对这大半年来《原神》的一些变化的高度总结。无论是客观层面流水、热度的回归，还是主观层面游戏设计理念与玩法体验的回归。旅行的意义，这次好像真的回来了。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何预期《原神》5.3火神玛薇卡的卡池流水？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E9%A2%84%E6%9C%9F%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-3%E7%81%AB%E7%A5%9E%E7%8E%9B%E8%96%87%E5%8D%A1%E7%9A%84%E5%8D%A1%E6%B1%A0%E6%B5%81%E6%B0%B4%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E9%A2%84%E6%9C%9F%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-3%E7%81%AB%E7%A5%9E%E7%8E%9B%E8%96%87%E5%8D%A1%E7%9A%84%E5%8D%A1%E6%B1%A0%E6%B5%81%E6%B0%B4%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>比起流水，我更在意实际的抽卡数据，毕竟流水可以被多端分散，上传抽卡数据的玩家相对还是忠诚的，除非退坑不抽也不上传数据了。</p><p><img src="https://pic1.zhimg.com/80/v2-63f1ebca0aa0d259dc3049b02e5a5328_1440w.jpg" alt="火神1礼拜抽卡数据，将将10w抽取量"></p><p><img src="https://pic2.zhimg.com/80/v2-1569a815c1a3e8e267dcd72eecfb1e30_1440w.jpg" alt="水神37w"></p><p><img src="https://pic4.zhimg.com/80/v2-42f7c688388e5043f2dd27ff979f5df7_1440w.jpg" alt="草神34w"></p><p>虽然卡池还未结束，但是按照以往数据，首周抽取数量占比过半。就算之后的抽卡再补偿一倍，火神也就刚满 20w，远不如之前的水神、草神卡池，可谓失败的神池设计，尽管看起来是近期流水最高的卡池。所以看到还在盲目吹的 xz 们，实在是有些好笑。</p><p>按照惯例随便分析些原因吧。</p><ol><li>火神的领袖人物塑造绝对亮眼，不过在 5.0、5.1 表现更为亮眼，5.3 的表现只能说平平，或者说被黄毛主角和队长分摊了。这可能影响一些摇摆位的抽卡意愿，如果火神在最高光的时刻开卡池，可能情况还会好些。</li><li>角色试用关卡设计的乌龙，不少玩家在角色试用中把火神给玩阵亡了，属实年度笑话了，甚至官方紧急更新关卡角色配队。本来一个数值慷慨，技能设计有趣度高，试用关卡应该是收割一波好感的，这一操作估计让多少摇摆位玩家放弃了，也不知设计师要扣多少年终了。</li><li>火神在外观设计上实在有些脱离核心玩家群体的 xp（被奶奶分走了），皮衣摩托什么的，注定让不少玩家望而却步，起码抽高命的真爱档会少很多。</li><li>角色定位为主 C，而主 C 向来不保值，配队上还要绑定一些纳塔角色才会有更出色的数值效果，对于那些缺纳塔角色的玩家，基本拉不开和老主 C 的差距。</li><li>奶奶分走了部分抽卡，以往神池中抽另一个角色占比最高的卡池。如果算上奶奶，合计抽卡数量到卡池结束的时候倒也不算也以往有太大差距，不过对于神而言还是差了一些。何况若是奶奶放在下半，估计抽取数量还会更高些。</li></ol><p>顺便补个仆人卡池，同为火 C，火神在强度、大世界能力都压一手的情况下估计还是打不过仆人。所以究竟是玩家流失了，还是玩家不怎么想抽火神呢？另外流水层面，仆人卡池超抖登顶，虽然火神也是久违地再次超抖，并且恰好时间打平（33h），可惜被腾讯三剑客单防，无缘登顶。</p><p><img src="https://pic1.zhimg.com/80/v2-27484cc226dfb394229f00d9367d7e39_1440w.jpg" alt="阿蕾奇诺26w"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>商业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价2025年1月米哈游《原神》5.3任务剧情《炽烈的还魂诗》？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B72025%E5%B9%B41%E6%9C%88%E7%B1%B3%E5%93%88%E6%B8%B8%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-3%E4%BB%BB%E5%8A%A1%E5%89%A7%E6%83%85%E3%80%8A%E7%82%BD%E7%83%88%E7%9A%84%E8%BF%98%E9%AD%82%E8%AF%97%E3%80%8B%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B72025%E5%B9%B41%E6%9C%88%E7%B1%B3%E5%93%88%E6%B8%B8%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-3%E4%BB%BB%E5%8A%A1%E5%89%A7%E6%83%85%E3%80%8A%E7%82%BD%E7%83%88%E7%9A%84%E8%BF%98%E9%AD%82%E8%AF%97%E3%80%8B%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p><strong>王道剧情，有史以来最出色的 boss 战演出，最有 rpg 代入感的一集。</strong></p><p>回忆一下以往的 boss 战，玩家可以自由组队，真正战斗的并非玩家所扮演的旅行者，而是不知道从哪里冒出来的「伙伴」。最多加个额外试用，以及一段 cg 动画又把相关人员拉回来。这也是我一直以来诟病的剧情演出上的缺陷。有时候会为了增加自己的沉浸感，强行调整配队，然后被打得毫无还手之力。</p><p>但是这次的 boss 战，配队只有火主和火神，还是官方配置不用自己练，完美契合剧情。还有当场获取火元素力超帅画面和离谱命座强化，给了一个旅行者单挑的阶段，拉刀光更是最帅的单手剑技能模组。至于什么合体技、强化击、伙伴羁绊什么的，虽然老套但架不住战斗时看着帅，100 多万的大数字有谁讨厌呢。</p><p><img src="https://pic4.zhimg.com/80/v2-a782ada5c1cbb912e5d3d32e7e30fa92_720w.jpg" alt="1429542！"></p><p>另外 boss 战前的秘境跑图铺垫也是很满意。经历过的剧情，主线也好支线也好，大家都来帮忙（支线不做的话就不回来帮忙哦，能看到之前牺牲的众人活在夜神之国也算是了却一桩遗憾），各种龙伙伴的能力无缝使用。还有剧情杀切场外，众人齐唱还魂诗，主角「复活」再战。种种种种，真正诠释了什么是「我们不会孤军奋战」。</p><hr><p>讲完值得夸奖的地方，按照惯例再来讲缺点（因为再次吃满保底）。</p><p>第一、boss 战剧情杀演出细节问题。本来在龙脚底打怪，突然被卡视角，一句「小心，旅行者」，什么都没看清就被剧情杀了。这里需要一段更明显的剧情杀演出。</p><p>第二、战前预备实在有些拖沓。本来玩家就被拖了 2 个大版本的时间了，期待能够 5.3 一上就能直奔决战，然后又拖了 2 个小时的前奏。什么战前宴会、古名打造测试、队长铺垫，虽然也挺重要，但也不至于拉这么长，有强行拖时长的嫌疑，节奏把控有缺陷。</p><p>第三、队长结局的处理。虽然队长一身死亡 buff 死亡在所难免，最终以不死诅咒对抗「死之执政」的死亡代价，解放了背负的灵魂完成了自己的心愿，并永远坐上冰封王座很是震撼。但剧情表现上还是有些硬伤，为了藏队长替火神赴死这个关键信息，队长一整个决战都藏了起来，然后突然在结局被欧洛伦带过来实在有些唐突。另外就是剧情一直在暗示火神一定会支付死亡的代价，最后为啥会能够让队长顶死也很容易让玩家摸不着头脑。回顾了下「死之执政」的台词，原来死亡的代价不一定是火神，是能承受强大力量之人或是无数普通人的死亡。这句话实在有些歧义，加上奶奶一直强调火神的命运始终是死亡，误导很严重啊。</p><p><img src="https://pic4.zhimg.com/80/v2-9ad632672a7b0dac2b1415434d7ddcd8_720w.jpg" alt="死亡代价的支付"></p><p>第四、又挖了神之心和至冬的坑。本来一个国家主线结束，神之心的问题应该结局，并前往下个国度，这次又是打破规矩空降其他设定，鉴定为还没想到至冬的主线强行再缓一缓。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>剧情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我认为纳塔角色明显进步了，为什么很多人认为纳塔角色不如前五国？</title>
    <link href="/post/%E6%88%91%E8%AE%A4%E4%B8%BA%E7%BA%B3%E5%A1%94%E8%A7%92%E8%89%B2%E6%98%8E%E6%98%BE%E8%BF%9B%E6%AD%A5%E4%BA%86%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BE%88%E5%A4%9A%E4%BA%BA%E8%AE%A4%E4%B8%BA%E7%BA%B3%E5%A1%94%E8%A7%92%E8%89%B2%E4%B8%8D%E5%A6%82%E5%89%8D%E4%BA%94%E5%9B%BD%EF%BC%9F/"/>
    <url>/post/%E6%88%91%E8%AE%A4%E4%B8%BA%E7%BA%B3%E5%A1%94%E8%A7%92%E8%89%B2%E6%98%8E%E6%98%BE%E8%BF%9B%E6%AD%A5%E4%BA%86%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E5%BE%88%E5%A4%9A%E4%BA%BA%E8%AE%A4%E4%B8%BA%E7%BA%B3%E5%A1%94%E8%A7%92%E8%89%B2%E4%B8%8D%E5%A6%82%E5%89%8D%E4%BA%94%E5%9B%BD%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>先说结论——的确有进步，但是还不够，玩家会因为新角色突兀或者对老角色的回忆美化而觉得纳塔角色不如老角色。</p><p>目前已经推出&#x2F;即将上线的纳塔角色有玛拉妮、基尼奇、卡齐娜、希诺宁、恰斯卡、欧洛伦、玛薇卡、茜特菈莉。这些角色在立绘、建模、技能设计上都已实装或有可靠情报，基本可以拿出来聊一聊。伊安珊尽管有了建模，但技能未知，不做评价。</p><p><img src="https://pic4.zhimg.com/80/v2-24b1b0e5cf49352e3a2970c438553d9b_720w.jpg" alt="纳塔角色图鉴"></p><p>玩家关注的角色设计构成，可以包含外观、动作&#x2F;表情、剧情、语音、技能设计及数值等不同的部分。抛开剧情、语音、技能数值三个部分，主要这些都随角色变化不是很稳定，很难总结出什么好谈的；再者纳塔角色数值强度有一半在专属两套圣遗物上，角色本身也就那样。</p><p>首先是外观，虽说外观美术这些总体来说还是看不同玩家的喜好，以个人视角来说纳塔角色水平依旧是不稳定。我的话，有特别喜欢的茜特菈莉奶奶、基尼奇，也有想吐槽的火神，还有其他泯然众人，果然还是喜欢「二次元」味重一些的角色。</p><p>不过虽说外观设计不稳定，但也有共同值得夸赞的部分——夜魂加持特殊外观。要说纳塔角色的外观设计上有什么特点，绝对是多多少少的皮肤涂鸦&#x2F;彩绘，以及夜魂加持状态下强化的彩绘+周身亮光特效。酷炫！好看！总之就是让角色外观上了一个层级，我仍然记得 5.0 前瞻时因夜魂加持状态的角色外观而眼前一亮的感觉。</p><p><img src="https://pic2.zhimg.com/80/v2-f215816f2fb12f231c8c8548348cc6d7_720w.jpg" alt="夜魂加持特效"></p><p>第二，动作表情设计。原有个一直被吐槽的问题，就是除了 CG，角色的剧情动作就是翻来覆去套用几个基本动作，什么叉腰抱胸伸手，甚至某些技能动作也高度复用（重击、下落攻击重灾区）；至于表情，更是基本没有，偶尔有了几个也略显僵硬尴尬。</p><p>不过纳塔在这方面还是有了很多的进步，看到了更多的动作表情，剧情演出也更加细腻。有很多名场面都非常有记忆点，很容易唤起玩家的好感，也让玩家的游戏体验上了一个层级。这里提名玛拉妮的动作设计。虽说大部分角色都会有自己独特的动作（至少待机动作还是够鲜明的），但玛拉妮因为独特的冲浪板动作体系，还是让人很有抽的欲望。</p><p><img src="https://pic4.zhimg.com/80/v2-294972adfe8b2380e2a8a39cdc2dbfc0_720w.jpg" alt="玛拉妮动作表情设计"></p><p>然后就是剧情里奶奶的演出，生气醉酒名场面，加上各种全新的动作表情，奶奶几乎就是纳塔人气最高的角色了（到时候抽卡数据出来，抽奶奶的人比火神高就有乐子了）。</p><p><img src="https://pic2.zhimg.com/80/v2-eef4e224ef3a76e832a7b702b30c8d22_720w.jpg" alt="奶奶可爱捏"></p><p>最后就是纳塔的角色技能设计，比以往角色普遍多出一个被动夜魂相关的技能，还有人均特殊的跑图探索能力，只能说投入更多更用心了。相比枫丹时期，几乎没有什么额外成本的荒芒属性设计亮眼很多。还有就是很多角色的技能看上去玩起来都有趣很多，有很多记忆点，比如玛拉妮的冲浪攻击、基尼奇的像素攻击、恰斯卡的飞天大枪、火神的海陆空全场景摩托等等。</p><p>说完了进步的地方，再简单讲讲仍旧不足的地方。</p><ul><li>一是确实纳塔在角色创新上过于脑洞大开了，有些脱离玩家在「剑与魔法」幻想世界中可能出现元素的范畴。属于那种玩家第一眼看到会打「？」的元素。点名基尼奇的像素、希诺宁的打碟、火神的摩托（还有火神 PV 里突然组起了乐队），基本都是没什么铺垫突然窜出来一个绝对不会料想到的元素。你要硬是强行套世界观也能圆上，但总归会有一些突兀感。《旷野之息》里也有摩托车，但古代科技铺垫的很合理，完全没有突兀感。</li><li>二是动作表情依然有提升空间，剧情演出还是能看到一些不怎么合适的老动作模板套用的场景。看看一测剧情演出神乎其神的《异环》，再不济最近大火的 2 人开发 2 年的独游《米塔》，动作表情在剧情演出时的表现似乎也不输。</li></ul>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价《原神》5.2版本恰斯卡部落纪闻「花之归尘，羽之将坠」？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-2%E7%89%88%E6%9C%AC%E6%81%B0%E6%96%AF%E5%8D%A1%E9%83%A8%E8%90%BD%E7%BA%AA%E9%97%BB%E3%80%8C%E8%8A%B1%E4%B9%8B%E5%BD%92%E5%B0%98%EF%BC%8C%E7%BE%BD%E4%B9%8B%E5%B0%86%E5%9D%A0%E3%80%8D%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B5-2%E7%89%88%E6%9C%AC%E6%81%B0%E6%96%AF%E5%8D%A1%E9%83%A8%E8%90%BD%E7%BA%AA%E9%97%BB%E3%80%8C%E8%8A%B1%E4%B9%8B%E5%BD%92%E5%B0%98%EF%BC%8C%E7%BE%BD%E4%B9%8B%E5%B0%86%E5%9D%A0%E3%80%8D%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>「纳塔是人与龙的国度」，这句话相信大家都很熟悉。</p><p>龙有智慧和语言，当玩家附魂龙时可与龙对话；5.1主线剧情中，对抗深渊的战斗，龙也参与了；纳塔人把龙作为一种「家人」对待，并打击龙的贩卖行为……</p><p>种种行为都表明龙与我们世界观中一般的动物、宠物都有所不同，是一种更高级的智慧生物。此乃基本背景。</p><hr><p>回到恰斯卡部族纪闻的故事，正是围绕着人与龙冲突的故事展开的。而且有着明显两条线索，一条是科技发展与绒翼龙生命安全的冲突，另一条是家庭关系与人龙相处的冲突。</p><p>科技发展本质上是与深渊的斗争，如果「燃素翼」投入使用，会有更多的「失翼者」可以飞向天空，投入战争&#x2F;情报活动。从表面上看，是一个不错的科技点。不过编剧显然把这一点排除了，至少有三个隐患点：需要牺牲绒翼龙、「燃素翼」本身极大的不稳定性、部族战士尤其是那些「失翼者」能否驾驭得住天空。为什么会有「失翼者」，正是因为「高傲」的绒翼龙觉得TA驾驭不了天空，可能会有危险。</p><p>所以编剧还是善良的，把一个不平衡的冲突摆在明面上，玩家的选择基本就非常明确。如果两者平衡，「燃素翼」本身绝对安全，唯一的缺点是可能牺牲部分绒翼龙，那么选择起来就会很难，毕竟类似的事情在地球Online上可谓无时无刻不在发生着。</p><p>家庭关系冲突里有两个家庭的故事，一是恰斯卡的绒翼龙家庭，二是反派的失翼者家庭。讽刺的是，原来恰斯卡的姐姐龙是怨恨恰斯卡回归人群，但逐渐在恰斯卡作为桥梁的过程中达成了人龙关系的和解。而反派阿尔帕原本和龙友好相处，征服天空，后来冒险过头了成为失翼者；后来孩子也是失翼者但致力于研究「燃素翼」，「让所有人类分享同一片天空」。可惜在一次事故中孩子牺牲，伴侣也很早因为观念冲突而离开，母亲彻底失去了家庭而黑化，转而直接从绒翼龙获取燃素制作「燃素翼」，彻底人龙对立。</p><p>其实从剧情可以看出来阿尔帕的孩子特帕尔还是希望能够人工提取燃素的，可惜孩子最终还是没能成功。反派迷失在了自己的征服天空的欲望之中，并没有继承孩子的愿望。更可悲的是，甚至因为自己家庭的破碎，抓了绒翼龙的孩子，试图去破坏别人的家庭。</p><p><img src="https://pic2.zhimg.com/80/v2-973525c798012c9f9921d17e83ab8bcf_720w.jpg" alt="这里其实已经是特帕尔死后，母亲阿尔帕接管工坊了，常见的叙事诡计"></p><p><img src="https://pic1.zhimg.com/80/v2-056fe9e176779d5cc8a2f8c60707ad98_720w.jpg" alt="这里特帕尔还在努力研究人工精炼气态燃素"></p><p>总之，花羽会部族纪闻在我看来是一个中规中矩的「传说人物」，大概打个7-8分吧。任务既展示了花羽会部族与对应绒翼龙的关系的思考，补充了部族的背景，也着重叙述了主角恰斯卡的背景，并让恰斯卡「调停人」的形象更加丰富。</p><hr><p>唯一值得吐槽的就是反派依旧是剧情里很早就出现的着装稍有区别的陌生NPC了，这个套路用的太多，以致于太好猜失去了很多猜反派的乐趣，甚至中途还多次强调了阿尔帕铁狼（各种不该出现的场合突然出现）。总感觉这种结构的故事看多了有点腻，不如温迪传说任务、宵宫传二那种纯粹的梦幻童话故事有趣。</p><p><img src="https://pic4.zhimg.com/80/v2-9a673b4a7035904bcaf21c06a132dc67_720w.jpg" alt="希诺宁部族纪闻反派「特拉佐莉」，几乎一样的套路"></p><p><img src="https://pic4.zhimg.com/80/v2-b7260995230c3fe7f32cfe1ed162c3cf_720w.jpg" alt="基尼奇部族纪闻反派「特立尼达」，不能算明显的反派，只能说是和故事传达的观点的对立派，稍微脱离了一些套路"></p><p><img src="https://pic3.zhimg.com/80/v2-5c85ec3e708be234f3154146f9abbad9_720w.jpg" alt="艾梅莉埃传说任务最大反派+案发凶手「艾德加」，伪装身份、悬念设计、复仇，故事很精巧，但还是用了一样的套路"></p><p><img src="https://pic2.zhimg.com/80/v2-7446ae79a3a7958e01620993e48d1a82_720w.jpg" alt="希格雯传说任务反派「拉瓦特/波顿」，易容术，故事结构同样精巧，而且那时还没理解到套路用得多频繁，所以没直接怀疑到这位NPC上，不过套路的使用还是很明显的"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>剧情</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价《原神》恰斯卡国服ios流水第一波总榜第七，最高第五？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E6%81%B0%E6%96%AF%E5%8D%A1%E5%9B%BD%E6%9C%8Dios%E6%B5%81%E6%B0%B4%E7%AC%AC%E4%B8%80%E6%B3%A2%E6%80%BB%E6%A6%9C%E7%AC%AC%E4%B8%83%EF%BC%8C%E6%9C%80%E9%AB%98%E7%AC%AC%E4%BA%94%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E6%81%B0%E6%96%AF%E5%8D%A1%E5%9B%BD%E6%9C%8Dios%E6%B5%81%E6%B0%B4%E7%AC%AC%E4%B8%80%E6%B3%A2%E6%80%BB%E6%A6%9C%E7%AC%AC%E4%B8%83%EF%BC%8C%E6%9C%80%E9%AB%98%E7%AC%AC%E4%BA%94%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>确实没怎么看懂。</p><p>无论从PV播放量、玩家舆论、后续卡池安排角度，大家似乎都没想到恰斯卡卡池能取得如此「好」的成绩（虽然对比巅峰还是差得远了）。最初的普遍预估都是很难进前十，被隔壁椿池单防。有一说一，如果我有时间玩隔壁游戏，椿的抽卡意愿是比恰斯卡高的。</p><p><img src="https://pic2.zhimg.com/80/v2-ee50c491d1642386d1fb524d47db26d7_720w.jpg" alt="希诺宁首日160万抽卡"></p><p><img src="https://pic2.zhimg.com/80/v2-e93b592ed408f971808dd46adb33698c_720w.jpg" alt="恰斯卡首日100万抽卡"></p><p>从抽卡数据上而言，对比希诺宁卡池，首日抽卡量只有6成，流水排名却基本打平。所以到底是谁在充值？当然抽卡数据并不一定完全准确，比如这是全球玩家自主上传的抽卡数据，不一定符合国区iOS抽卡数据。这里引用抽卡数据，是在各区&#x2F;设备对角色的抽取意愿基本持平的假设基础之上。</p><hr><p>几个可能的原因：</p><ol><li>外部原因：双十一刚过，竞争APP表现疲软。</li><li>内部原因：人权卡希诺宁确实透支了一部分玩家的原石储备，本次卡池需要充值。另外，比起希诺宁，恰斯卡更是命座战士，6命输出能力几乎是0命的三四倍，是前所未有的数值提升幅度。于是比起大家平均地去抽，更有可能是氪佬猛抽6命，自然是后者更能带动流水。</li><li>舆论数据并不准确：B站PV播放断崖式下跌可能只是和推广策略变更有关，只影响播放量，对实际的抽卡影响很小。</li></ol><p><img src="https://pic4.zhimg.com/80/v2-86f655624f128d5ecff8eacc0c157329_720w.jpg" alt="结合收入预估（虽然不准，具体等流水研究up的数据），1的可能性也许更高些。"></p><p>或者，之前4.8的影响逐渐在随着新内容的发布（地图设计诚意满满，剧情优秀基本没有节奏点）而减弱，也许火神卡池还能登顶一波。</p><hr><p>最后，反正我又歪了。</p><p><img src="https://pic2.zhimg.com/80/v2-ad2dbf06084eda69c9352b71b5ff32ed_720w.jpg" alt="歪得没有充值欲望"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>商业</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何看待可话到全面强制会员制，非会员不得互动和发新动态？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E5%8F%AF%E8%AF%9D%E5%88%B0%E5%85%A8%E9%9D%A2%E5%BC%BA%E5%88%B6%E4%BC%9A%E5%91%98%E5%88%B6%EF%BC%8C%E9%9D%9E%E4%BC%9A%E5%91%98%E4%B8%8D%E5%BE%97%E4%BA%92%E5%8A%A8%E5%92%8C%E5%8F%91%E6%96%B0%E5%8A%A8%E6%80%81%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E7%9C%8B%E5%BE%85%E5%8F%AF%E8%AF%9D%E5%88%B0%E5%85%A8%E9%9D%A2%E5%BC%BA%E5%88%B6%E4%BC%9A%E5%91%98%E5%88%B6%EF%BC%8C%E9%9D%9E%E4%BC%9A%E5%91%98%E4%B8%8D%E5%BE%97%E4%BA%92%E5%8A%A8%E5%92%8C%E5%8F%91%E6%96%B0%E5%8A%A8%E6%80%81%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>首先，我并不反对会员制。甚至我觉得可话推出会员制的时间太晚了。一个没有商业模式的产品并不能持续为自己的用户负责，哪怕他宣传「免费、无广告、良心产品」。</p><p><img src="https://pic1.zhimg.com/80/v2-cfb5dbb1a87438828ebd832ba3baad7a_720w.png" alt="21年破圈视频"></p><p>也许在21年那波破圈视频带来大量新用户的时候，就应该布下会员制付费模式的局。尽管会显得吃相难看，然后流失一波吃瓜群众。但也有机会抓住一波愿意付费的用户，C端产品永远是为了付费用户而运作的。</p><p>可惜又过了3年，直到最近才真正落地了付费模式。也不知这四五年的研发投入，烧了多少资金。不过比起全面强制会员，我更要吐糟的是在短短1个月的时间内，完全变更了付费模式。</p><p><img src="https://picx.zhimg.com/80/v2-2099db044c8e280f58f515d985561bff_720w.jpeg" alt="上个月，4周年发布的第一版付费策略"></p><p>第一版的付费模式是常见的VIP模式，免费用户功能限制，VIP用户引入了不少新的功能（看起来就是打磨了很久）。其中附近优先、性别筛选、仅自己可见都是不错的付费点，其中前两个面向线上转线下的需求，仅自己可见面向纯树洞用户。不能说没有吸引力吧，反正产品同学可以根据后台数据挖掘用户喜欢的功能点，然后在后续产品更新中增加付费点，真正做到用户喜欢吸引一些用户付费也是没问题的。</p><p>定价可能略贵，毕竟常见的音视频会员服务也就这个价格段。而且某些常年活动促销的会员可能到手更便宜。作为树洞性社交的可话，光成本就不在一个量级。虽然用成本计算定价并不完全靠谱，但至少用户也很容易对比并发出「凭什么这么贵」的疑惑。</p><p><img src="https://picx.zhimg.com/80/v2-abb5177e07a6ccf4b70fa9a13b15f291_720w.png" alt="第二版付费策略通告"></p><p>然后就是新版的强制会员制，并大幅砍了价格。非会员似乎只留下了查看动态以及被动聊天（需要别人先开启对话，不确定）的功能，连最核心的发动态与匹配的功能也舍弃了。而且似乎产品端也改得很急，只是在原来六条权益之上加上一条「无限畅玩可话」的权益。</p><p><img src="https://pica.zhimg.com/80/v2-8abbfe6cea5be0d23ca9431c693b7b70_720w.jpeg" alt="付费页说明"></p><p>且不说如此快速地变更付费策略会带来什么影响，光是之前一批的付费用户如何补偿的问题就让我头秃了。付费策略本就是一个超敏感的功能点设计，某些视频平台会员涨价都是会上热搜的节奏。</p><p>也许只是一个月会员制度试运行下来，产品同学发现付费用户体量完全不及预期，于是紧急修正方向。至于效果如何，我的观点依旧是不怎么乐观。</p><p>如果是第一版付费策略的主要问题是贵，那么第二版的问题就是切割了用户。</p><p>之前的回答在做产品核心功能体验的时候，就认识到匹配不到人、时间错位的问题。因为很难满足自己的需求，在体验之后基本就怎么玩过可话了，再之后匹配的问题似乎也没有得到很好的优化。</p><p>如今砍掉免费用户，匹配的问题可能会暴露得更加严重。本来免费用户可以作为付费用户的匹配对象，也算是一种作用。免费用户不能发动态，除非会员依然可以匹配到这些免费用户，不然匹配就更难找到人了。但是就算匹配到了免费用户，免费用户还有回应吗，还会继续使用吗？</p><p>可能付费通知更像是卸载通知吧。不论如何，风险很大，但依旧祝好。</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>商业模式</tag>
      
      <tag>社交</tag>
      
      <tag>可话</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>知乎直答上线「专业搜索」功能，你有哪些体验和感受？</title>
    <link href="/post/%E7%9F%A5%E4%B9%8E%E7%9B%B4%E7%AD%94%E4%B8%8A%E7%BA%BF%E3%80%8C%E4%B8%93%E4%B8%9A%E6%90%9C%E7%B4%A2%E3%80%8D%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BD%A0%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BD%93%E9%AA%8C%E5%92%8C%E6%84%9F%E5%8F%97%EF%BC%9F/"/>
    <url>/post/%E7%9F%A5%E4%B9%8E%E7%9B%B4%E7%AD%94%E4%B8%8A%E7%BA%BF%E3%80%8C%E4%B8%93%E4%B8%9A%E6%90%9C%E7%B4%A2%E3%80%8D%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BD%A0%E6%9C%89%E5%93%AA%E4%BA%9B%E4%BD%93%E9%AA%8C%E5%92%8C%E6%84%9F%E5%8F%97%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>首先还是感谢知乎送了我一年的「知识会员」，另外前几天还收到小助手的新年礼物通知。作为一名百粉小透明，还是感受到了社区的关爱。</p><p><img src="https://picx.zhimg.com/v2-f218d6a20ad9a97a25ab163d849760bd.webp" alt="知识会员体验"></p><p><img src="https://picx.zhimg.com/v2-399d48625bcca3e595eec0979f93905c.webp" alt="新年礼物"></p><h2 id="产品核心体验"><a href="#产品核心体验" class="headerlink" title="产品核心体验"></a>产品核心体验</h2><p>在看到「专业搜索」产品上线通告，了解到知识库范围有中英文论文、知乎精选后，就意识到知乎的这次知乎直答的 AI 升级并不简单，可能开辟出一条新的赛道。众所周知，在大模型基本框架类似的前提下，最能影响输出结果的就是训练的知识库&#x2F;语料库。</p><p><img src="https://pic1.zhimg.com/v2-1cd40af6d656af8861aaf6d6cd2234d8.webp" alt="专业搜索知识库范围"></p><p>在各种 AI 问答还在大范围使用互联网可爬取的公开资料库时（可参考 AI 回答提供的参考链接来源），知乎直答的本次升级显然对参考来源做了很大的限制。论文+知乎精选的模式，保证了参考资料的绝对专业性，之前就有和伙伴们讨论过论文+AI 的赛道。</p><p>至于具体的使用效果，随手问了个问题，效果如下图。</p><p><img src="https://picx.zhimg.com/v2-8314915a59cd69acebb9230b685c3012.webp" alt="「如何评价新出的知乎直答，我想写篇测评，如何选择切入点」的回答结果"></p><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><p>从结果而言，还是有一点东西，起码在框架搭建上提供了不少有用的思路（用不用另说）；而且似乎 AI 味没那么重，不是那种特别空洞、车轱辘话的感觉。在我的提示词用的如此简单的情况下，能够生成这样的回答已经十分满意了。</p><p>回到具体的问题，虽然我提的这个问题并不没有那样的「专业性」，只能算是很平常的互联网产品体验&#x2F;测评一类，但知乎直答给出的切入点——<strong>用户体验、功能特点、准确性与可靠性分析、应用场景、未来展望</strong>等都是很常见而专业的切入点。而且在每个切入点下，都有着不错的补充描述。</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ol><li>上下文理解的能力很弱。后续补充提问，在我多次尝试下基本都是新开一个话题的意思，基本没有综合之前的对话进行反馈的能力。这与主流的其他 AI 工具还是有比较大的差距的。比如我对其中某些概念不是非常理解，补充问下「其中的 xxx」是什么意思，直答会完全脱离大的话题，完全没有连续对话的能力。</li><li>关于论文的引用比较奇怪。比如我这个问题，可以说是基本和论文无关吧，不过从参考来源里还是找到了不少论文（特别是第一次提问时列了一堆英文论文）。虽然细究之下也能硬扯上一点关系，而且大多是概念上对上一点，很有一种写论文时硬凑参考文献的既视感，而且选了那种并不是很经典的参考文献。</li></ol><h3 id="更好的食用方法"><a href="#更好的食用方法" class="headerlink" title="更好的食用方法"></a>更好的食用方法</h3><p>基于以上分析，我总结了一些可以带来更好体验的「专业搜索」食用方法：</p><ol><li>尽量在一次提问时讲清楚问题。虽然我讨厌使用格式化的提示词技巧与 AI 对话，更喜欢用自然语言多次沟通寻找更好的结果，但知乎显然不能满足我这样的需求。所以尽量在一次提问中多提供些信息，可能会有更好的效果。</li><li>根据实际情况削减知识库的类型。虽然论文与知乎精选都和「专业」很有关系，但真正发过论文的人一般都会把这当成两个场景。写论文时就好好看论文，甚至中英文论文都会区分挑选，不会混在一起（毕业论文除外）；日常了解知识，可以搜搜知乎精选，里面说不定会有大牛作者用通俗易懂的语言解释非常专业的内容。所以在使用专业搜索时，并不建议通过勾选三个知识库，而是根据自己的使用场景针对性的选择其中一个知识库。从知乎的定位而言，我可能仅会选择知乎精选作为知识库。</li><li>从官方介绍来看，对于论文知识库而言显然是不够全面的，有条件的科研人员还是建议使用学校论文数据库、谷歌学术等更专业的工具找参考文献。至于要不要下了论文后手动上传附件，看个人喜好吧。只能说如果知网、Web of Science 出了这样的工具，而我有恰好还在科研领域，我可能会乐于尝试。当然如果仅仅是为了毕业论文，不妨大胆地去用，毕竟大家都不怎么专业。</li></ol><h2 id="核心体验之外"><a href="#核心体验之外" class="headerlink" title="核心体验之外"></a>核心体验之外</h2><p>本文没怎么花篇幅去分析产品的交互细节，诸如产品入口的设置、侧边功能导航栏、参考资料的显示方式、原文的跳转&#x2F;预览、资料暂存功能、对话的操作按钮等等。这里面要吐槽也是有很多可以吐槽的，比如与老产品（通用搜索）完全不一样的交互逻辑、侧边功能导航栏内容混乱等。不过毕竟只是第一版，之后可以慢慢优化，当前还是关注核心功能点就行。</p><p><img src="https://picx.zhimg.com/v2-00c792be171481269fe7d1094abaca78.webp" alt="侧边功能导航栏"></p><p>不过有一点还是要重点探讨下——付费模式。专业搜索作为一个付费点，虽然仅针对中文论文预览做了付费，且包含于「知识会员」体系之下，但几乎没有让人感知到需要付费（藏得特别深，而且不少用户可以免费试用知识会员）。</p><p>可以看出付费重心在于移动端的「知识会员」，PC 端的专业搜索并不那么想要「收费」，甚至可能是中文论文版权方限制的必须付费才能预览原文。抛开「知识会员」体系不谈，这个专业搜索就充满了矛盾，不清楚商业逻辑。为了收割一波写论文的学生？加入 AI 搜索领域做产品升级，并后续转为付费模式？那么这个专业搜索就值得一个更显眼的、有区别的入口，而不是藏在功能导航栏里。</p><p>另外，知乎精选内容的布局早在今年 5 月的时候就有所布局。本来知乎内容在谷歌收录中有很高的权重，中文搜索可以搜到很多知乎的内容，但是年中以来基本就没有谷歌搜索的流量了，查了下资料是知乎爬虫协议删去了谷歌与必应。屏蔽竞争对手对优秀知识库资源的获取，自研 AI 搜索，听起来是个不错的战略。不过自身流量的暴跌，还是让创作者优点头秃，好在知乎内容在 GitHub 上的备份倒是得到了一波流量暴涨。</p><p><img src="https://pic1.zhimg.com/v2-31f107f9e1a9f08877b40987f626d867.webp" alt="长尾流量的文章数据暴跌"></p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>用户体验</tag>
      
      <tag>Algorithm</tag>
      
      <tag>商业模式</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价 2024 年 10 月米哈游《原神》 5.1 剧情《命定将焚的虹光》？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7-2024-%E5%B9%B4-10-%E6%9C%88%E7%B1%B3%E5%93%88%E6%B8%B8%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B-5-1-%E5%89%A7%E6%83%85%E3%80%8A%E5%91%BD%E5%AE%9A%E5%B0%86%E7%84%9A%E7%9A%84%E8%99%B9%E5%85%89%E3%80%8B%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7-2024-%E5%B9%B4-10-%E6%9C%88%E7%B1%B3%E5%93%88%E6%B8%B8%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B-5-1-%E5%89%A7%E6%83%85%E3%80%8A%E5%91%BD%E5%AE%9A%E5%B0%86%E7%84%9A%E7%9A%84%E8%99%B9%E5%85%89%E3%80%8B%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>量大管饱，很有<strong>策略</strong>的一次版本剧情安排。</p><p>首先是期望管理方面，谁也没有想到米哈游把战争的残酷在游戏里表现出来了。由于恰逢巴黎奥运会，加上前瞻中策划对真实战争的隐藏，观众们很容易被带到此战争非彼战争，而更像是一种奥运会竞技的想法上。加上稻妻版本对于战争的过家家似演出，玩家也确实觉得米哈游对战争没活了，只能往其他路径展现战争。此为期望之降低。</p><p><img src="https://pic2.zhimg.com/80/v2-8917053e618c4e97f85ea23af19868aa_1440w.jpg" alt="前瞻欺诈"></p><p>5.0 版本上线，主线第一幕确实如玩家所预料的，「战争」的表现成分很低。「归火圣夜巡礼」就是全民运动会；「巡夜者战争」虽然的确是与深渊的战争，却几乎没有演出画面。再加上有个「还魂诗」效果，与深渊的战斗死亡可以复活，又再度弱化了战争成分。</p><p><img src="https://pic4.zhimg.com/80/v2-be00e18f5ee3af51b7c6550062b2fbc3_1440w.jpg" alt="「还魂诗」"></p><p>第二幕逐渐揭示纳塔的危机，「还魂诗」失效，卡齐娜复活失败，众人进入夜魂之国捞人，夜魂之国渲染得荒芜且痛苦。而且借助 NPC 全队覆灭的故事，一点点显露出对抗深渊的残酷。但对于玩家来说，还只是普通的怪物战斗，远远感受不到所谓的「战争」，反而被六英雄的重要线索吸引。</p><p>总之就是前期的隐藏，加上 5.0 实际的感受，玩家对纳塔战争表现的期望就一直很低，最多有个与深渊怪物打打的剧情感觉就差不多了。</p><p>然后是节奏安排，第三幕嘻嘻，第四幕不嘻嘻。整个大版本的四幕剧情，整体节奏是松-紧-松-紧，并各自在断章前迎来一波高潮剧情，是非常娴熟的剧情安排技巧。</p><p>回到本次 5.1 的两幕剧情，老米在稍作轻松的第三幕安排了茜特菈莉这么一位出色的典型「二次元」人物——好看、强大、年龄反差、内心戏丰富……老米已经多久没出这么让我有抽卡欲望的角色了，甚至抽取欲望超过了火神，而且是那种纯人设无角色设计&#x2F;强度设计的抽取意愿。更有醉酒胡话、「是你奶奶」等梗广泛流传，绝对是这版本讨论度最高的角色。</p><p><img src="https://pic3.zhimg.com/80/v2-2646f0e75949078ef2bbc772be14a9eb_1440w.jpg" alt="我老婆没化浓妆也超可爱"></p><p>本来这些过渡章节因为补充大量的设定，会与高潮情节相比略显无聊，比如 4.1 的梅洛彼得堡纯纯坐牢剧情。但这次有了美少女的加入，反倒是化解了很多设定上的无聊，为剧情展开带来不少轻松和愉快。</p><p>然后就是重头戏的全面战争，第五位英雄欧洛伦的觉醒，深渊随即展开总攻。玩家视角的战争地图，每一次抉择都会带来新的牺牲，看着不断上涨的魔物和牺牲人数，还有遍地的尸体和游荡的魔物，玩家感受到了真正的「战争」。巧妙的叙事和演出方法，热气球视角堪称一绝。</p><p><img src="https://pic1.zhimg.com/80/v2-7be22b068d64c2bd032f9f0feabd56e1_1440w.jpg" alt="全灭的悬木人部族"></p><p>不得不说，老米这次对战争的刻画远超玩家的预期，让每一个玩家都体会到了「我什么也做不到」的绝望。不少玩家与深渊战斗换上了最强阵容，但依旧感叹自己太弱，打怪太慢，看着身边的战友倒在自己眼前，却又无能为力，甚至痛苦流泪。还有医疗、资源、情报这些在战争中极为重要的因素，也反映在了阵亡人数上。由于每个玩家仅有一次选择，自然引发大量玩家的讨论，如何抉择才能减少牺牲，《原神》甚至想教我什么在战争中最重要。</p><p>本以为老米在最后的英雄上还会卡一手，不想这次很大方地在一幕中就把最后两位英雄凑齐，并展开了反攻。「还魂诗」庇护所有生物，火神加持之下，深渊造物终于可以破坏。在 BGM 纳塔主题曲「炽烈的还魂诗」之下，所有纳塔战士意志昂扬，队内语音捷报频传，深渊被打退，领地在夺回，并最终由火神一拳干爆深渊。如此战斗，梦回 1.1 群玉阁大战愚人众剧情，仙力加持，热血澎湃，果然对于游戏来说，武戏还是重要。</p><p><img src="https://pic3.zhimg.com/80/v2-7f3e02e0c227a5fc09a91f99a44ef741_1440w.jpg" alt="反攻打响"></p><p>要说不足的话，就是六英雄及古名的设定过于抽象。玛拉妮的「团结」表现得最为清晰明了，剧情前已经觉醒的三英雄全靠玩家自己脑补，至于欧洛伦的「奉献」和恰斯卡的「超越」都是那种需要做阅读理解才能意识到的古名。至于为什么是这六英雄和六古名，就更不得而知了。</p><p>后续火神与旅行者赶赴深渊决战，火神牺牲的代价，着实又期待起来呢。红发大姐姐有点死亡 flag，火神之心的问题也没有结论，旅行者无法共鸣火元素也是坑。前有水神王座的破灭，这次难道旅行者要成为新一代火神？</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>「草料二维码」——记一次面试交流</title>
    <link href="/post/%E3%80%8C%E8%8D%89%E6%96%99%E4%BA%8C%E7%BB%B4%E7%A0%81%E3%80%8D%E2%80%94%E2%80%94%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E4%BA%A4%E6%B5%81/"/>
    <url>/post/%E3%80%8C%E8%8D%89%E6%96%99%E4%BA%8C%E7%BB%B4%E7%A0%81%E3%80%8D%E2%80%94%E2%80%94%E8%AE%B0%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E4%BA%A4%E6%B5%81/</url>
    
    <content type="html"><![CDATA[<p>年前的时候，在脉脉上碰巧发现了一家在宁波的非常「互联网」式的公司——草料二维码。毕竟在宁波找到一家互联网公司还是不那么容易的，于是果断投了简历，抱着九分好奇心与公司进行了几轮面试交流。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20241020163947.png" alt="岗位JD"></p><p>由于对公司的商业模式略感兴趣，加上面试体验还不错（现场面试喜提奶茶），一直都想记一下本次经历。只是比较忙且懒，一直拖到了下半年。好在自己记性好，很多细节要点都有印象，所以仍有不少可以记录之处。总体思路会从公司&#x2F;产品视角，和面试视角两个维度出发。</p><h2 id="关于「草料二维码」"><a href="#关于「草料二维码」" class="headerlink" title="关于「草料二维码」"></a>关于「草料二维码」</h2><p>说来惭愧，面试之前从未了解过「草料二维码」这一产品。于是从各种渠道快速了解了一些基本信息。</p><h3 id="数据指标"><a href="#数据指标" class="headerlink" title="数据指标"></a>数据指标</h3><p>从微信搜索小程序，可以看到有上百好友使用过，总体算是使用率很高的小程序。官方说法，重要指标数据如下，从用户体量、主要业务数据量来看都还算小有成绩。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20241006200730.png" alt="关键指标数据"></p><p>另外，微信小程序工具类榜上有名，一查阿拉丁指数确实如此（不过后来该指数排名崩了），而且还获得「第八届神灯奖——最佳内容工具小程序」。</p><p>从种种迹象来看，确实有种打造小而美产品的互联网公司的味道。</p><h3 id="产品内容"><a href="#产品内容" class="headerlink" title="产品内容"></a>产品内容</h3><p>一句话总结，以生成二维码为基础技术，并拓展二维码服务支持的工具向产品。不过官方好像更新了其产品定义，增加了「无代码平台」这一概念。</p><p><img src="https://pic1.zhimg.com/80/v2-b41e0fefa7d401a0153cf456e98d79b9.png" alt="官方介绍"></p><p>二维码是连接实体与互联网&#x2F;数据的载体，一切需要在实体之上与数据交互的场景都可以通过二维码进行数字转型，正如官方所列举的各种场景。有人把二维码比作物联网下的搜索引擎，大抵原因正是如此。</p><h3 id="详尽的用户文档"><a href="#详尽的用户文档" class="headerlink" title="详尽的用户文档"></a>详尽的用户文档</h3><p>草料二维码有着非常详细的用户<a href="https://cli.im/help">帮助文档</a>，从产品的简单介绍，到基础的功能模块，再到高级功能细节，都有详细的图文操作文档。能见到如此详细的文档，有种梦回 GitHub 优秀开源项目 README 的感觉。</p><p>本来商业性产品公开这种详尽文档就及其少见，要么有门槛藏得深，要么写的比较随意零零散散，还有很多类似的产品在社区由用户自发维护分享。没想到草料直接在官网大方地公开了，还提供了一个官方社区提供问题解答与交流。</p><blockquote><p>搜索帮助中心，90% 的问题都能在这里找到答案。</p></blockquote><p>也许能节约运营成本，但也让竞争对手更好地了解到产品动向，不过草料实际藏起来多少东西就不是我能评估的了。</p><h3 id="经营理念"><a href="#经营理念" class="headerlink" title="经营理念"></a>经营理念</h3><p>又一个很少见的信息——把公司&#x2F;产品<a href="https://cli.im/help/75208">经营理念</a>公开。因为面试的时候也多次提及，所以在此处稍作整理。</p><ul><li>不做定制开发，只做标准化产品，面向目标用户群体，为目标用户带来价值。</li><li>没有销售团队，专注做好产品，通过口碑获客。</li><li>绝大部分个人用户可免费使用，有需要的企业用户可付费获取更多功能支持。</li></ul><p>一个非常理想的经营理念，每个产品人的梦想。但是如此公开表达，起到的作用似乎也只有吸引一些志同道合之人罢了。虽然这么长的理念，比不上一句类似的「Don’t be evil!」</p><h2 id="关于面试"><a href="#关于面试" class="headerlink" title="关于面试"></a>关于面试</h2><p>面试一共三轮。但其实前两轮的沟通有效性比较低（吐槽），最终还是看第三轮面试。不过也可能是我的简历和前两轮面试相对过关，才有了第三轮面试，不代表前两轮随便就可以混过去（看面经的请注意）。</p><h3 id="一面"><a href="#一面" class="headerlink" title="一面"></a>一面</h3><p>HR 面（线上），总时长半小时左右。HR 很常规地问些基本问题（自我介绍、工作经历、求职原因），然后问了下对草料产品的看法。我也是正常地回复，结合之前对草料的调研，随便聊聊。</p><p>另外就是 HR 意外地聊到了高中，话里听出了些什么，于是面试后看了下 HR 经历，原来是高中校友。果然在宁波聊到高中，就免不了镇海中学。</p><h3 id="二面"><a href="#二面" class="headerlink" title="二面"></a>二面</h3><p>CEO 面（线上），总时长半小时左右。小公司确实喜欢上来就老总出来摸个底。除了基本信息外，CEO 对一些额外信息比较感兴趣，比如我的个人博客、自己开发的小工具等等。因为业余时间做的事情着实比工作有趣多了，我也是聊得很开心。老板关心商业化的问题，诸如我的这些事情有无变现手法。虽然我自己暂时不考虑变现，但 Google Ads，用户体量上来后再往产品里加收费点的模式也是轻车熟路，娓娓道来。</p><p>最后回到公司话题，同样是对公司的理解，我也是比较直白地把之前的第一感觉——「C 端的皮，B 端的本质」陈述出来。另外也问了一些好奇点，比如商业模式、核心用户群体、付费与续费意愿云云。可惜 CEO 明显在回避这些问题，最后草草问了我的一些经历，以及之后考虑选择的平台／意愿之类。</p><p>想清楚自己想要什么，然后抓住正确的平台，才会有所成果。最后的嘱咐也好、经验分享也好，有点让我迷迷糊糊，因为这些说实话如今我也很难有准确的答案。一度以为自己缺少一些履历，八成是凉了，不想马上就收到了三面的通知。</p><h3 id="内部资料"><a href="#内部资料" class="headerlink" title="内部资料"></a>内部资料</h3><p>三面之前 HR 会提供一些内部资料，主要就是一些行政规定和公司价值观。</p><p>行政规定包含工作时间、试用期与转正说明、各类福利补贴说明（假期、办公用品、饭补、交通补等）、五险一金说明等等。总之，是一份非常详细的文件，可以免去问很多想问的问题。一般来讲，这类文件会在入职后收到，能在三面前收到此类文件也能表现出公司的规范性。</p><p>公司价值观是在经营理念上的延续，讲了不少工作态度上的事情，而且看文件的格式似乎一直都在更新。总体上有点类似之前爆出的米哈游员工手册，目标、愿景、方法、理念云云，大体上表示认可。</p><p>两份文件从内容上比起之前面试&#x2F;工作经历，确实有一定的吸引力，至于是不是招聘策略就不得而知了。</p><h3 id="三面"><a href="#三面" class="headerlink" title="三面"></a>三面</h3><p>混合面，业务面+HR 面+CEO 面（线下），总时长 2 小时左右。其中 HR 面和 CEO 面感觉略显多余，交流的话题和之前的基本类似，所以会着重介绍业务面，另外附加一些记的比较清楚的问题&#x2F;话题。</p><p>业务面是产品组三位小姐姐一起面的，也是比较常见的自我介绍，然后详细聊过往经历，再回到公司产品的 Idea。</p><p>聊对方 B 端业务细节，尤其是对草料这种又多又杂的，就算草草体验过一些功能细节，也确实很难聊出些东西。所以当被问及「对产品还有什么意见时」，我也确实聊得比较虚，也许好好准备一番会更好一些。不过我确实对业务细节不讲究，反正真正落实业务细节的时候考虑的就多了，不需要通过此番去锻炼业务拆解和分析能力。</p><p>然后是一个获客的问题——如何让扫码用户转变为生码用户，进而转变为付费用户。可以感受到他们自身也一直在考虑这个问题，本想套用 AARRR 模型的思路，后来发现这个产品是有些区别的。</p><p>生码用户指的是制作内容的用户，并通过二维码分享给其他用户；扫码用户指的是扫码查看内容的用户。两者是有比较大的区别的，就好比网页的制作者和纯粹的网页浏览者。C 端产品可以用特性、体验与关键节点的「痒点」去卡一手付费转化，但真当两者群体存在天然差距时，比如 1%的扫码用户是潜在的生码用户，再怎么优化界面的体验、暗示，也很难突破天然上限，就好比一直给不相关用户广告推流，成效会非常有限。</p><p>从微信指数查了一下流量来源，可以看出绝大部分来自用户搜索，也就是用户在知道产品&#x2F;有明确需求的前提下贡献了流量。其中如果只是有二维码生成之类的明确需求，还有面临和其他竞品竞争搜索排序的问题（虽然因为起步早，在桌面搜索引擎端排序结果非常优秀，微信搜索结果也不错）。对比一下其他工具类产品的流量结果，可以说是在「推送&gt;搜索」的时代下完全没有铺开战略。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20241017173047.png" alt="微信指数数据来源"></p><p>所谓边际效益递减，在运营推流上发力可能会有意想不到的效果。此外，从生码（二维码工具）到无代码平台的功能业务差距，也不是搜索用户可以直观理解的，有很多向潜在&#x2F;目标客户介绍产品的必要性。</p><p>不过老板好像并不打算在运营这条线上投入太多，还举了一个 Foxmail 的例子——在发邮件时加上水印「由 Foxmail 发送」。草料在这点上确实也是学了，在扫码结果和图片水印上都增加了草料的企业标识。不过正如我前面提到的，Foxmail 收件者和发件者用户具有高度一致性，但是草料二维码的双方不是，生搬硬套模式效果有限。</p><p>最后是付费规则的问题。是老板的提问，对于我来讲基本没有什么真实数据支撑还是有点难办的。其实从付费规则来看，草料就没有面向个人用户的意向，各种音视频会员也就一两百每年，草料直接把最低档收费标到了 780&#x2F;年。何况工具类产品（如百度网盘），用户使用频率本来就低，很多用户都会有临时会员的想法，包年太贵了。剩下的就是非常常规的按照容量、特定功能设置不同的价格段位，以适应不同的企业需求。还有一点就是免费版有一个很大的变动，之前研究的时候，免费版对文件储存空间做了很大的限制（似乎只有 20M），现如今完全开放空间，转为水印，可以说草料对个人生码需求完全免费。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20241017214852.png" alt="付费规则"></p><p>据官方说法，因为在功能上做了精简，付费相对于其他企业管理平台具有优势，所以会有一批企业对此中意。其实说到无代码平台，更容易让人想到「低代码平台」，简道云、宜搭之类已经有了一些起色，所谓的价格优势大概就是对比这些平台。不过作为企业而言，价格规则收到成本控制，按照公司数十人的规模和其对应开出的薪资成本，估算用人成本就在千万级，那么付费用户（企业）的规模也需要达到万级别才能盈亏平衡。从企业介绍和薪资水平来看，一定是做到了盈利，看上去是一个不错的成绩。<strong>不过问题依然是，用户如何从一个扫码行为，可以认知到草料可以作为一个企业管理工具而运作。</strong></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最终面试结果没有通过，草草问了理由，也是很常规的产品思维不够云云，总之并不能获得更多有效的信息。也许是没怎么深度体验产品细节，也许很多理念和公司战略方向不符，也许现场面试表现状态一般，也许是公司要求比较高或者并没有紧迫的招人计划。毕竟现在这个 HC 还挂着，说不定用招聘信息做产品推流也可能（我就是）。不过这都不重要，不应该在不重要的事情上内耗，不如老老实实写写文章。</p><p>至于公司的风险，从调研到最终的面试，一个隐约有种违和感，就是「B 端 C 端融合的这种商业模式」。众所周知，B 端 SAAS 近些年来是越来越盈利困难，一个没有销售与推广的产品，纯靠自来水，诚然用户忠诚，但真的能做到如此体量与稳定的付费企业用户流吗？结合公司的发展历程，「二维码」关键词，网上可查询到的历年薪资水准等因素，很可能是在疫情期间通过扫码服务有了一波很强势的项目对接和很猛的用户增长。但是之后又靠什么增长或者维持住呢？</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>面试</tag>
      
      <tag>商业</tag>
      
      <tag>工作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分享一组不错的Axure组件</title>
    <link href="/post/%E5%88%86%E4%BA%AB%E4%B8%80%E7%BB%84%E4%B8%8D%E9%94%99%E7%9A%84axure%E7%BB%84%E4%BB%B6/"/>
    <url>/post/%E5%88%86%E4%BA%AB%E4%B8%80%E7%BB%84%E4%B8%8D%E9%94%99%E7%9A%84axure%E7%BB%84%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<p>最近又兜兜转转用回了 Axure 制作原型。由于用惯了某些在线原型工具现成的高封装组件，倒是对 Axure 这种基础的组件有点不熟悉了。特别是默认组件库中，移动端的交互组件基本没有，上手难度较高。</p><p>一番简单的搜索，就找到了一份开源的资源（其实也不能算开源，只是放在 GitHub 仓库里）。</p><blockquote><p><a href="http://refs.cn/">http://refs.cn/</a> 原型设计元件库，基于 Axure RP 10&#x2F;9，支持 Android、Apple、Windows、微信，移动、桌面平台的应用和网站原型设计。——<a href="https://github.com/refscn/rplibs">rplibs组件项目</a></p></blockquote><p>项目包含网页端（Ant Design）、微信&#x2F;小程序、Apple Design、Material Design、Fluent Design 等主流设计规范下的组件样式，可以覆盖绝大多数工作场景。另外还包含图标库、统计图表库等实用组件。</p><p><img src="https://pic1.zhimg.com/v2-4efc6e00ab04699760d84aaabd91b366.webp" alt="Ant Design（按钮）"></p><p><img src="https://pic2.zhimg.com/v2-3181adc4e0d61d5c49ecd43f1f6a2d21.webp" alt="微信/小程序"></p><p><img src="https://picx.zhimg.com/v2-64e45bae8d546417041a636fbbd07d57.webp" alt="Apple Design"></p><p><img src="https://pic4.zhimg.com/v2-72b4f6d8cf28b2a50eb200236b374067.webp" alt="Material Design"></p><p>P.S. 作为产品，绝大多数下原型的要求是快速而准确地传达需求。除非有向客户演示的需要，很多高保真交互式的原型都不是那么必要。所以有一个统一设计规范，可以快速的复用的组件库是可以极大程度提高工作效率的。</p><p>虽然有了现成的组件，Axure 组件的学习成本还是要略高一些，比如高级组件中继器、蒙版、动态面板等，如果要做一些简单交互就会更复杂些（但能实现的交互方式也是真的多）。</p><p>不过不同组件的作者显然有着不同的设计思路。比如 Ant Design 以 UI 角度构建组件库，基本元素都是文字、方框、线和图片，缺少组件的交互性，不像 Axure 原生的组件那样（文本框可以直接输入之类）。而且 Ant Design 把统一类型的组件放在一起，图层&#x2F;分组设置又不怎么规范，使用时还需要从里面挑一个出来复制就有点难崩，鉴定为炫技而非实用性质的组件。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品经理</tag>
      
      <tag>Axure</tag>
      
      <tag>Ant-Design</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价2024年8月米哈游《原神》艾梅莉埃传说任务《香氛瓶之章》？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B72024%E5%B9%B48%E6%9C%88%E7%B1%B3%E5%93%88%E6%B8%B8%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E8%89%BE%E6%A2%85%E8%8E%89%E5%9F%83%E4%BC%A0%E8%AF%B4%E4%BB%BB%E5%8A%A1%E3%80%8A%E9%A6%99%E6%B0%9B%E7%93%B6%E4%B9%8B%E7%AB%A0%E3%80%8B%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B72024%E5%B9%B48%E6%9C%88%E7%B1%B3%E5%93%88%E6%B8%B8%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E8%89%BE%E6%A2%85%E8%8E%89%E5%9F%83%E4%BC%A0%E8%AF%B4%E4%BB%BB%E5%8A%A1%E3%80%8A%E9%A6%99%E6%B0%9B%E7%93%B6%E4%B9%8B%E7%AB%A0%E3%80%8B%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>很中规中矩的一个传说任务。</p><p>既展现了艾梅莉埃的背景与身份，也讲述了一桩香水引发的犯罪故事，更整合了愚人众、斜眼、琉璃百合、元素感知力等提瓦特要素，是少有的能串起很多回忆的故事。</p><p>故事本身作为一个「密室杀人案」的犯罪嫌疑片，也能算得上良好水准。特别是一些线索与伏笔的铺垫，不会让最后谜底揭晓时显得突兀，细心的侦探玩家相比也很早就有所猜想，算是比较「本格」的推理故事了。具体而言，就是剧情里推理玩法的结论非常明显，比其他剧情故事里出现云里雾里的推理体验好得多。虽然还是有一些「叙述性诡计」在里面，比如老师的易容和长达20年的隐忍与复仇，还有分阶段放出的有用信息这些。</p><p>要说不足的话，就是有一些审美疲劳。整个枫丹的传说任务仿佛都在讲犯罪与律法，而且反转手法都非常类似，除了人物和内容有所差异外，整体有一种套用框架工业化生产的感觉。以致于这次的故事在反派刚出场，毫无任何线索披露的时候，就靠直觉刀中了凶手。</p><p>至于故事的内核，也都是老生常谈的商业利益、仇恨、本真云云。不过柯莱作为局外人的出现，倒是金句频出。结合柯莱的身世经历，着实体验到了柯莱的成长还有玩家作为老父亲的欣慰感。</p><p><img src="https://pica.zhimg.com/v2-6b4e36d0cdea46f7326426aa55fb5c51.webp" alt="仇恨之于柯莱又意味着什么"></p><p>不过最令我在意的并不是剧情，而是一个词——「<strong>祛魅</strong>」。不知为何，这个词最近频繁出现在我的视野里，而它虽然作为一个并不常用的词汇，却在语境下挺好理解，有一种无法直接解释但懂其中意义的美。</p><blockquote><p>通俗来讲，“祛魅”是指对于科学和知识的神秘性、神圣性、魅惑力的消解，引申之，也可以指主体在文化态度上对于崇高、典范、儒雅、宏大叙事、元话语的能指疑虑或表征确认。——百科</p></blockquote><p>不要过分神圣化香水「奥古斯都」，大概就是剧情中的主要含义。引申到现实，饭圈也好、爆款也好，也都是值得祛魅的对象。</p><p><img src="https://picx.zhimg.com/v2-d6a16b1337426abda9d7a759f2ac8076.webp" alt="祛魅"></p><p>但是作为游戏制作方，强调这么一个概念是非常新奇的。套入《原神》，<strong>玩家相信着它的「神圣」，相信着它的「高贵」，相信着它的「独一无二」，却偏偏忘了，它本身只是一款游戏而已。</strong>不同的观众会有不同的解读，你也可以认为我过度解读，但结合最近的环境和节奏，总有一种制作方透露出的「<strong>我也知道自己的不足与普通，请mxz们不要再无脑吹捧</strong>」的感觉。</p><p><img src="https://pic1.zhimg.com/v2-9790814403943d3720992b9137f35134.webp" alt="真的只是在讲「香水」吗"></p><p>这样的解读非常提升对制作方的好感，一无往常的「傲慢感」。希望制作组今后也能保持这种祛魅之心，不断优化玩家体验，推出更优秀的内容。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>祛魅</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谈谈《原神》4.8版本的节奏</title>
    <link href="/post/%E8%B0%88%E8%B0%88%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B4-8%E7%89%88%E6%9C%AC%E7%9A%84%E8%8A%82%E5%A5%8F/"/>
    <url>/post/%E8%B0%88%E8%B0%88%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B4-8%E7%89%88%E6%9C%AC%E7%9A%84%E8%8A%82%E5%A5%8F/</url>
    
    <content type="html"><![CDATA[<p>总结一下节奏的根源，其实<strong>是玩家累积的不满情绪。</strong></p><p>玩家向来是多样化的，有的喜欢探索世界，有的厨角色，有的剧情党，有的强度党，有的喜欢策略与战斗……</p><p>比如我，如今还在坚持玩下去的动力是主线剧情、差异化的地图设计、差异化的角色战斗设计。我能不靠任何攻略在沙漠地洞里满探索度，回头来发现能满探索的玩家少之又少，而一条龙攻略视频却异常火热（虽然我自己逛完一遍后也会跟一遍视频查漏补缺，收集强迫症是这样的）。于是我发现原来开放世界能吸引的玩家也只是一小部分，还有很多玩家纯粹为了肝地图原石抽卡。</p><p>游戏的终极目的还是乐趣，玩得开心最重要。于是不同的玩家在同一个游戏中，因为自己的喜好乐趣持续玩下去，又同时忍受着不满意之处。</p><p>这些不满之处，比较常见的有：</p><ul><li>打工式日常：不断重复的日常任务，极难刷出来的特殊成就，仅仅为了一点原石收益。</li><li>抽卡体验：问就是保底+歪。</li><li>养成成本：光是定量的升级材料，培养周期就有 1-2 个礼拜的周期（体力限制），更不用说深不见底的圣遗物体系。</li><li>大地图&#x2F;某些支线任务又臭又长，内容重复枯燥，花费大量时间回报甚低。</li><li>某些新角色在机制强度各方面爆老角色的米，某些新角色纯凑数，迟迟等不来售后。</li><li>剧情争议与不满，剧情不能跳过。</li><li>主角的边缘与摄像头化。</li><li>玩家之声迟迟没有得到反馈与优化。</li></ul><p>总结一下，<strong>陷入抽卡游戏的负面黑洞与反噬</strong>。</p><p>绝大多数的游戏内容被视为枯燥冗长的抽卡资源获取途径，上班式游戏；而投入的时间&#x2F;金钱又被卡池的负体验消磨——歪与爆米都是灾难性的负反馈。</p><p>在不满情绪逐渐积累并达到阈值时，任何新的争议与不好体验都会引爆矛盾，成为压死骆驼的最后一根稻草。而七月的三次节奏：龙王改动、新深渊、夏活剧情恰好扮演了导火索的角色。</p><p>要说其中最大的受害者，要数中微氪玩家——月卡、大月卡，偶尔遇到喜欢的角色氪一下命座专武，一年平均投入个几千上万。up 主也好，群友也好，确实关注到了一波不满和退坑意愿的爆发。</p><p>至于我，厨玩法、厨设计，不上头抽卡，觉得有趣时充值一波奖励制作组。另外控制角色练度，和最难深渊打得有来有回，保障手部乘区的游戏体验，全员 0 命无专武也能通关最难副本。游戏本是一种消磨时间的手段，规避抽卡陷阱，「充钱充到怪上」的反噬也会减少很多。所以虽然热情有所下降，但总的来说还能通过游戏获得有趣的反馈，还对游戏的未来有所期待。</p><p>说回问题点，散兵&#x2F;流浪者的剧情并没有太大的问题。流浪者和杜林同为人造物的背景，加上过去所犯下的错误也有类似之处，作为「勇者」出场理解并感化魔龙逻辑上是说得过去的。加上散兵&#x2F;流浪者是一个花费大量篇幅塑造的角色，成长系角色，又有独一档的角色玩法机制，肯定会吸引到一批玩家的喜欢。证据就是流浪者卡池的首次登场卡池成绩相当不错。</p><p><img src="https://picx.zhimg.com/v2-3d59824f23352cfa4a0507d6e590d570.webp" alt="3.3流水"></p><p>尽管流浪者极致嘴臭，加上还未实现对过往过错的赎罪，当时引来一些玩家的争议，但不至于有今日的节奏。想来只是众多争议剧情中的一部分，毕竟剧情这东西没争议反而会比较奇怪。稍微处理得不妥的是后续版本对于这么一个争议角色又花了大笔墨叙述日常，本来作为招安对象在博士决战或者准备中有戏份即可，偏偏安排了须弥学者+须弥活动+童话书勇者这么多非必要的出场，自然也会滋生一波节奏。本来夏活只要做得轻松安逸基本没什么差评，稍微透露点纳塔情报唤起玩家兴趣就好的版本，非要引入什么杜林复活的伏笔。当然你要说编剧安排了杜林复活是纳塔主线的重要伏笔，然后散兵在其中作为和博士决斗的关键角色，那我只能说编剧你可真会拐弯。</p><p><img src="https://picx.zhimg.com/80/v2-0549f060fa019eab735481df7991aa4f_720w.webp" alt="梗图：主角？摄像头？"></p><p>真正有问题的是主角的摄像头化和飘忽不定的战力与成长问题。在《 Re: 0》中有一段极具争议的剧情，就是主角在罗兹瓦尔宅邸刚刚战胜魔兽，然后马上在王宫里像小丑一样因为自己的自尊自大挑战精灵骑士被打成了猪头。这个问题同样在《原神》中反复出现——前期单挑风魔龙、公子、女士、雷神、正机之神，大型世界任务支线也是大放异彩，可最近的主线可谓毫无高光之处，元素力忘了，救人救不了，甚至风之翼都不会开了，讲究的是一个打架耐睡王。我可以接受一个平平无奇的主角，但很难接受一个逆成长、越来越弱、前后矛盾、主线支线割裂的主角，一切都为新角色高光让步的演出方式。这时候游戏 mxz 会站出来，剧情里已经明示了要作为「见证者」，那我只能祝愿你以后玩的游戏都能保持这样的主角塑造。看看隔壁星铁的主角待遇，旅行者馋哭了。</p><p>另外，友商新游的竞争、玩家迟迟等不来的优化（太多优化不痛不痒，完全没有星铁妹妹做的好），已经确实一定程度上撼动「黑暗降临」的霸主地位。但是社区的 mxz 却依旧沉浸在过去的辉煌之中，仿佛一切都没有问题。记得就算是龙王 bug 改动的那次节奏，我也是第一时间看到 mxz 们「我没龙王，没影响」「我不乱转，没影响」「白赚 100 原石」的强行洗白言论充斥着某站评论区，直至后来反对的声音越来越大，最终被掩盖。</p><p>前一阵子接到一些「内部」消息，说是老米确实想要听到一些「真正的用户反馈」。突然阴谋论了一番，以前铺天盖地的抹黑并没有压制住《原神》的成功；那么反其道而行之，无脑夸赞，让老米自认还是遥遥领先，是不是反而会是一种有效的策略？随着最近 ZZZ 开服的褒贬不一，我也确实嗅到了这么一种味道。</p><p>最后防云，贴上抽卡记录。</p><p><img src="https://pica.zhimg.com/v2-0b6a8ac6b5d8cc0fb48681956a7396e2.webp" alt="很非的抽卡"></p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊一聊极有可能被禁止的单踏板模式</title>
    <link href="/post/%E8%81%8A%E4%B8%80%E8%81%8A%E6%9E%81%E6%9C%89%E5%8F%AF%E8%83%BD%E8%A2%AB%E7%A6%81%E6%AD%A2%E7%9A%84%E5%8D%95%E8%B8%8F%E6%9D%BF%E6%A8%A1%E5%BC%8F/"/>
    <url>/post/%E8%81%8A%E4%B8%80%E8%81%8A%E6%9E%81%E6%9C%89%E5%8F%AF%E8%83%BD%E8%A2%AB%E7%A6%81%E6%AD%A2%E7%9A%84%E5%8D%95%E8%B8%8F%E6%9D%BF%E6%A8%A1%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<p>最近工信部发布了《乘用车制动系统技术要求及试验方法》（征求意见稿），指出</p><blockquote><p>在前进挡下通过松开加速踏板实现的制动作用不能使车辆减速至停车。</p></blockquote><p>也即传统意义上的单踏板可停车的设计模式被禁止。虽然只是意见稿，但大概率会落实。</p><p>作为试驾过特斯拉单踏板模式的新手司机，不得不说这就是体验良好的优秀设计（但是因为家人反对最后没买成）。对于优秀设计可能被取缔一事，稍稍发表些看法。</p><p>至于哪些嚷嚷着「反人类」、「防呆」之类说辞的，既指不出究竟坏在哪里，又给不出安全性对比数据，甚至分不清动能回收和单踏板模式的区别，有的只是情绪的宣泄和对品牌的鄙视。这些大概率就是和手动挡抱怨自动挡不安全的同一类人，局限于旧模式而对于旧模式的缺陷不自知，还异常排斥新模式。悲哉！</p><h2 id="单踏板模式与传统燃油车踏板逻辑的异同"><a href="#单踏板模式与传统燃油车踏板逻辑的异同" class="headerlink" title="单踏板模式与传统燃油车踏板逻辑的异同"></a>单踏板模式与传统燃油车踏板逻辑的异同</h2><p><strong>首先，单踏板模式依旧是两个踏板，一个用于加速，一个用于刹车。</strong></p><p>虽然两个踏板的模式本就有局限性，不可见、位置靠近、左右混淆等等，造成屡见不鲜的刹车当油门事故。但至今也没有一种更好的模式的出现，也就不深入讨论了。</p><p><strong>第二，加速踏板和制动踏板，从来不只有 0 和 1 的输入。</strong></p><p>每个踏板都有踩深踩浅的输入，所以从来不是只要考虑踩加速还是踩刹车的二进制思路，而是每一个踏板一个维度，每个维度又可以选择 0-100 输入的复杂模型。车速是由两个踏板共同控制的结果，本身就是一个复杂的操控系统。</p><p>哪怕是传统燃油车，加速踏板也并非只能用于「加速」，特别是高速工况，减少加速踏板压力，由于输入功率减少，车速也会降下来。不同车松开加速踏板后的减速效果也不完全一致。</p><p>单踏板模式只是在减速力度上更大了一些，总体逻辑还是和燃油车一致的。而且工信部的意见也没反对在减速力度上。</p><p><strong>第三，在不踩加速踏板（维持动力输入）时，仍能怠速而不停止的设计才是反直觉。</strong></p><p>进一步讲，科目一学习的挂档后松开离合和刹车（自动挡松开刹车），车辆就会运行就是一个反直觉的操作。</p><p>这里讲述一段运动的模型：因为有阻力的原因，需要提供动力车辆才会行驶。当动力大于阻力，车辆加速；动力和阻力平衡，车辆匀速行驶。而提供动力的模式就是踩加速踏板。</p><p>燃油车完全松开加速踏板，车速也会缓慢降下来，直至一种「怠速」状态。这里的矛盾是，为什么不提供动力的情况下，车辆不会停止？因为发送机提供了一个隐藏的怠速功率，可以抵消最低阻力，使车辆保持低速状态形式。</p><p>正是因为隐藏的功率，使这一点反直觉。回想一下我们认知观里的其他运动物体，有哪一种是不提供动力&#x2F;不用力的使用，能这样一直运动下去？自行车不蹬的话，能一直怠速吗？我们的环境根本不存在物理中的无摩擦理想状况。</p><p>所以这条不踩刹车不能完全刹停的规定就是要维持这种反直觉的设计。</p><p>相反，单踏板模式的最终刹停，与我们传统认知是一致的，也完全不影响需要额外刹车时再去踩一脚刹车。甚至因为从加速踏板挪到刹车踏板间的 0.2s 实际上已经提供了有效的减速，可以进一步减少刹停距离。有老司机会说我们备刹时早就没有这 0.2s 了，可是对于新手司机而言，他怎么可能知道什么时候备刹。突发状况根本没有备刹一说，而日常跟车安全车距才是最重要的，虽然有些司机就是喜欢挤到安全车距里。</p><h2 id="一些数据论证"><a href="#一些数据论证" class="headerlink" title="一些数据论证"></a>一些数据论证</h2><p>也许单踏板模式可以刹停车的模式，会让刹车踏板的操作频率下降。但真要遇到需要急刹的情况，肯定也是迅速从加速踏板挪到刹车上然后重踩，不会傻傻松开加速踏板完事或者踩一脚加速。</p><p>具体刹车踏板操作频率下降会不会影响到肌肉记忆，忘记有刹车踏板一回事，既查不到统计数据也查不到实验数据，有的只是大家的感觉与猜测。</p><p>能查到的最接近的数据是特斯拉官方公布的<a href="https://www.tesla.cn/VehicleSafetyReport">车辆安全报告</a>，比平均的碰撞事故率低。</p><p><img src="https://picx.zhimg.com/v2-2839a82b3e8f7e0a5db253d31a703eb7_r.jpg?source=2c26e567" alt="Q1 2024每起事故行驶里程数"></p><p><a href="https://finance.sina.cn/stock/relnews/us/2023-12-21/detail-imzytwqz0689280.d.html?from=wap">贷款公司发布的数据</a>倒是指出千名特斯拉司机事故率最高。</p><p><img src="https://picx.zhimg.com/v2-87c00230ce44df24a31b0b88c9347918_r.jpg?source=2c26e567" alt="千名驾驶员事故率"></p><p>还有<a href="https://chejiahao.m.autohome.com.cn/partner/dayu/info/8563768?zzd_from=uc-iflow&sm_article_id=5701095055281727492&dl_type=3&&rd_type=relate&recoid=15078724443677733249&sp_gz=0&cid=100&app=uc-iflow&from=article_relate&pagetype=share">一篇报道</a>指出特斯拉死亡率最低，但是报道的篇幅最高（达 95%）。</p><p><img src="https://picx.zhimg.com/v2-4cd70b933e57fb976657f6e663700967_r.jpg?source=2c26e567" alt="千辆汽车售出死亡率"></p><p>报道很有趣，结论也可能完全相反，但实际上也很难看出单踏板模式带来的直接影响。</p><p><a href="https://de.wikipedia.org/wiki/One-Pedal-Driving">Wiki</a>上给出的结论是</p><blockquote><p>还没有更广泛的科学发现或实证统计数据来说明单踏板驾驶在安全性方面是否具有整体积极或消极的影响。</p></blockquote><p>但可以看到一些研究表示单踏板模式可以为驾驶员带来更多的乐趣，并减轻认知负担（通过脑电的分析）<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="论文：单踏板模式对情绪和认知的影响  [https://www.sciencedirect.com/science/article/abs/pii/S0003687020301332](https://www.sciencedirect.com/science/article/abs/pii/S0003687020301332)">[1]</span></a></sup>，也许正是消除了某些「反直觉」设计。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>最后，作为 2 万公里的新手司机，其实也有搞错刹车和加速踏板的时候，好在并没有造成严重的后果，也趁着这个机会分享下。</p><p>我清楚地记得搞错的几回都发生在低速挪车时的怠速工况，因为有一些坡面，需要用到加速踏板。但是绝大多数情况下，低速挪车工况都是在用刹车控制（抬脚动、踩下停）。所以一个走神就会忘记其实踩在加速踏板上，最后挪好车准备停下的时候，会下意识踩下踏板停车，但是实际上踩了加速踏板，这时候会迅速反应过来去踩刹车。好在我平时的驾驶习惯低速时并不会重踩刹车，可以有效避免首次踩错踏板带来的严重后果，无非是因为心慌改踩刹车这次会重踩一下刹车，车里人也会惊一下罢了。</p><p><strong>所以我就是要重重吐槽怠速模式。</strong>如果挪车同样都需要轻踩加速踏板才会动，估计就不会有刹车控制挪车的肌肉记忆。</p><p>当然，我完全尊重有些人就是无法改变习惯，就是适应不了单踏板模式，所以当前不去买或者可以自由设置的模式就是一种不错的平衡方案。</p><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>论文：单踏板模式对情绪和认知的影响  <a href="https://www.sciencedirect.com/science/article/abs/pii/S0003687020301332">https://www.sciencedirect.com/science/article/abs/pii/S0003687020301332</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人机交互</tag>
      
      <tag>产品</tag>
      
      <tag>汽车</tag>
      
      <tag>用户体验</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《铃芽之旅》的灾难哲学</title>
    <link href="/post/%E3%80%8A%E9%93%83%E8%8A%BD%E4%B9%8B%E6%97%85%E3%80%8B%E7%9A%84%E7%81%BE%E9%9A%BE%E5%93%B2%E5%AD%A6/"/>
    <url>/post/%E3%80%8A%E9%93%83%E8%8A%BD%E4%B9%8B%E6%97%85%E3%80%8B%E7%9A%84%E7%81%BE%E9%9A%BE%E5%93%B2%E5%AD%A6/</url>
    
    <content type="html"><![CDATA[<p>《铃芽之旅》（《铃芽户缔》），又是迟到的诚哥作品赏析。之前的工作实在有些忙到麻木了，22 年的作品拖了好久才终于看完，虽说国内是 23 年春才上映，但也拖到了年底才补完，有失粉丝的风范。</p><p>看完之后也是拖了一个多月才开始写评价，虽说有客观原因，但也着实反映了影片或者我自身的一些问题，起码没有让我有足够的激情去「立刻」记录一下观后感。</p><h2 id="关于名称"><a href="#关于名称" class="headerlink" title="关于名称"></a>关于名称</h2><p>无论是一早的「铃芽户缔」，还是之后优化的「铃芽之旅」，又或者日语的原意「铃芽的关门（之旅）」，本作的名字让人摸不着头脑。特别是一开始还不清楚「铃芽」是人名的时候。</p><p>结合 PV 来看，原来关门是背景设定，需要通过关门来避免灾难的发生。那么结合关键词「铃芽」「关门」「灾难」「旅行」，全片的剧情也猜得差不多了。另外，还有很明显的少年少女恋爱要素，可以说是非常标准的诚哥作品了。</p><div style="position: relative; width: 100%;     padding-top: calc(100% * 720 / 1280); ">    <iframe src="//player.bilibili.com/player.html?aid=555961674&bvid=BV1Fe4y1d7U3&cid=773617314&p=1"    style="position: absolute; width: 100%; height: 100%; top: 0;">    scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"</iframe></div><p>虽然取名上显得不明所以（完全没有前两作的明了而吸引人），剧情上可能老套，但「灾难三部曲」第三部，究竟会怎么在旧框架下新展开，又会传达如何的灾难哲学，这一方面还是让人期待的。</p><h2 id="剧情回顾"><a href="#剧情回顾" class="headerlink" title="剧情回顾"></a>剧情回顾</h2><p>首先回顾下剧情，初始地九州宫崎，女主铃芽上学路上偶遇男主草太。然后一见钟情，加上好奇心，放弃上学，追随线索来到一片废墟。废墟中有一扇突兀的门，铃芽意外解开了要石的封印，随后和男主一起关上了门，减轻了一场大灾难（地震）的发生。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225110713.png" alt="小镇的蚓厄"></p><p>这里补充一下作品设定，传说中日本地下有一种很长而巨大的生物，叫做蚓厄，它会在一些废墟的门中钻出，引发地震。而男主作为闭门师一族，使命就是周游日本，关闭这些门，避免灾难的发生。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225120301.png" alt="关门"></p><p>被意外放出的要石「大臣」化作猫形态，并将草太封印在铃芽的板凳中（铃芽和母亲之间的重要物品）。原本普通人是看不到蚓厄的，但是女主因为小时候误入往门因而可以看到灾厄，于是一场围绕重新封印要石的旅行由此展开。</p><p>在大臣的「引导」下，JK+猫+板凳的组合之后又在四国爱媛、关西神户、东京展开旅途，四处关门。这其中，一行人在东京意识到草太化作新的封印，于是草太牺牲自我避免了东京的大地震。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225111128.png" alt="主角团"></p><p>然后铃芽不甘草太的牺牲，回到老家东北岩手找回小时候因为灾难而失去的记忆，并「说服」大臣重新成为要石，解救草太，封印「最初」之门和蚓厄的头尾两端。</p><h2 id="剧情解析与吐槽"><a href="#剧情解析与吐槽" class="headerlink" title="剧情解析与吐槽"></a>剧情解析与吐槽</h2><p>整体剧情中规中矩，非常常规的诚哥式「灾难-解决」框架，包含神话与少年少女的恋爱要素。在《你的名字。》《天气之子》后再度使用此框架，不免让观众觉得有一些审美疲劳。</p><h3 id="公路片的剧情结构"><a href="#公路片的剧情结构" class="headerlink" title="公路片的剧情结构"></a>公路片的剧情结构</h3><p>好在此次有一个很大的结构性改动——「公路片」，全国旅游，由西南向东北的路线。尽管在区域内的故事结构类似，每次封印门都是一波小高潮，但每一个地区都会有自己的特色（顺便回应各地的粉丝可以在自己家乡取景的期待），并且可以推进主线。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2024-02-15_21-00-53.png" alt="「旅游」路线"></p><p>在宫崎，交代了背景及主要矛盾（封印解除，草太成椅）；在爱媛，铃芽学会闭门师的技能；在神户，往门对女主的吸引展开更多信息，草太成为要石也起了线索；在东京，天空中压迫力极大的蚓厄盘旋，草太牺牲自我，形成仅次于结尾的第二高潮；在岩手，要石与蚓厄战斗，最终救回草太，封印蚓厄，是全片最高潮之处。</p><p>通过公路片的形式，整片的节奏框架没有太大的问题，一个个解决逐渐困难的灾难，中途又穿插轻松愉快的日常。旅途中以及各地风土人情的表现效果极佳（这应该是诚哥的优势区间），加上确实对这一方面挺感兴趣，我对《铃芽之旅》在公路片这一层面的表现可以给出很高的分数。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225120101.png" alt="结尾返程还有路人回顾"></p><h3 id="工具人的塑造"><a href="#工具人的塑造" class="headerlink" title="工具人的塑造"></a>工具人的塑造</h3><p>只可惜除了公路片之外，剧情还是略显平庸，加上令人迷惑的人物塑造，让整片的观感大打折扣。</p><p>最大的问题是男女主，尤其是女主的人物塑造，逻辑混乱（或者说需要观众自己去盘人物行为背后的原因，然后勉勉强强圆回来）。首先，女主上学路上碰到个陌生男人就被拐跑了，然后又是不顾家人的劝导，离家出走冒险；对首次遇到的大臣猫表露喜欢并邀请「要不要来我家」，知道真相后因为大臣把自己喜欢的男主变为要石，封印在常世又讨厌大臣；以及一句逆天尴尬的「没有草太先生的世界，我很害怕」，传达出来的对男主的喜欢，有点抽象。到头来，女主的形象是敢爱敢恨？个性鲜明？责任担当？好像都有，好像又塑造得一般般，并不打动人。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225123006.png" alt="抽象台词"></p><p>至于男主，大部分时间都以「椅子」形态出场，不说人物塑造的怎样，仅剩下一个设定工具人+关键时刻懂得牺牲自我的形象。</p><p>相比之下，男配（芹泽，工具人司机）和女配（环姨妈），以及一众的路人塑造得反而比较舒适（路人都是好人 ，淳朴又简单 😭）。男配的好兄弟和搞笑角色形象给观众带来笑声；环姨的责任心还有被左大臣「附身」之后的阴暗面的内心吐露让这位矛盾的家长形象树立的相当成功，加上最后自行车和解的戏份也是相当亮眼。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225111335.png" alt="男女配莫名的CP感"></p><p>另外「环姨+铃芽」与「铃芽+大臣」形成了一种巧妙的映射关系，也算是全片另一维度的亮点。灾难主题之外家庭关系处理的小主题，互相袒露心声不失为一种好选择。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225115844.png" alt="环姨恶性心声流露"></p><p>以上多次提到的「工具人」概念，其实作为要石的两只猫又何尝不是另一种工具人？大臣的调皮任性但一直做着正事，左大臣有点来的不明所以，同样都有一些说不出的怪感。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225120353.png" alt="大臣与左大臣"></p><p>我想把以上种种槽点归咎于设定的复杂。全片其实又很多超出常理之外的设定，往门常世一度让我回忆起观看《追逐繁星的孩子》中莫名其妙的不好回忆，结尾常世中遇见过去的自己的设定让我感觉头要炸了。复杂的设定需要有一堆工具人支撑，而如何处理这些工具人的动机就更难了。女主作为想要传达灾难哲学主题最大的工具人，自身的问题是最多的。</p><h2 id="我们应该遗忘灾难吗？"><a href="#我们应该遗忘灾难吗？" class="headerlink" title="我们应该遗忘灾难吗？"></a>我们应该遗忘灾难吗？</h2><p>灾难会给人带来不好的回忆，真真正正意义上的 PTSD。我们的主人公铃芽也是在小时候遇到的地震大灾难后选择涂黑日记本与遗忘。但是从全片的基调而言，铃芽在结尾回到老家，找回日记本并回忆起过去，传达的是一种「与灾难和过去和解」的哲学。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20240225120522.png" alt="被涂黑的日记本与311"></p><p>和解不是遗忘，更不是逃避，而是接受现实、缅怀过去、珍惜现在、向往未来。本文讨论的灾难指的是自然灾难，没有太多需要追责的寓意，因而更多的是一种敬畏。人类可以通过一些方法减少灾难带来的损失，就好比闭门师的工作，但无法完全避免。灾难发生之后，和解似乎是现实世界中的唯一方法。</p><p>和解需要时间，311 地震过去十余年，新海诚创作了三部灾难相关的电影，也许在《铃芽之旅》这一部才逐渐和解。《你的名字。》显然是艺术作品的浪漫型加工，也是最符合大众期待的通过超自然力量拯救世界的剧情。《天气之子》当初给我的感觉是淡化灾难，用了一种最轻微的灾难形式——雨，虽然水淹东京还是挺震撼的，但剧中人都平淡地对待，似乎「灾难」并不要紧；如今又给我一种逃避灾难的感觉，过度对灾难轻描淡写，装作无所容心以减轻自己的痛苦，实际上灾难带来的苦痛远比剧中的雨大得多。</p><p>如今《铃芽之旅》再次正视了灾难，通过努力去化解&#x2F;减轻灾难，让幸存下来的人与过去和解，重拾对生活的信心。这次的故事很奇幻，传达的主题却写实而乐观，确实是灾难哲学的一个新高度。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>《铃芽之旅》是一个灾难幸存者自我救赎的故事，本可以借助这一立意达到不错的高度。可惜「爱情线」的引入让本作的剧情结构崩塌，多了很多槽点。这其中可能是商业化的妥协，也可能是某些执念，也许电影缺少了很多设定上的补充说明。看来，新海诚在复杂故事的驾驭能力上还是相当不稳定的，期待诚哥的进步。</p>]]></content>
    
    
    <categories>
      
      <category>动漫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动漫</tag>
      
      <tag>新海诚</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>移动端老板报表的设计框架</title>
    <link href="/post/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%80%81%E6%9D%BF%E6%8A%A5%E8%A1%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A1%86%E6%9E%B6/"/>
    <url>/post/%E7%A7%BB%E5%8A%A8%E7%AB%AF%E8%80%81%E6%9D%BF%E6%8A%A5%E8%A1%A8%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A1%86%E6%9E%B6/</url>
    
    <content type="html"><![CDATA[<p>老板报表，顾名思义，就是面向店长、连锁店老板&#x2F;管理员的报表，可以帮助相关经营者查询营业相关数据。随着移动化发展的趋势，老板报表也需要迁移到 App 或者小程序端，让老板可以随时随地查看数据。</p><h2 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h2><p>数据的基本架构为按照单独门店获取相关数据，然后连锁店老板&#x2F;管理员可以查询汇总的数据。数据统计的颗粒度为天，可按天、周、月（或自定义时间周期）查看周期汇总数据。</p><p>基础数据类型：</p><ol><li>营收相关。含销售额、成本、毛利及毛利率。</li><li>销售细节相关。含销售额、优惠金额、退货金额、客单量、客单价、不同渠道的销售额、不同品类商品的数据等。</li><li>会员相关。会员总数、新增会员数、交易笔数、充值金额、储值消费金额、会员消费金额、会员消费占比、结余金额。</li><li>库存相关。进货金额、损耗率、库存周转率（数量）、库存周转率（成本）。</li><li>营销相关。拉动消费额、拉动订单数、客单价。</li><li>订单相关。不同渠道的订单数据、实付金额、退款金额、订单数、客单价。</li></ol><p>在基础数据之上，存在一些环比&#x2F;同比数据，其中环比日期根据选择的时间范围，对比上一周期。</p><h2 id="数据的组织结构"><a href="#数据的组织结构" class="headerlink" title="数据的组织结构"></a>数据的组织结构</h2><p>移动端的页面基本架构是导航栏+分页，但数据报表视图并不合适以导航栏的形式分页，更适合一个长页面平铺+部分数据可详情页跳转。</p><p>回到老板报表上，首页可以展示一些重要的基础数据，然后某些数据有更细节的详情可以下钻分页查看详细数据。不过老板的喜好不同，需要查看的数据也不完全相同，建议首页展示的数据可以自定义搭建。</p><h2 id="可视化样式与视觉表现"><a href="#可视化样式与视觉表现" class="headerlink" title="可视化样式与视觉表现"></a>可视化样式与视觉表现</h2><ol><li>可视化样式非常丰富，但要斟酌哪一种形式更合适。比如：<ol><li>按照日期展示的数据（如：销售额），采用折线图可以起到更好的对比效果，也可以容下更多数据。</li><li>在同一个图表中，有些数据比较维度（单位）存在差异（如业务数据和环比），放在一个图中（尤其是在移动端）会显得混乱，建议切换显示。</li><li>图表需要可交互，点击可显示某一天的具体数据。</li></ol></li><li>可视化图的质感要求。避免点、线、面都过于单薄应用，大量留白，使得最终可视化结果看上去非常空。</li><li>文字与数据的排版、大小需要有层次感，比如成对的数据贴近，重要数据放大，次要数据缩小等等。</li><li>移动端横向滑动是非常不直观的交互行为，应尽量避免此交互。当横向数据过长时，可以考虑限制时间范围，或者优化为纵向列表平铺的形式。</li></ol><p><img src="https://cdn.dribbble.com/users/600809/screenshots/4386882/music-data-report-d.jpg" alt="可视化案例"></p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>新零售</tag>
      
      <tag>可视化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新零售交易信息化管理</title>
    <link href="/post/%E6%96%B0%E9%9B%B6%E5%94%AE%E4%BA%A4%E6%98%93%E4%BF%A1%E6%81%AF%E5%8C%96%E7%AE%A1%E7%90%86/"/>
    <url>/post/%E6%96%B0%E9%9B%B6%E5%94%AE%E4%BA%A4%E6%98%93%E4%BF%A1%E6%81%AF%E5%8C%96%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>偶然获得一次接触新零售行业的机会，在了解一些行业基础和产品体验后，简单做些总结与提问。对具体产品名称作脱敏处理，具体问题没有标准答案，仅供同行自我反思参考。</p><h2 id="新零售背景"><a href="#新零售背景" class="headerlink" title="新零售背景"></a>新零售背景</h2><p>大约在 5 年前，新零售这一概念突然爆火。这其中的原因：</p><ul><li>一是需求层面。更实惠的价格，更高质量的产品，更自由多样的选择，更方便的购物与配送方式——是消费者一直的需求。近十多年来电商全面发展，消费者的购物模式发生了很大的变化，消费者的需求有了阶梯式的升级。虽然电商在很多层面带来了体验的提升，但并不能完全取代线下零售模式——实感体验、家庭&#x2F;友情场景社交、最快的物流，这些都无可替代。但是传统零售确实在近 10 年发展有限，无论是模式、结构、技术层面都没什么太大的突破，急需一次突破性发展以满足消费者的需求升级。</li><li>二是技术层面。电商的发展为传统零售技术突破摸索了不少基础，然后 5G、物联网之类的基础技术的累积让新零售这一概念有了落地的可能性。</li><li>三是资本&#x2F;商业层面。移动互联网、电商之类的热度和用户规模逐渐达到增长顶峰，资本需要有新的热点方向——其中下沉市场和直播继续延续电商的热度，新零售以电商的对立面开辟新市场。</li></ul><p>新零售的出现是为了最终满足消费者的需求（毕竟最后出钱的还是消费者），但在产品实现上，却很少直接面向消费者。消费者购物的线下购物的模式没有太多的变化，最多在店面装潢、支付形态有了更好的视觉&#x2F;购物体验。</p><p>所以足以成就利益关系的产品仅能面向商家。如何解决商家层面的交易、供应链、库存等管理工作中的痛点，提升其中的效率或降低成本，吸引消费者带来更多营收，从而产生更高的利润，才是面向商家的新零售产品需要考虑的目标。</p><h2 id="Q1-产品定位"><a href="#Q1-产品定位" class="headerlink" title="Q1 产品定位"></a>Q1 产品定位</h2><p>两种基本的产品定位：</p><ol><li>帮助个体经营店（店长）经营管理。</li><li>帮助连锁店企业进行各门店管理。</li></ol><p>两种定位的产品有着完全不同的产品侧重点和商业模式。从体验产品来看，主要是定位 2，类似于 ERP 产品。从产品宣传上来看，系统可同时适配两种定位。但似乎对于定位 1 较为模糊，未能清晰定义需求，存在较多功能冗余。</p><p><strong>Q：目前的主要定位是什么？未来的发展定位是什么？</strong></p><h2 id="Q2-产品功能形态与结构"><a href="#Q2-产品功能形态与结构" class="headerlink" title="Q2 产品功能形态与结构"></a>Q2 产品功能形态与结构</h2><p>在产品试用过程中，存在较多的「使用障碍」——许多名词、功能表述等很难直观理解具体用途，特别是二级菜单下的功能点（当然也可能是我太生疏了）。</p><p>以产品设计师的角度，很难将这个系统称作「一个产品」，而是像一种巨无霸的「功能集合」。我无法理解产品的核心功能点，无法评价系统中的功能究竟是否全面，也暂时无法估计每个功能点用户使用的情况。</p><p>首页有一些常用功能的列表，并且支持一些自定义操作，但感觉只是技术层面的小手段，可能也并不能达到「好用」的程度。</p><p>当然 B 端产品普遍业务复杂，且并不那么在意「用户体验」，绝大多数做到成本可控、产品功能可用程度足以。</p><p><strong>Q：公司对于产品「用户体验」是一种怎样的态度？是否考虑过优化整体产品功能结构，比如优先展示核心&#x2F;最基础的功能，简化二级菜单等等？</strong></p><p>以库存为例，用户层可以直观理解到库存这一功能点，后续的操作可能来源于当前的库存信息，系统是否能根据库存信息情况推荐用户相应功能，而非把库存中所有功能点都列出来。</p><h2 id="Q3-商业模式"><a href="#Q3-商业模式" class="headerlink" title="Q3 商业模式"></a>Q3 商业模式</h2><p>SaaS 型产品的基本模式是整套产品的售卖。另外我有看到一些付费功能点，比如付费 API 会根据使用情况需额外充值购买使用次数（但更多是自负盈亏的感觉，并不作为产品自身的盈利点）。</p><p><strong>Q：当前产品的主要付费模式是否存在一些差异，比如订阅式、依据功能模块拆分付费？前面提到的两种产品定位，付费是否差异化？</strong></p><h2 id="Q4-核心竞争力"><a href="#Q4-核心竞争力" class="headerlink" title="Q4 核心竞争力"></a>Q4 核心竞争力</h2><p>打造一款具备商业价值的产品至少需要：</p><ol><li>产品满足用户需求，解决痛点，并存在稳定&#x2F;增长的市场机会。</li><li>产品存在一定的技术壁垒或资源壁垒，和竞品相比具备差异性核心竞争力，可以在市场竞争中获取一定优势。</li><li>足够优秀的团队。</li><li>清晰明确的战略目标与计划。</li></ol><p>暂时不考虑第四点。第一点我认可需求的存在和市场发展前景，但在产品是否能够满足前面提到的目标存疑；第二点暂时无法得出结论；第三点需要融入团队进一步打探（根据当前已知的信息认可团队的能力）。</p><p><strong>Q：目标企业是否认可产品带来的价值？相比与传统模式，效率是否提高，成本是否降低，这其中有没有量化方法？</strong></p><p><strong>在技术&#x2F;资源上是否存在一定积累？或者相比于竞品有着无可替代的产品优势？（我并不觉得功能全面性是一种壁垒，别的产品无法实现的核心功能点才是。）</strong></p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>商业模式</tag>
      
      <tag>新零售</tag>
      
      <tag>信息化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>寻找迷茫中的曙光 | 2022年终总结</title>
    <link href="/post/%E5%AF%BB%E6%89%BE%E8%BF%B7%E8%8C%AB%E4%B8%AD%E7%9A%84%E6%9B%99%E5%85%89-2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <url>/post/%E5%AF%BB%E6%89%BE%E8%BF%B7%E8%8C%AB%E4%B8%AD%E7%9A%84%E6%9B%99%E5%85%89-2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>迟到的 2022 年度总结。其实我并没有做年度总结的习惯，比如去年就没有，今年的总结大概也是一时兴起。或者，今年以来似乎更加重视对「历史」的记录了，有不少数据足以整成一份总结。</p><h2 id="工作"><a href="#工作" class="headerlink" title="工作"></a>工作</h2><p>当产品经理的第二个年头（年中的时候刚好 1 周年），工作相关的数据自然没法贴出来，只能大致讲讲工作总结以及自己对于产品经理的理解吧。</p><p>这一年主要在三条产品线上辗转：其中两条产品线是新的产品线，仅有一些技术积累，产品层面完全是从 0 到 1；还有一条产品线做了大规模整合更新，集成其他功能模块，还好我不具体负责其他整合的模块，只负责对原产品做架构调整和日常功能维护及更新。一般情况下是单线操作，最忙的时候双线并行，回顾下来一年里也并没有太过忙碌（本职），除了总会被拉去其他产品线做做测试&#x2F;打杂工作。</p><p>这一年的主要成长，要我自己总结的话，可能是对产品经理的工作更为熟悉了（学到了更多知识，和团队磨合得更舒适），同时相关业务更熟悉了。虽然我觉得业务经验没什么优势与竞争力，戴森也在自传中反复强调经验的局限性，真正重要的是创造力、聪明和坚持不懈，但这三点也太难量化了。</p><p>和其他团队交流的过程中，我也逐渐认识到产品经理的重要性，只不过这种重要性是否能被企业&#x2F;团队理解，尤其在中国，是值得怀疑的。产品经理的专业性（包含通用的专业技能）一直都捉摸不透，甚至被认为没有专业性，这一点实在让人苦恼。比如，我可以让负责的产品线有更高的研发效率（相对于其他组），产品质量更有保障（测试及用户反馈），但人家可能更关心用户量&#x2F;销量与营收。</p><p>作为一名动画爱好者，我一直把产品经理类比于监督&#x2F;导演，是具备足够专业性的工作。需求&#x2F;原型就好比剧本&#x2F;分镜，还有后面和程序、设计、测试沟通也同样可以类比于监督和原画、动画、摄影、配音等执行层面的沟通。产品经理这一职位什么时候会有监督一样的认可度呢？</p><h2 id="阅读"><a href="#阅读" class="headerlink" title="阅读"></a>阅读</h2><p>豆瓣记录本年共读了 14 本书，还包括了 3 本以前读过的书的粗略回顾与补档。虽说差不多有了一月一本的体量，但离年初计划的一月两本还是有点差距。就算把《史记》的六册、《基督山伯爵》的三册拆开来算，也还是差了一些。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/bd5d2c076bcdc4b7d964b35eeb050af.jpg" alt="我的豆瓣读书2022"></p><p>坚持完成硬指标确实不容易，毕竟书有长有短、有难有易，人也有闲有忙。好在确实有在坚持阅读，甚至比我上学时期读的书还要多一些。</p><p>一半的书和工作有关，不过基本上是在拓展工作范围技能圈，觉得自己短板在哪里就补一些。这类书普遍比较无聊又难懂，看了也不一定记得住，工作中真有什么问题了也绝对不会生搬硬套。所以最终真正剩下的，大概只有看书时的静心和思考，有趣的案例，以及能记一点是一点的方法论了。</p><p>相比之下，与工作无关的书可就有趣多了。比如花了三四个月的时间，读了一遍《史记》（大部分是译文）——原来史书也可以加入那么多「玄幻」因素，以史书为基础的影视作品也就不足为奇。有很多故事都足够有趣（比如广为称赞的《刺客列传》），还有从不同人物视角反复讲述一些历史事件。还有一点值得留意，司马迁虽然在语言上客观，不过文笔却能感受到主观的情感，或褒或贬，甚是有趣。</p><p>还有《基督山伯爵》《白夜行》两本小说——大仲马的文笔实在看得舒适，全书连贯易懂，着实有种爽文的感觉，结尾点到「等待」与「希望」是人类最伟大的智慧与美好，也高度概括了全书的主旨；而东野圭吾则在故事构思与写作技巧上让人称赞，从一开始双线看得云里雾里，到中期逐渐看清，感受到雪穗的可怕，再到后期谜底揭晓而感慨，「她一次都没有回头」的结尾拥有让人堕入黑暗的能力。如此两部，一明一暗，当选年度最佳读书。</p><p>至于明年的读书计划，整体还是和今年保持一致吧（目标总要定的高一些）——一月两本，一本专业、一本娱乐，另外可以恶补一些经济学相关的书。</p><h2 id="影视"><a href="#影视" class="headerlink" title="影视"></a>影视</h2><p>相比于读书，影视就没有规划，显得随意多了。全年记录了 41 部作品，以剧集为主，电影相对较少，还有不少是剧集的衍生剧场版。从体量上看有所增加（可能是记录得多了），但绝大多数是一些旧作，比如二三十年前的《老友记》，以及追着泛式新番时光机的十年前老番补档。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/269994aea7e4da2adfdc7776a447edd.jpg" alt="我的豆瓣影视2022"></p><p>其中主要的原因是，本年值得看的作品还是太少了——院线电影除了社交需求外，没有想看的；新番也是自从懒得追番后看得很少，基本等完结风评稳定后才会补一些，今年也就看了《辉夜 3》《赛博朋克：边缘行者》，还有《孤独摇滚》算今年 10 月番，虽然补得晚了一些没在图里，也勉强算在总结里吧。</p><p>最大的成就是，把一直拖着没看完的《老友记》补完了（衍生作什么的忽略）。虽然后期 Ross 和 Rachel 分分合合略显狗血，槽点满满，搞得有点剧情疲劳，但是全剧营造的友情、爱情、事业、娱乐氛围还是让人舒适的，是我向往的生活。</p><p>年度最佳投给《边缘行者》和《孤独摇滚》，需要投给当年作品就实在有限了。刚好又是一部暗，一部明——《边缘行者》以极度浪漫和动画艺术的风格，以及超强的作画和表现力，讲述了一个「痛，太痛了」的无力故事，太容易引发共鸣；《孤独摇滚》则越刷越可以看到制作组的用心，鬼才监督永远能整出好活，表情包破圈，动画圈讨论与二创氛围良好，你的下一部轻音又何必是轻音，是一部诚意满满又能引起动画人共鸣的音乐&#x2F;摇滚作品（CD 买爆）。</p><p>影视方面没有太多计划，只求明年可以有更多有趣的作品值得观看与记录，另外待看列表可以逐步清理下。</p><h2 id="创作"><a href="#创作" class="headerlink" title="创作"></a>创作</h2><p>创作方面，还是文字（图文）创作为主，主要发布平台知乎以及 GitHub Pages。多平台发布实在太过于麻烦，Github Pages 仅作独立站玩玩以及留档。</p><p>全年共发布 18 篇文章，共写作 10w+字，产量着实有点低，也略少于年初计划的一月两篇。虽然有在坚持写作，但是持续产出还是挺累的——想主题、理思路、找素材、填文字，每一个步骤都要耗费不少精力和时间。</p><h3 id="知乎"><a href="#知乎" class="headerlink" title="知乎"></a>知乎</h3><p>流量反馈上，知乎全年阅读量大约在 15w（年初仅有几万的阅读量，具体记不清了），累计将近 20w 阅读量；日均阅读量由 100 多到如今的 400 左右；粉丝量由 40 不到涨到约 120，大约翻了 2 倍。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230120224211.png" alt="知乎阅读量2022"></p><p>创作分从 4 级升到了 5 级，基本只有优质内容分超出平均水平，当然我完全不懂优质内容背后的算法就是了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230120230345.png" alt="知乎创作分雷达2022"></p><p>数据角度实在是有一些些难看，作为八九年老用户依然是小透明一名，虽然我可能就是以一种透明的模式在玩耍罢了。更新频率低得可怜，发文基本全靠文章，新出的文章发布回答功能里推荐的问题更是完全没有流量；曲高和寡完全是死路一条，越是专业性的内容越是毫无受众和流量。偶尔踩了一点热点的边，或者突然发表了争议性内容（争议和擦边永远是流量的神），可能反而会数据好一点。</p><p>年度最佳文章——<a href="https://skeathytomas.github.io/post/scoop%E2%80%94%E2%80%94%E4%B9%9F%E8%AE%B8%E6%98%AFwindows%E5%B9%B3%E5%8F%B0%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%EF%BC%88%E5%8C%85%EF%BC%89%E7%AE%A1%E7%90%86%E5%99%A8/">Scoop——也许是 Windows 平台最好用的软件（包）管理器</a>，斩获最多阅读量、赞同量和收藏量。虽然我觉得文章质量也就一般水平，大部分内容属于翻译源工具文档水平，仅有最后的对比分析有那么一些些价值。文章的流量大多属于长尾流量，随时间推移毫无下降趋势，可能的确在搜索结果中解答了部分用户的问题。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230120230929.png" alt="年度最佳文章2022"></p><p>虽然整体数据一般，却在年底收到了来自官方的关注——新年礼物 get，感谢@知乎游戏。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/bdba24c13f8c2d85274f94fa3bc48f9.jpg" alt="知乎新年礼物2023"></p><p>新的一年里继续保持输出，总体还是以自己的节奏来。不过稍稍对于流量感兴趣了一些，可能会：</p><ul><li>增加更新频率，年度目标不少于 30 篇创作。</li><li>拆分文章，不要想着大而全，随便一写就大几千近万字，多则两三千，少则一千足矣。</li><li>试着关注一些问题，并快速输出一些回答，之后可以在博客或文章归档。</li><li>关于动画作品的输出太少了，偶尔也得发发自己工作之外的兴趣内容。</li><li>目标是 500 粉+1000 日流量。</li></ul><h3 id="博客"><a href="#博客" class="headerlink" title="博客"></a>博客</h3><p>在博客独立站方面的数据，没有平台的推送加成就显得更加惨淡了。Google Search Console 数据仅有 3k 的 impressions 和不到 100 的点击，平均 CTR 倒是一直在 3%左右，结论就是能吸引到一些用户搜索点击但不多。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230121153552.png" alt="Google Search Console 2022"></p><p>Google Analytics 数据也差不多，最多月活 200+。全年最愚蠢的行为是为了整理本地文档，更改了目录结构，使得网页 URL 修正（后来发现 hexo 配置可以自定义标题和 URL），然后所有网页重新收录导致年中的时候流量大跌，至今也没恢复到原先的水平。虽然最近的数据走向有恢复的趋势，但是引入了好多 404 着实有点污染。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230121170421.png" alt="Google Analytics 2022"></p><p>新的一年也没有太多要求，只求稳住数据，希望可以吸引到更多读者。</p><h3 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h3><p>全年在 GitHub 上的主要贡献一是更新博客，二是开了一个小工具项目的 repo 并持续更新，还在一些仓库下提了一些 issue。全年一共 200+贡献，也是 GitHub 最活跃的一年了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230121193851.png" alt="Github 2022"></p><p>另外新开的 repo 数据不错：目前获得 30+ star，release 下载量也破 1000 了，而且从下载量上看，还处于指数增长阶段。我承认这个 repo 蹭了《原神》的热度，不过发布得晚丢失了很多先发优势，也没有强势推广，发行平台有比较高的门槛，如今有此数据已是很好的成绩。另外这个工具各方面确实满足自己的使用需求，甚是满意。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2023-01-12_22-26-35.png" alt="刻晴办公桌下载量2022"></p><p>新年计划的话，继续把老项目维护得更好用，博客也日常备份更新，有机会与想法的话试试再写写有趣的项目吧。</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其他方面，之前发的论文本年度意外有很好的被引数据——年度被引用次数 16，累计被引 20。虽然已不在学术界混，但通过这些数据还是看到了自己的研究为别人带来的价值。另外，我的主要研究方向是通过用户评论理解产品需求。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230121230824.png" alt="论文被引2022"></p><p>还有一些创作发布在 B 站，不过 B 站的流量更加离谱。全年最佳来自随手录屏的一局《雀魂》，流量占比 90%以上，真实感受到流量真的是风刮来的。还有一些流量来自前面提到的小工具的教程视频，其余的流量完全可以忽略不记。视频媒介有其优势空间，不过我创作的内容显然不在这一优势空间内，所以之后也不会作为主要舞台。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20230121233225.png" alt="B站数据2022"></p><h2 id="关于疫情与总结"><a href="#关于疫情与总结" class="headerlink" title="关于疫情与总结"></a>关于疫情与总结</h2><p>2022 年最大的事情莫过于疫情防控的魔化，然后年底毫无准备的突然放开。上半年在校园论坛极力反对的年度「好文」《为什么我们坚持防疫》完全成了笑话，意识到哪怕数据一致、认知水平一致，也完全可以得出不同的结论，更何况数据本身就可以「不那么准确」。</p><p>政治大于一切，科学与你何关，何况了解越多，科学也是具有模糊性，越是有政治空间。这一年群魔乱舞，看到了太多不能说的东西，也见识到了太多无能为力，仅有的目标只剩下尽可能保护好身边的人。</p><p>希望新的一年可以好一些。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
      <tag>数据</tag>
      
      <tag>总结</tag>
      
      <tag>2022</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>总会踩一次 Python 引用与拷贝的坑</title>
    <link href="/post/%E6%80%BB%E4%BC%9A%E8%B8%A9%E4%B8%80%E6%AC%A1-python-%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%9D%91/"/>
    <url>/post/%E6%80%BB%E4%BC%9A%E8%B8%A9%E4%B8%80%E6%AC%A1-python-%E5%BC%95%E7%94%A8%E4%B8%8E%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%9D%91/</url>
    
    <content type="html"><![CDATA[<p>起因是在写<a href="https://github.com/SkeathyTomas/genshin_artifact_auxiliary">刻晴办公桌</a>新功能本地数据保存的时候，需要加载与更新数据，然后就莫名踩了一次动态数据类型的坑。正好借着这个机会整理一下 Python 中的数据类型，以及引用和拷贝相关的知识。虽说网上总结很多，但这一次想要自己记录一遍。</p><h2 id="Python-的数据类型与赋值"><a href="#Python-的数据类型与赋值" class="headerlink" title="Python 的数据类型与赋值"></a>Python 的数据类型与赋值</h2><p>Python 中变量不需要声明，而是用赋值（&#x3D;）的方式创建。某种意义上，变量就像指针（但是这个指针也没有类型），指向内存中具体的数据，而赋值就是完成「指向」这一操作。如果等号右边是具体的数据，也顺便完成了数据在内存中的创建操作。</p><p>虽说变量没有类型一说，但是具体的数据 Python 还是有类型的，Python 3 有 6 种标准数据类型——Number（数字）、String（字符串）、Tuple（元组）、List（列表）、Set（集合）和 Dictionary（字典）。其中前三种是静态数据类型（不可变），后三种是动态数据类型（可变），具体每一种数据类型的含义不再继续展开。可变与不可变的含义为是否可对该内存中的数据进行修改。</p><h2 id="引用与拷贝"><a href="#引用与拷贝" class="headerlink" title="引用与拷贝"></a>引用与拷贝</h2><p>从本质上讲，赋值操作即是一种引用，前面提到的「指向」和「引用」含义是一致的。除了初始化这种建立变量到内存数据的引用，对旧变量重新赋值、变量之间互相赋值也是常见的引用，比如<code>b = a</code>。</p><p>重新赋值是把就旧变量指向新的数据，而引用变量并不是再创建一份数据，而是把新变量指向赋值变量引用的数据。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20221230145626.png" alt="静态变量引用"></p><p>以上对于静态数据和动态数据（整体）都是成立的，但是动态数据包含索引操作，比如需要改变列表中第一个数值，就会用到<code>a[0] = xx</code>这样的操作。前面提到动态数据是可变的，索引赋值就是改变同一内存地址数据的操作。所以如果<code>a, b</code> 同时引用了一个列表数据，而对<code>b</code>进行了索引赋值修改，由于<code>a</code>还是指向了同一个已修改的数据，所以会出现反直觉的<code>a</code>也修改了数据的情况。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20221230151319.png" alt="动态数据索引赋值"></p><p>补充一下代码及输出：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>b = a<br><span class="hljs-meta">&gt;&gt;&gt; </span>b[<span class="hljs-number">0</span>] = <span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br>[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><p>不过这样引用肯定会遇到需求上的问题——比如有一份原始数据，现要拿出一部分修改&#x2F;添加，经过校验后返回数据。因为引用数据的修改直接修改了原数据，自然是不妥的。所以需要引入拷贝的概念，即创建一份新内存地址的数据，数据内容和原来一样，但互相独立。</p><h2 id="浅拷贝与深拷贝"><a href="#浅拷贝与深拷贝" class="headerlink" title="浅拷贝与深拷贝"></a>浅拷贝与深拷贝</h2><p>数据类型可以嵌套，比如列表中套列表。浅拷贝仅拷贝第一层数据，嵌套内的数据还是指向原地址；而深拷贝会将所有嵌套结构都拷贝一份，真正做到两个数据完全独立。</p><p>浅拷贝的方法是切片操作（<code>a[:]</code>）、数据类型自带的<code>copy()</code>方法或是<code>copy</code>模块的<code>copy()</code>方法，深拷贝的方法是<code>copy</code>模块的<code>deepcopy()</code>方法。以上概念都过于抽象，建议结合实例进行理解。</p><p>实例一：浅拷贝对第一层进行拷贝处理，所以<code>b[0]=[2,2]</code>并不会对<code>a</code>进行修改，但<code>b[0][0]=2</code>由于对第二层修改了数据，<code>a</code>也就随之变动。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>a=[[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],<span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>b=a.copy()<br><span class="hljs-meta">&gt;&gt;&gt; </span>b[<span class="hljs-number">0</span>]=[<span class="hljs-number">2</span>,<span class="hljs-number">2</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>[[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], <span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br>[[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>], <span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span>a=[[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],<span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>b=a.copy()<br><span class="hljs-meta">&gt;&gt;&gt; </span>b[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>[[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], <span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br>[[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], <span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><p>实例二：深拷贝完全独立数据，所以无论<code>b</code>怎么修改，<code>a</code>不会变动。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-meta">&gt;&gt;&gt; </span><span class="hljs-keyword">import</span> copy<br><span class="hljs-meta">&gt;&gt;&gt; </span>a=[[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],<span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>b=copy.deepcopy(a)<br><span class="hljs-meta">&gt;&gt;&gt; </span>b[<span class="hljs-number">0</span>][<span class="hljs-number">0</span>]=<span class="hljs-number">2</span><br><span class="hljs-meta">&gt;&gt;&gt; </span>b<br>[[<span class="hljs-number">2</span>, <span class="hljs-number">2</span>], <span class="hljs-number">3</span>]<br><span class="hljs-meta">&gt;&gt;&gt; </span>a<br>[[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>], <span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><p>再补一张<a href="https://draapho.github.io/2016/11/21/1618-python-variable/">大佬</a>做的图帮助理解（切片也是浅拷贝哦）：</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20221230160051.png" alt="浅拷贝与深拷贝"></p><h2 id="踩坑场景回顾"><a href="#踩坑场景回顾" class="headerlink" title="踩坑场景回顾"></a>踩坑场景回顾</h2><p>回到自己的项目和踩坑时的场景：因为要做圣遗物数据导出与读取功能，避免不了一些本地数据的增删改查操作（实际上删还没做），于是顺利踩坑。当初觉得这种互相引用的方式很蠢，自己写代码的时候肯定会避免这种误导性写法，结果蠢的还是自己。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-variable language_">self</span>.artifact = <span class="hljs-variable language_">self</span>.artifacts[<span class="hljs-variable language_">self</span>.<span class="hljs-built_in">type</span>][<span class="hljs-variable language_">self</span>.archive.currentText()]<br></code></pre></td></tr></table></figure><p>等号右侧是读取了所有圣遗物保存方案中的一个，数据类型是字典，其中<code>self.archive.currentText</code>是下拉选择框中的方案名称。选择某一个选项相当于读取了数据，并呈现相关数据结果，也即实时数据。因为本工具实时数据结果就是<code>self.artifact</code>，所以当进行了新的识别后，数据就自动更新到<code>self.artifacts</code>这个所有的方案数据中了。</p><p>当初搜遍整个文档，debug 许久，也不明白究竟自己对<code>self.artifacts</code>的数据更新是在哪里完成的，直至回想起 Python 的数据类型。解决方案也非常简单，由于直接对最深层进行拷贝，也不会有浅拷贝与深拷贝相关问题。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-variable language_">self</span>.artifact = <span class="hljs-variable language_">self</span>.artifacts[<span class="hljs-variable language_">self</span>.<span class="hljs-built_in">type</span>][<span class="hljs-variable language_">self</span>.archive.currentText()].copy()<br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>尽管自己可能并不是那么适合做基础技术科普，讲得可能没那么专业全面，可能还有潜在错误（如果有的话请尽快通知我），不过本文的主要目的还是给自己长个记性。</p><p>如果下次遇到了莫名其妙的数据突然就被更改了的情况，可能就是在引用和拷贝上踩了坑，不论是我还是身为读者的你。</p>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Coding</tag>
      
      <tag>Python</tag>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搜索与匹配规则</title>
    <link href="/post/%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99/"/>
    <url>/post/%E6%90%9C%E7%B4%A2%E4%B8%8E%E5%8C%B9%E9%85%8D%E8%A7%84%E5%88%99/</url>
    
    <content type="html"><![CDATA[<p>对于搜索功能以及搜索想要的结果（匹配规则）一直都不是那么清晰，和开发交流的时候也不好讲清楚到底是怎样的需求。特此整理本篇搜索相关的笔记，供自己与读者学习。当然本篇重点在于搜索行为和用户想要的搜索结果之间的逻辑，而非界面&#x2F;交互层面的元素整理。</p><h2 id="什么是搜索"><a href="#什么是搜索" class="headerlink" title="什么是搜索"></a>什么是搜索</h2><p>简单来说，搜索就是在一个集合里找到想要的元素。</p><p>这个集合可能是明确的，比如我桌上堆了一堆书，我知道里面有一本书 A，搜索就是在这堆「明确」的书里找到书 A。这里的「明确」可能还含有数量较少的特点，由于人类一次性能够快速处理的信息数量十分有限，数量一大这个集合本身就算能在数学上清晰定义，对于用户也是抽象的。</p><p>所以更多情况下，这个集合可能不那么「明确」。用户可能不明白这个集合里究竟有什么，也不清楚自己要找的元素究竟在不在集合里。还是拿上面书的例子，还是要找书 A，只是我不确定在不在我桌上这堆里，可能在我的书柜里，也可能带出去了（借给了别人、带到了别处），甚至可能丢了。我所知的信息仅有——我确实买过这本书，这里的集合就是我所有买过的书。</p><h2 id="搜索的基本方法"><a href="#搜索的基本方法" class="headerlink" title="搜索的基本方法"></a>搜索的基本方法</h2><p>以我浅薄的理解，搜索的最基本方法就是一个一个比对集合中的元素，是否与自己的预期一致（复杂度 O(n)）。比如上面书的例子，搜索的方法就是一本一本翻过来，直至翻到自己想要的那本书。</p><p>计算机天然对搜索、比对数据具备优势。所以当搜索集合比较大的时候，计算机能够提供非常大的帮助，搜索&#x2F;查找也是非常基本的算法。至于具体的算法，优化搜索的速度（二分、索引、哈希表之类的），就不具体探讨了。</p><h2 id="搜索的使用场景"><a href="#搜索的使用场景" class="headerlink" title="搜索的使用场景"></a>搜索的使用场景</h2><p>前文大都提到的是比较广泛的搜索概念与方法。在实际的应用中，搜索及相关的业务流程也涵盖诸多方面：从最基础的文字&#x2F;字符串搜索，到图像、声音、视频，再到以图搜图、听音识曲等功能强大的搜索引擎。复杂一点的搜索引擎，都会有专门的团队负责。由于我没有做搜索产品的经验，也就不在这方面多讲，主要还是聊聊最基础的文字搜索与匹配规则。</p><p>所谓文字搜索的场景，指的就是用户的输入是一个「字符串」，系统返回和此「字符串」相关的内容。至于什么叫做「相关」，就由「匹配规则」来决定了。</p><p>逻辑上，相关性包含三种形式：</p><ol><li>完全一致，即返回结果和用户输入完全一致。对应的使用场景是用户清楚地知道自己输入的准确性，并希望获取准确的结果，比如各类文档内的搜索定位关键字就是这种逻辑（但是从整篇文档角度却是包含逻辑）。</li><li>包含，即搜索结果完全包含用户输入。一般情况下，用户输入较短，而搜索集合中的多个元素都可能包含输入内容。常见的文件搜索（如 Everything）就使用了此逻辑，当然某些高级功能可能在此基础上进行拓展（比如正则表达式）。</li><li>语义相符，即搜索结果包含部份输入或与输入语义上相近。由于用户的输入不受限制，加上用户可能并不能清晰描述自己想要搜索的内容，以上两种逻辑可能并不满足用户的实际需求，产生大量搜索结果为空的情况。所以，此逻辑对用户输入进行分词、同义词替换（语义替换），搜索结果包含全部或部份分词、同义词内容。大多数搜索引擎都采用了此逻辑，当然搜索引擎的相关性逻辑远比这里描述得复杂多。</li></ol><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20221220145316.png" alt="搜索相关性的三种逻辑示意图"></p><h2 id="匹配规则"><a href="#匹配规则" class="headerlink" title="匹配规则"></a>匹配规则</h2><p>至于匹配规则，一般而言有两种：精确匹配和模糊匹配。虽然没有与三种相关性一一对应，但精确匹配包含了「完全一致」和「包含」两种逻辑，而模糊匹配则与「语义相符」对应。</p><h3 id="精确匹配"><a href="#精确匹配" class="headerlink" title="精确匹配"></a>精确匹配</h3><p>首先来说精确匹配，「完全一致」和「包含」在算法上非常接近，都是找到一模一样的字符串。不过「完全一致」往往仅返回一个结果或者无结果（搜索集合元素重复的情况在业务上需要谨慎处理），很多情况下不会仅仅采用「完全一致」的匹配规则。而是把「包含」的结果也都列入结果中，并按照一定的规则排序。</p><p>「包含」的匹配规则可以包括向前匹配、向后匹配、前后匹配，代表补充的内容在前、在后，或是在两端。实际的业务并没有那么高的细致需求，「包含」概念已经比较符合人们的记忆习惯了，无论前后补充，有就可以了。</p><h3 id="模糊匹配"><a href="#模糊匹配" class="headerlink" title="模糊匹配"></a>模糊匹配</h3><p>模糊匹配就与「语义相符」的相关性一样在定义上就显得「模糊」一些，指的是输入的字符串拆分后分布在搜索结果元素中。这就涉及到输入该怎么拆分（分词，特别是中文分词），拆分后是否可以打乱分词顺序，是否可以重复分词，是否可以忽略部份分词，分词之间间隔长度等等因素。</p><p>由于涉及复杂的底层的算法，在业务上又没有那么讲究（除非专门的搜索团队，有一套完善的搜索结果评估体系），大多数是情况下提一下支持模糊匹配也就足够了。</p><h2 id="搜索结果排序"><a href="#搜索结果排序" class="headerlink" title="搜索结果排序"></a>搜索结果排序</h2><p>前面提到了相关性的三种逻辑和两种匹配规则，但在实际的搜索业务中很少单独使用其中的一种，尤其是在使用模糊匹配的时候，精确匹配也同样会用上。所以对于搜索结果，除了需要对同样匹配规则下的结果进行排序，也需要对不同匹配规则下出来的结果进行排序。</p><p>不过搜索结果排序本就是搜索业务的核心之一，如果有商业目标的话还需要考虑用户体验与广告推荐&#x2F;竞价的平衡，这些就不在本文讨论范围之内了。</p><p>回到常规的排序，最基本的顺序就和提出的三种相关性顺序一致：</p><ol><li>完全一致。</li><li>包含。组内排序可以优先选择向后匹配的内容，因为人们的思维习惯就是记住一句话的前面部份。</li><li>语义相关。组内排序可以综合考虑结果包含分词的数量，是否在权重高的位置（标题、标签），分词间隔长度等等进行排序。</li></ol><p>此外，同一分类下如果还有多个结果，可按照业务需求按照字母&#x2F;拼音顺序、其他数值指标（相关性、评分等）进行排序，或者允许用户切换排序规则与升序&#x2F;降序。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>再次重申，本文仅对搜索这一需求和最简单的文本匹配规则进行思考和整理，不包含任何界面相关的元素（如搜索框、按钮、输入候选提示、结果列表等），而且在匹配算法上也未进行深入探讨。</p><p>不过这些搜索概念的整理，应该已经足够应对非搜索团队内的绝大多数业务了，具体的还可以结合实际的业务给出更加具体的 PRD。</p><p>回到搜索这一需求，虽说在移动互联网大背景下，搜索已完败于智能推荐，搜索自身的算法也并没有太大的升级。用户层无太大的搜索体验升级的感知，反而是被信息爆炸影响大大增加了搜索到想要信息的难度。</p><p>最近比较火热的 ChatGPT，可能是搜索引擎发展方向之一。一来可以帮助过滤信息垃圾，使得用户更快获取搜索结果与问题答案（准确度是未来优化方向）；二来自然对话的方式与上下文记忆使得用户输入与反馈都更加符合情感需求，比起知识图谱这种字典&#x2F;百科式模式有更广泛的应用场景（但专业性和规范性可能有所缺失）。</p><p>无论如何，我都非常看好 ChatGPT 的发展，至少让我看到了完美解决搜索领域痛点的可能性。至于商业目标，之后再考虑吧。</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>用户体验</tag>
      
      <tag>搜索</tag>
      
      <tag>匹配规则</tag>
      
      <tag>ChatGPT</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>圣遗物评分工具：刻晴办公桌技术整理与总结</title>
    <link href="/post/%E5%9C%A3%E9%81%97%E7%89%A9%E8%AF%84%E5%88%86%E5%B7%A5%E5%85%B7%EF%BC%9A%E5%88%BB%E6%99%B4%E5%8A%9E%E5%85%AC%E6%A1%8C%E6%8A%80%E6%9C%AF%E6%95%B4%E7%90%86%E4%B8%8E%E6%80%BB%E7%BB%93/"/>
    <url>/post/%E5%9C%A3%E9%81%97%E7%89%A9%E8%AF%84%E5%88%86%E5%B7%A5%E5%85%B7%EF%BC%9A%E5%88%BB%E6%99%B4%E5%8A%9E%E5%85%AC%E6%A1%8C%E6%8A%80%E6%9C%AF%E6%95%B4%E7%90%86%E4%B8%8E%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>先丢个项目地址： <a href="https://github.com/SkeathyTomas/genshin_artifact_auxiliary">刻晴办公桌</a> ，功能介绍可参考 README 或封面图，有兴趣的玩家可以前往 release 下载最新版本体验。</p><p>真正意义上第一个附带 GUI 的桌面应用开发，总感觉需要有一篇技术总结。不过我也不是专业程序员，只是简单学过 C，懂一点面向过程与面向对象的区别，之后用 Python 做过数据分析类研究。要是遇到各种不规范问题，欢迎帮我重构，我就随便写着玩的。</p><p>这个工具的需求及想法来源在之前几篇文章里已经介绍得非常清楚了（虽然后续迭代变化&#x2F;增加了不少需求），本篇主要从技术角度讲讲我是如何作为一个小白将之前的需求实现的。顺带简单聊聊技术之于产品经理这一一直争议不断的话题。</p><h2 id="GUI-框架选择"><a href="#GUI-框架选择" class="headerlink" title="GUI 框架选择"></a>GUI 框架选择</h2><p>在之前需求调研的时候，基本就确定了需要贴图+OCR 两大核心技术。所以相比于其他圣遗物评分工具的网页版、小程序版，本地应用程序基本坐实。简单查了一些常用的 GUI 框架——Qt、Electron、Flutter 等等，可以说 Web 技术的发展完全渗透到本地应用中。</p><p>考虑到自己最近比较熟的是 Python，对于 Web 技术的 JavaScript 又一窍不通，最终选择了 PyQt&#x2F;PySide 框架。算是 Qt 的 Python 版，接口相对来说还是比较全的，大概可以满足我这个稍稍有点不一样的桌面端应用的需求；而且还有一个 GUI 编辑器，方便后期做做 UI 美化什么的。</p><h2 id="需求列表"><a href="#需求列表" class="headerlink" title="需求列表"></a>需求列表</h2><p>面对一个看上去很复杂的应用程序，最重要的是把复杂问题拆分成可解决（查阅相关资料）的小问题。所以在简单学习了一番 Pyside 应用案例之后，便开始构思整体应用的开发。</p><p>主要的需求&#x2F;步骤有：</p><ul><li>贴图窗口</li><li>多窗口</li><li>单贴图窗口关闭</li><li>全局快捷键，关闭&#x2F;重置所有贴图</li><li>鼠标事件跟踪定位贴图，需游戏内鼠标事件可用</li><li>高 DPI 适配</li><li>判定窗口是否存在</li><li>贴图窗口 UI</li><li>主窗口 UI，选择框、搜索功能</li><li>截图与识别</li><li>分数计算</li><li>打包</li><li>……</li></ul><p>其中有不少需求还是在开发过程中遇到的。有些需求很简单，随便查查文档直接就有对应的方法；有些需求则特别复杂，查遍各种资料也未必能有完全符合要求的结果，便对原需求进行适当调整。</p><h2 id="难点与坑"><a href="#难点与坑" class="headerlink" title="难点与坑"></a>难点与坑</h2><p>下面就挑几个难点讲讲，不是随便搜搜就有一堆教程的，花了不少时间摸索实现的需求。</p><h3 id="贴图窗口与多窗口"><a href="#贴图窗口与多窗口" class="headerlink" title="贴图窗口与多窗口"></a>贴图窗口与多窗口</h3><p>用于展示圣遗物评分结果的小贴图，如下图所示。本质上就是一个小窗口+文字显示，所以直接实例化一个窗口就可以。使用 QWidget 建一个新类，然后设置相应的窗口属性（置顶、无边框、隐藏任务栏图标）等等，最后在 MainWindow 里调用这个类即可添加一个贴图窗口。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220929234442.png" alt="贴图窗口示例"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">PasteWindow</span>(<span class="hljs-title class_ inherited__">QWidget</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-built_in">super</span>().__init__()<br><br>        <span class="hljs-variable language_">self</span>.setAttribute(Qt.WA_TranslucentBackground)<br>        <span class="hljs-variable language_">self</span>.setWindowFlags(Qt.FramelessWindowHint | Qt.WindowStaysOnTopHint | Qt.Tool)<br></code></pre></td></tr></table></figure><p>GUI 部分大多还是面向对象的编程思维，一直受制于面向过程的思路，我也是花了一段时间才回忆并适应了各种 Class 内部变量的调用（确实很方便）。</p><p>至于多个贴图窗口的实现，根据屏幕尺寸以及背包&#x2F;角色不同的面板选择，贴图的数量是需要动态管理的。这里简单在 MainWindow 初始化中，就完成所有贴图窗口的初始化，先定义一个窗口组的列表 self.pastes，再根据 row 和 col 确定数量去 append 贴图窗口实例即可。当然因为贴图窗口的定位是根据设备和用户选择写死的，所以在初始化的时候就可以 move 到正确位置（后面有个根据用户选择的是背包还是角色，重新初始化的过程在这里就省略了）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-variable language_">self</span>.pastes = []<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-variable language_">self</span>.row * <span class="hljs-variable language_">self</span>.col):<br>    window = PasteWindow()<br>    <span class="hljs-variable language_">self</span>.pastes.append(window)<br>    <span class="hljs-variable language_">self</span>.pastes[i].move(<span class="hljs-variable language_">self</span>.position[i][<span class="hljs-number">0</span>] / <span class="hljs-variable language_">self</span>.SCALE, <span class="hljs-variable language_">self</span>.position[i][<span class="hljs-number">1</span>] / <span class="hljs-variable language_">self</span>.SCALE)<br></code></pre></td></tr></table></figure><h3 id="贴图窗口定位"><a href="#贴图窗口定位" class="headerlink" title="贴图窗口定位"></a>贴图窗口定位</h3><p>贴图的定位问题，包括后续的截图定位，都已经超出了一般的窗口内部应用的范畴。所以整体的定位需要一些屏幕坐标系的知识基础——横向 x 轴，纵向 y 轴，左上角为原点。游戏和本程序是独立的，为了使贴图可以正好在对应圣遗物上，以及截图 OCR 时文字区域截取正确，不得不要求游戏窗口定死。</p><p>然后通过一些作图工具截图、画图、测量坐标，然后写入程序中。不同屏幕的分辨率会有差异，甚至屏幕的长宽比也会不同，导致游戏内部圣遗物网格的布局存在差异。为了适配这些分辨率，需要用到 win32api 获取相关分辨率信息。长宽比一致的分辨率可以通过简单的数学缩放推广演算，不一致的情况就只能重新截图、画图、测量坐标了。（目前适配了 16：9 分辨率，和 2560<code>*</code>1600 分辨率。）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python">hDC = win32gui.GetDC(<span class="hljs-number">0</span>)<br>width_r = win32print.GetDeviceCaps(hDC, win32con.DESKTOPHORZRES)<br>height_r = win32print.GetDeviceCaps(hDC, win32con.DESKTOPVERTRES)<br>width_s = win32api.GetSystemMetrics(<span class="hljs-number">0</span>)<br><span class="hljs-built_in">print</span>(width_r, height_r)<br>SCALE = width_r / width_s<br></code></pre></td></tr></table></figure><p>还有需要特别注意的一点，似乎在 pyside6 中默认适配了高 DPI，所以系统缩放会把各种数值进行放大。但是在此程序中，贴图窗口的坐标是真实坐标，无需缩放，因此需要额外计算系统缩放比 SCALE，然后在需要的时候缩小回来。</p><p>由于坐标繁多，包含各种分辨率、截图区域、背包和角色两个页面的不同布局。为了更清晰地展示坐标信息，专门把各种坐标数据独立在了 location.py 中，有需要的时候引用此模块的数据即可，后续有新的分辨率适配任务也可在其中快速添加和修改。</p><h3 id="识别触发行为"><a href="#识别触发行为" class="headerlink" title="识别触发行为"></a>识别触发行为</h3><p>同样，由于触发行为不在游戏主窗口，甚至焦点也不在主窗口中，传统应用内部的鼠标、键盘事件都是无效的，所以自然就想到了系统级的事件监听工具。一番简单的搜索后，采用了 pynput 包进行实现。</p><p>不过整体实现的过程还是有点复杂的。首先需要打通外部的事件信号和 pyside 的信号数据，信号连接的基本数据结构由 pyside 的 Signal 负责。</p><p>由于我这里使用的鼠标事件，所以需要记录鼠标的坐标。通过 pynput 事件信号监听鼠标点击事件，然后在发生事件的时候，把事件数据传回到主窗口中，并与想要达成的目标（比如开启 OCR 识别并显示贴图弹窗，刷新数据）建立连接。这样就可以在游戏窗口中点点鼠标然后启动相应程序贴上评分结果了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-variable language_">self</span>.manager = OutsideMouseManager()<br><span class="hljs-variable language_">self</span>.manager.right_click.connect(<span class="hljs-variable language_">self</span>.open_new_window)<br><span class="hljs-variable language_">self</span>.manager.left_click.connect(<span class="hljs-variable language_">self</span>.fresh_main_window)<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">OutsideMouseManager</span>(<span class="hljs-title class_ inherited__">QObject</span>):<br>    right_click = Signal(<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>)<br>    left_click = Signal(<span class="hljs-built_in">int</span>, <span class="hljs-built_in">int</span>)<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, parent = <span class="hljs-literal">None</span></span>):<br>        <span class="hljs-built_in">super</span>().__init__(parent)<br>        <span class="hljs-variable language_">self</span>._listener = mouse.Listener(on_click = <span class="hljs-variable language_">self</span>._handle_click)<br>        <span class="hljs-variable language_">self</span>._listener.start()<br>    <br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_handle_click</span>(<span class="hljs-params">self, x, y, button, pressed</span>):<br>        <span class="hljs-keyword">if</span> button == mouse.Button.right <span class="hljs-keyword">and</span> pressed:<br>            <span class="hljs-variable language_">self</span>.right_click.emit(x, y)<br>        <span class="hljs-keyword">if</span> button == mouse.Button.left <span class="hljs-keyword">and</span> pressed:<br>            <span class="hljs-variable language_">self</span>.left_click.emit(x, y)<br></code></pre></td></tr></table></figure><p>不过当我调试完代码，在正常桌面环境运行都正常的时候，打算打开游戏测试下效果，却发现在游戏窗口中毫无反应。一番调试后发现问题竟是在游戏窗口内，鼠标事件在程序中完全监听不到。然后在这一坑中停滞不前了好一会儿，Google 不到有效的资料。尝试过一些其他的鼠标事件库（pydirectinput 等等），说是可以解决游戏窗口监听不到的问题，实际上并没有效果。</p><p>因此一度放弃了使用鼠标事件，而是采用曲线救国的方式：先用键盘&#x2F;主程序按钮事件唤起一个全屏的遮罩窗口，然后在此遮罩窗口中应用窗口内部鼠标监听。为了避免这一遮罩窗口对游戏内容的遮挡，还需要使用较高的透明度（整体思路和截屏软件比较一致）。最后也确实把这一想法整出来了，就放在源代码 <code>test/app_mask.py</code> 中，有兴趣的读者可以了解一下。</p><p>后来意外地在使用其他导出工具时，发现需要管理员权限。于是在管理员模式下打开终端，然后运行程序，发现之前的问题完全得到了解决。也即，无论是运行代码，还是 exe 程序，想要监听游戏窗口内容的鼠标事件，都需要管理员权限。</p><p>此外，还有一个小坑，就是《原神》在全屏模式下，其他窗口的置顶操作优先级都不如游戏窗口高，使得贴图窗口虽然启动了，但都在游戏窗口之下，没有实际的作用。因此需要将游戏调整为窗口化模式，这里使用的是 Alt+Enter 快捷键（似乎是 Unity 3D 封装的快捷键），并以此窗口化模式作为屏幕各坐标定位的依据（前面提到的贴图窗口、截图区域定位问题）。</p><h3 id="OCR"><a href="#OCR" class="headerlink" title="OCR"></a>OCR</h3><p>虽说 OCR 是一个相当古早的技术，市场上应用 OCR 技术的产品多之又多，但我并没有亲自做过 OCR 相关的开发。第一个想到的就是使用成熟的技术——调用 API，貌似许多开源工具也都走了这条路，支持多种 API 混用，自己填写相关 api-key 等等。</p><p>实现 API 也非常简单，注册账号、申请 key，然后使用 requests 库进行网络请求即可。不过简单尝试一些 API 后，发现要么 OCR 效果不尽人意，要么申请各 key 非常麻烦（数量有限，价格略贵，不符合开源精神）。如果是我一个人轻度用用也罢，要是有其他人也想一起用就有点头大了。</p><p>然后找了一些开源方案。PaddlePaddle 安装报错，一番折腾后也没完全搞定，遂放弃。tesseract 安装即用，又有非常好用的 Python 接口，一行代码即可实现对接。之后又在 GitHub 上找到了最新的中文简体语言包，经过测试识别率还算挺高的，遂使用此开源方案。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">txt = pytesseract.image_to_string(img, lang = <span class="hljs-string">&#x27;chi_sim&#x27;</span>)<br></code></pre></td></tr></table></figure><p>整体来说，OCR 也算是一门比较成熟的技术了，自己强行去造轮子意义不大。开源方案中可能 PaddlePaddle 更有优势，不过自己也没有继续折腾的精力了，能满足自己的需求就是好的解决方案。</p><p>完成 OCR 初始识别之后就是一些字符处理工作，需要准确提取圣遗物词条的名称及对应的数值。由于识别结果分行展示，同一词条的数据刚好在一行中，可以单独对每行做分析。通过正则表达式提取中文和数字，最后储存相关数据即可。由于攻击、防御、生命存在百分比和数值差异，还需要考虑数值是否是百分比类型，反正我这里就简单 if-else 大法了，简单直白，对于后续计算评分理解起来也方便。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs python">pattern_chinese = <span class="hljs-string">&#x27;[\u4e00-\u9fa5]+&#x27;</span><br>pattern_digit = <span class="hljs-string">&#x27;\d+(\.\d+)?&#x27;</span><br>line = txt.splitlines()<br>result = &#123;&#125;<br><span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> line:<br>    <span class="hljs-keyword">if</span> item != <span class="hljs-string">&#x27;&#x27;</span>:<br>        <span class="hljs-built_in">print</span>(item)<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-comment"># 词条名称</span><br>            name = re.findall(pattern_chinese, item)<br>            name = name[<span class="hljs-number">0</span>]<br>            <span class="hljs-comment"># 数值</span><br>            digit = <span class="hljs-built_in">float</span>(re.search(pattern_digit, item).group())<br>            <span class="hljs-keyword">if</span> name == <span class="hljs-string">&#x27;暴击率&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;暴击率&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;暴击伤害&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;暴击伤害&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;元素精通&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;元素精通&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;攻击力&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">in</span> item:<br>                result[<span class="hljs-string">&#x27;攻击力百分比&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;攻击力&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;攻击力&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;生命值&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">in</span> item:<br>                result[<span class="hljs-string">&#x27;生命值百分比&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;生命值&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;生命值&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;防御力&#x27;</span> <span class="hljs-keyword">and</span> <span class="hljs-string">&#x27;%&#x27;</span> <span class="hljs-keyword">in</span> item:<br>                result[<span class="hljs-string">&#x27;防御力百分比&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;防御力&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;防御力&#x27;</span>] = digit<br>            <span class="hljs-keyword">elif</span> name == <span class="hljs-string">&#x27;元素充能效率&#x27;</span>:<br>                result[<span class="hljs-string">&#x27;元素充能效率&#x27;</span>] = digit<br>            <span class="hljs-keyword">else</span>:<br>                result[item] = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">except</span>:<br>            result[item] = <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>然后是在实际使用中遇到的一些识别问题：</p><ol><li>tesseract 似乎用到了 LSTM，对于上下文重复出现同样的字符容易出现误识别的情况，比如 11.1%，777 之类的数字等等。</li><li>在游戏界面中角色面板装配圣遗物的背景会飘过各种干扰性的遮挡，tesseract 对于这种遮挡基本没招，会大大提高误识别率。</li></ol><p>对于以上两种问题，我也是简单粗暴地处理了一下——对于一些常识别错误的情况，把错误识别的字符替换为原来正确的字符就行。经过几轮校正，虽然误识别还是会发生，但是一般都是遮挡较为严重的特殊情况（这一点确实在技术上很难处理），再重新识别一次一般就没什么问题了。</p><p>又因为整体工具对于重新识别的成本很低（重新点下鼠标），也就基本当作没什么大的问题了，若是之后再遇到必定&#x2F;大概率会识别错误的情况，可以做特殊兼容处理。现在整体识别准确率背包面板 95% 以上，角色面板 60%~70%。</p><h3 id="全局快捷键"><a href="#全局快捷键" class="headerlink" title="全局快捷键"></a>全局快捷键</h3><p>pyside 支持应用内的热键，但是需要窗口处于激活状态，这对于本程序基本是不适用的。因为多数情况下，用户的焦点都在游戏窗口中，需要特意回到主程序再启动热键显然不那么「快捷」。</p><p>吸取了前面窗口外鼠标事件监听的经验，很快想到了使用 pynput 的热键功能。随便找了找 pynput 的热键案例，简单调试了一下便实现了全局热键的功能（其实还是摸索了挺久的）。可以通过自定义按键组合——Ctrl+Shift+Z 关闭所有的贴图窗口（<code>self.reset()</code> 是另外自写的方法）。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python">window = MainWindow()<br>window.show()<br>window.hotkey()<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MainWindow</span>(<span class="hljs-title class_ inherited__">QMainWindow</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">hotkey</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">on_activate</span>():<br>            <span class="hljs-variable language_">self</span>.reset()<br>        <br>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">for_canonical</span>(<span class="hljs-params">f</span>):<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">lambda</span> k: f(l.canonical(k))<br>        <br>        hotkey = keyboard.HotKey(keyboard.HotKey.parse(<span class="hljs-string">&#x27;&lt;ctrl&gt;+&lt;shift&gt;+z&#x27;</span>), on_activate)<br>        l = keyboard.Listener(<br>            on_press = for_canonical(hotkey.press),<br>            on_release = for_canonical(hotkey.release))<br>        l.start()<br></code></pre></td></tr></table></figure><p>值得留意的是，需要在程序实例 window 上直接调用 hotkey()方法，并启动相关键盘事件的监听程序。不过 pynput 热键方法内部还是挺复杂的，我也搞不清具体的作用，只知道自己需要修改的热键组合在哪里，以及在 <code>on_activate()</code> 中定义热键的功能。</p><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>Python 的打包向来是被诟病的，比如打包后文件巨大。虽然 pyside 有详尽官方的 <a href="https://github.com/SkeathyTomas/genshin_artifact_auxiliary">打包教程</a> ，不过我依然踩了不少坑，遇到了许多不知道怎么就好了的bug。</p><p>这里还是用了最常用的 pyinstaller 打包，由于这个打包工具会把环境里所有的依赖包都塞进去（不管与项目是否有关），所以最好是专门创建一个打包环境，仅安装项目相关的依赖包。新建一个打包环境 python 自带功能就能实现，以下是 Windows 系统进入虚拟环境的实例。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">python3 -m venv packenv<br>call packenv/scripts/activate.bat<br></code></pre></td></tr></table></figure><p>然后就是在虚拟环境里安装必备的包，还有 pyinstaller。pyinstaller 的打包方式也非常简单，直接 <code>pyinstaller app.py</code> 即可，其中 app.py 是整个程序的主程序，其他单文件打包等都可以通过添加相应参数实现，具体的还请参考 pyinstaller 官方文档。</p><p>首次打包后会生成 app.spec 与主程序同名的配置文件，大致内容如下：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs txt"># -*- mode: python ; coding: utf-8 -*-<br><br>block_cipher = None<br><br>a = Analysis(<br>    [&#x27;app.py&#x27;],<br>    pathex=[],<br>    binaries=[],<br>    datas=[(&#x27;src&#x27;, &#x27;src&#x27;)],<br>    hiddenimports=[],<br>    hookspath=[],<br>    hooksconfig=&#123;&#125;,<br>    runtime_hooks=[],<br>    excludes=[],<br>    win_no_prefer_redirects=False,<br>    win_private_assemblies=False,<br>    cipher=block_cipher,<br>    noarchive=False,<br>)<br>pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)<br><br>exe = EXE(<br>    pyz,<br>    a.scripts,<br>    [],<br>    exclude_binaries=True,<br>    name=&#x27;keqing&#x27;,<br>    debug=False,<br>    bootloader_ignore_signals=False,<br>    strip=False,<br>    upx=True,<br>    console=True,<br>    disable_windowed_traceback=False,<br>    argv_emulation=False,<br>    target_arch=None,<br>    codesign_identity=None,<br>    entitlements_file=None,<br>    icon=&#x27;src/keqing.ico&#x27;<br>)<br>coll = COLLECT(<br>    exe,<br>    a.binaries,<br>    a.zipfiles,<br>    a.datas,<br>    strip=False,<br>    upx=True,<br>    upx_exclude=[],<br>    name=&#x27;keqing-0.4.1&#x27;,<br>)<br><br></code></pre></td></tr></table></figure><p>配置文件本地保存，修改之后可以直接 <code>pyinstaller app.spec</code> 进行打包，而无需通过命令行记各种参数。这里简单讲一下常用的可修改项：</p><p><code>datas=[(&#39;src&#39;, &#39;src&#39;)]</code> 可以将程序目录的 src 资源文件夹复制到打包好的程序目录中（默认是空的），解决打包后资源丢失的问题。<code>name=&#39;keqing&#39;, icon=&#39;src/keqing.ico&#39;</code> 可以设置打包好后的 exe 文件名称和图标。<code>name=&#39;keqing-0.4.1&#39;</code> 可以管理打包版本，在 dist 目录下生成独立的 keqing-0.4.1 程序目录，有新版本需要重新打包时可以修改。</p><p>还有一个问题，由于本程序使用了 tesseract 第三方程序，打包过程是没有把第三方程序打包好的。所以要是用户没有配置好 tesseract 环境，在任何目录下运行不了 tesseract.exe，就会报错了。为了实现打包环境自带 tesseract 环境，需要对第三方包 pytesseract.py 进行魔改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># tesseract_cmd = &#x27;tesseract&#x27;</span><br>tesseract_cmd = getcwd() + <span class="hljs-string">&#x27;/pytesseract/tesseract.exe&#x27;</span><br></code></pre></td></tr></table></figure><p>其实也很简单，找到 <code>tesseract_cmd</code> 相关参数的一行，修改为以上即可，主要含义为重新定位 tesseract.exe 的目录。之后把整个 tesseract 程序都搬到打包生成的程序目录下，注意 tesseract.exe 相对路径无问题，即搬完的 exe 程序需要在 pytesseract 目录中。（貌似 pytesseract.py 写死了 pytesseract 的一级目录，手动修改会报错。）</p><h2 id="技术力之于产品经理"><a href="#技术力之于产品经理" class="headerlink" title="技术力之于产品经理"></a>技术力之于产品经理</h2><p>兜兜转转终于完成了这么一个小工具的半成品开发，目前项目还有不少问题，大多已在 README 中说明了，一些功能仍在学习和优化中。</p><p>最后趁着这个机会聊一聊产品经理和技术力作为总结。首先，虽然在外行看来我写完这个工具还有有些水平的（不少水友直呼大佬😊），不过我自己还是觉得这只不过是皮毛中的皮毛罢了。大多数只是工具的简单拼凑，核心问题并解决不了，而且能写出来的很大原因是 Python 实在太亲民了。</p><p>然后是关于技术力这个名词，每个职位都需要最核心的技术力，比如产品需要有需求分析与设计的技术力，程序需要有写代码的技术力，UE&#x2F;UI 需要有作图的技术力。产品作为整个研发过程交流的中心，至少也需要了解一些其他两种技术力。</p><p>有一种说法是产品经理可以完全不懂实现层面的技术，然后专注于需求的解读，有什么问题在需求评审的时候再讨论。我实在难以认同这种说法：一来懂一点实现层面的技术可以实现更有效的沟通，需求评审更容易通过，也不容易被程序员拿捏；二来基础层面的技术理解可以更有效地设计产品，不在天方夜谭的需求上耗费时间，及时了解一些新技术的发展也可以拓宽设计思路；三来纯粹的需求层面的技术力整体还是偏弱的，许多项目内的成员也多多少少有一些需求设计的能力，产品的爆火很难归功于纯粹的需求分析和设计，天时地利人和哪一个不重要。强如乔老爷子同样栽倒在 Lisa 项目上，后来的 Macintosh 也败在生态圈的建立上，乔老爷子也因此被董事会扫地出门。</p><p>不过我也不会去深入研究实现方面的技术，而把重心放在自己产品方面的技术力上。比方这个工具，我就懒得去研究性能优化，或者做一个完美的前端，这些都交给真正专业的人士去完成就好。可以的话，我代码都懒得写，不过更多时候代码是一种偷懒技巧，没有人帮忙偷懒，所以还是得自己上。至于自己作为产品的核心竞争力，估计我还得再思考思考。</p><p>最后，我是由衷地钦佩技术能力和技术氛围的。组里最佩服的是技术大佬们，与有技术背景的领导沟通起来也更容易；谷歌的工程师文化，还有技术宅拯救世界什么的，还是有一些向往的。</p>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>原神</tag>
      
      <tag>Coding</tag>
      
      <tag>Python</tag>
      
      <tag>工具</tag>
      
      <tag>OCR</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>标题栏和搜索栏的斗争</title>
    <link href="/post/%E6%A0%87%E9%A2%98%E6%A0%8F%E5%92%8C%E6%90%9C%E7%B4%A2%E6%A0%8F%E7%9A%84%E6%96%97%E4%BA%89/"/>
    <url>/post/%E6%A0%87%E9%A2%98%E6%A0%8F%E5%92%8C%E6%90%9C%E7%B4%A2%E6%A0%8F%E7%9A%84%E6%96%97%E4%BA%89/</url>
    
    <content type="html"><![CDATA[<p>本篇主要想研究一下标题栏和搜索栏的使用场景，可能会有非常多的案例探讨。目的的话，也许是看看哪些场景用标题，哪些场景可以添加搜索，两者共现的时候谁的优先级比较高（用户更加关注的点或者产品想让用户更加关注的点）。因为文章是边收集素材边探讨的，所以结构上可能会比较乱？</p><h2 id="标题与「广义」标题栏"><a href="#标题与「广义」标题栏" class="headerlink" title="标题与「广义」标题栏"></a>标题与「广义」标题栏</h2><p>标题是一块内容空间简短的文字概括，这个内容空间可能是一个窗口&#x2F;一个页面&#x2F;页面的一个区域。标题存在的意义是帮助用户快速理解内容的主要目标或含义，以及在需要切换内容空间时提供导航的作用。</p><p>「广义」标题栏是用于存放标题内容的空间，因为往往成长条状，所以称为栏（Bar）。根据广义标题栏对应的实际内容，标题栏还可以是某种标签页&#x2F;导航栏&#x2F;标题行&#x2F;表头等等。标题栏遍及各处，比如操作系统原生应用标题栏、文章内容的标题行、网页的标签页（垂直标签页）、网站顶端的导航栏等。</p><p>「狭义」标题栏对应的内容空间则仅包括窗口或页面，是真正意义上独立于内容区之外的「栏」。除了做「唯一」的标题内容展示外，还主要附带窗口的移动&#x2F;关闭&#x2F;最小最大化（桌面端）或是返回上一页面&#x2F;关于&#x2F;页面分享等额外操作（移动端）的功能。</p><p>「狭义」标题栏由于不在主要的内容操控区，交互频率一般比较低，关闭、最小化、返回按钮这些基本功能也可能被一些快捷键&#x2F;手势取代（尤其是移动端屏幕尺寸变大后，返回按钮很难直接按到，基本被左滑&#x2F;右滑取代）。而作为标题栏中的标题，更是因为本就没什么交互手段（仅存在一个信息展示功能）而被更加忽略，甚至一些专业人士（设计师、产品经理）也开始讨论起了这些标题存在的意义。</p><h2 id="搜索与搜索栏"><a href="#搜索与搜索栏" class="headerlink" title="搜索与搜索栏"></a>搜索与搜索栏</h2><p>搜索的目标是帮助用户快速找到想要的信息。人类的搜索能力取决于阅读&#x2F;浏览速度，而计算机在这一方面是非常有优势的，所以搜索本质上是一个效率工具&#x2F;方法。</p><p>常见的搜索类型包含针对内容区的页面&#x2F;文档内搜索，以及针对发现目标内容的搜索引擎。前一种搜索由于多与文档工作相关，一般由相关编辑软件内置，移动端因为少有文档编辑的需求，实际上比较少见；后一种则广泛应用于操作系统内寻找相关文件&#x2F;资源，或是搜索互联网相关内容（真·搜索引擎）。</p><p>搜索栏是承载搜索功能的控件，主体是一个输入框，允许用户自由输入。业务上可能还包含前置的唤起搜索栏操作（图标、下拉、焦点等）以及后置的确认&#x2F;搜索按钮（可能最终集成到键盘交互中）。</p><p>搜索栏也在各种场景中广泛使用，如 Windows 系统开始菜单搜索栏、浏览器搜索栏、文档编辑应用搜索与查找栏、iOS Spotlight 搜索栏、网站应用内部的搜索栏等。</p><p>值得注意的是搜索这一行为本身需要更大的脑力&#x2F;体力：用户需要知道自己的目标，然后把目标简化为一些关键词；新技术按图搜索也需要用户拍摄&#x2F;截图之类的操作等等。搜索行为大放异彩的时代逐渐被智能推荐的时代取代，但搜索功能依旧存在。</p><h2 id="组合与斗争"><a href="#组合与斗争" class="headerlink" title="组合与斗争"></a>组合与斗争</h2><p>在实际的应用中，标题栏&#x2F;导航栏和搜索栏经常一起出现。视觉上往往集中在顶端，符合从上至下的阅读习惯，使得这一功能第一时间落在视觉感受区，又不足以成为视觉中心。以下会搜集一些典型案例，对标题和搜索两个业务做场景分析。</p><h3 id="搜索引擎"><a href="#搜索引擎" class="headerlink" title="搜索引擎"></a>搜索引擎</h3><p>搜索引擎的核心业务是搜索，于是搜索框的重要性是第一位的。不仅在视觉上比较突出，也会把搜索框直接展现出来，无需通过其他操作唤起。</p><p>在无搜索结果（也就是初始搜索页面时），更是把搜索栏整体居中，处于视觉中心，而「标题栏」则以一种商业 logo 的形式展现（如果把 logo 视为标题的话），告诉用户这个搜索引擎是 xx 公司的。比如 Google 的搜索首页就是如此，这个 logo 还会根据节日进行变化，成为了一套有趣的 Google Doodles。</p><p><img src="https://repository-images.githubusercontent.com/478725150/549171cc-37a4-44a4-8549-dcd1a6429106" alt="Google Search and Google Doodles"></p><p>至于搜索结果页，虽然结果列表是主体内容区，但搜索栏依旧处于置顶位置，且不随页面滚动而隐藏。标题栏（分页标签）则明显弱于搜索栏，是搜索结果的一种筛选功能，并且随页面滚动而隐藏。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220915145743.png" alt="结果页面的搜索栏"></p><p>Windows 11 的系统级搜索也在多次改版后，增加了一些「广告与推荐」的功能。不过搜索框+自动聚焦，以及实时的搜索结果列表，仍然是整个功能的核心。至于标题栏，已经在这一功能模块中完全省略。一些其他类似的搜索，比如 macOS 的 Spotlight，第三方系统搜索与快速启动工具，也都沿用此思路。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220915160945.png" alt="Windows 11 搜索"></p><p>还有常规的浏览器，长长长长长的地址栏&#x2F;搜索栏，并且常驻；新建标签页又自动聚焦到搜索栏，可以直接进行输入，整体是非常方便进行搜索操作的。作为标题栏，则被标签页的形式填满；若是多开几个标签页，标题栏里基本没有标题只剩下一个图标，想要切换到目标标签页还是有点费力。不过我最近已改用垂直标签页的模式进行分组管理和切换标签页，原来的标题栏则用来「完整」显示标题（虽然好像也没什么用）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220915172526.png" alt="常规浏览器的标题栏和搜索栏"></p><p>移动端方面，无论是浏览器还是系统级的搜索，搜索框同样占据顶端标题栏的位置（初始状态下也可能会把搜索框居中，如 Google 首页、高德地图的首页）。并且由于搜索的核心业务，标题栏直接在业务上隐藏或者在搜索栏下补充一个标签页的切换。至于上下滑动后搜索栏和标题栏&#x2F;标签栏的保留情况，一般搜索栏是完全保留的，而标签页似乎保留不保留的情况都较为常见。</p><p><img src="https://i.redd.it/8e3qctu0usd71.jpg" alt="iOS Spotlight"></p><h3 id="内容向网站-x2F-应用"><a href="#内容向网站-x2F-应用" class="headerlink" title="内容向网站&#x2F;应用"></a>内容向网站&#x2F;应用</h3><p>以内容推荐为主的网站或应用，比如视频、图文、音乐、购物、通讯等等（其中购物存疑，带有强目的性的购物搜索业务也是很重要的），标题栏和搜索栏的情况又是如何？</p><p>知乎的标题栏&#x2F;导航栏有两层，第一层有一些商业性质，第二层属于内容向分类。而搜索栏置于第一层标题栏，同时在搜索框中默认进行内容推荐。另外，在页面滚动操作后，标题栏置顶并改为一层。在下滚操作后使用原第二层标题栏，并对用户信息相关按钮进行省略；搜索栏也不再推荐内容，仅作操作提示；上滚操作则回到第一层导航栏。很难对标题栏的两种形态进行分析（最多也只是强行揣测），值得注意的仅仅是搜索栏始终保留（尽管知乎的搜索做得很拉）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220916142040.png" alt="知乎标题栏的两种形态"></p><p>GitHub Explore 页面也有两层标题栏，第一层附带搜索框，第二层以标签页形式进行切换；且在页面滚动后隐藏第一层标题栏，同时搜索栏也无了。可以看出搜索业务在浏览内容推送时弱化，不过这个两层标题栏还带重复的架构着实有点蒙圈。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220916153004.png" alt="GitHub 标题栏"></p><p>Pinterest 图片与灵感网站，标题栏中的标题弱化甚至没有，取代的是长长的搜索栏，并且随页面滚动始终置顶。整个网站有点 Google 图片搜索页面的感觉，一大用途也确实是搜索目标关键词的图片。与 Google 图片不同的是会有基于个人喜好的瀑布流图片推送。不过整个图片确实没有什么合适的标题（或者分类），如果必须要有，可能就是一些语义关键词标签或是颜色块分类。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220916155359.png" alt="Pinterest 标题栏"></p><p>视频类网站 YouTube，同样把搜索栏置顶。同时标题栏使用的是个性化的标签，因为特别多一行甚至放不下。同时 Youtube 还配备侧边导航栏，提供更丰富的导航与浏览功能。Bilibili 也与此类似，只不过搜索栏更窄，标题栏加入了一些商业化推广入口，然后有一个不错的 banner；二级标题栏堆了很多非个性化的分类标签。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220916172458.png" alt="YouTube 标题栏"></p><p>移动端方面，由于横向空间有限，标题栏与搜索栏往往只能分行呈现或分页面呈现（使用搜索图标切换到搜索分页）。而且通过实例调研，这两种方法都普遍使用，甚至在同一种 App 中同一个页面也同时使用了两种方法。至于搜索页，大致与上面提到的 iOS Spotlight 类似，以搜索框取代标题，然后包含搜索提示、热点、搜索历史等等，可以之后有空专门讲讲搜索的业务逻辑。</p><p>国民级通讯软件微信、QQ，恰好使用了两种不同的形式。微信在标题栏上使用搜索图标，点击可打开新的搜索页面；而 QQ 使用了一整条的搜索栏，同样点击打开新的搜索页面。另外，QQ 的搜索栏在下滑操作后隐藏。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220919115848.png" alt="微信（上）QQ（下）"></p><p>以图文为主要内容的知乎，通过业务拆分将标题换成三个子业务（与桌面端的业务划分并不相同），又在二级标题栏根据内容拆分为更多分类，搜索栏提示热点话题。页面下滑后二级标题隐藏，搜索栏隐藏但在标题栏增加一个搜索图标。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220919174958.png" alt="知乎首屏（上）下拉后（下）"></p><p>视频类 App 哔哩哔哩，将搜索栏放在标题栏之上，而所谓的标题栏则由许许多多的分区（标签页）组成，和知乎的二级标题栏类似。这种复杂的标签&#x2F;分区系统有点类似于互联网早期的门户网站，服务于浏览，在移动互联网和智能推荐的背景下也有了更广的就业面。同样的，在下拉操作后，搜索栏隐藏，仅保留多标签的标题栏；不同的是搜索功能需要完全返回顶端了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220919203146.png" alt="哔哩哔哩"></p><p>讲到回到顶端这个操作，记得交互指南里藏着一个快捷操作——双击标题栏。这一交互方式不那么容易发现，但也不能说完全没用。至少微信、QQ 都保留着这一功能，至于其他将传统标题栏改改成标签页&#x2F;搜索栏的应用，自然也就没有这个功能了。</p><p>其他各类应用，包括音乐、购物等等，标题栏和搜索栏的结构及变化也大都和以上几种重复，就不纷纷举例了。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>试图从以上种种案例中做出一些可应用性的总结：</p><ol><li>桌面端和移动端还是有很大差异的。<ol><li>最大的区别是桌面端应用基本结构是窗口，窗口存在移动位置的需求，所以会有传统标题栏实现相关功能，顺带窗口最小化&#x2F;最大化的功能。移动端基本都是全屏页面显示，比起移动窗口，返回上一个页面的需求更大（标题栏❌，返回栏✅），所以此类用于移动窗口的标题栏一般是没有的，除非有额外的悬浮窗口需求。</li><li>桌面端的空间更大，除非标题栏中内容非常多（比如贴上很多标签，必要时还需要二级标题栏、侧边导航栏等），一般都可以把搜索栏完整放在标题栏内。如果空间有限，使用搜索图标作为搜索业务的启动按钮，也一般仅唤起一个悬浮窗口，不会新开一个搜索页面。移动端则由于空间显示，搜索栏和标题栏互相独立，要么分行显示，要么只取其一，搜索栏&#x2F;页面可以从标题栏中的搜索图标按钮触发。</li></ol></li><li>搞清楚业务的主要目标。<ol><li>若是以搜索为主（比如各类搜索引擎），自然搜索栏会更重要一些，那么搜索栏的大小、摆放位置等视觉效果都要使得搜索栏更为突出。相对的，标题栏无论从结构还是内容都应被弱化，比如移动端搜索页面基本都是搜索栏完全取代原标题栏的位置。另外，可以对搜索结果进行适当标签页分类（二级标题栏），辅助用户筛选搜索结果。</li><li>若是以浏览为主，则含分类标签页的标题栏则更重要一些。可以根据自身的业务需求，设置一级标签栏、二级标签栏，当然最重要的还是默认的那个「智能推荐」的标签页以及背后的推荐算法。此业务下搜索可以弱化，比如使用不怎么起眼且小占位的图标，或者页面下拉后隐藏搜索栏。</li></ol></li><li>注意搜索域。由于分类业务的复杂度，搜索业务可能是全局搜索，也可能仅针对在某个标题分页下的子域。若是全局搜索，搜索栏需要摆在各标题之上；若是子域搜索，则搜索栏需要摆在对应的标题之下。</li></ol><p>回过头来，本以为一个非常简单的话题却也还是罗嗦了那么多，而且最后的结论似乎也没那么明了，还是要具体业务具体分析。</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>设计</tag>
      
      <tag>交互</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>再谈《原神》玩法：写在须弥更新之前</title>
    <link href="/post/%E5%86%8D%E8%B0%88%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E7%8E%A9%E6%B3%95%EF%BC%9A%E5%86%99%E5%9C%A8%E9%A1%BB%E5%BC%A5%E6%9B%B4%E6%96%B0%E4%B9%8B%E5%89%8D/"/>
    <url>/post/%E5%86%8D%E8%B0%88%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E7%8E%A9%E6%B3%95%EF%BC%9A%E5%86%99%E5%9C%A8%E9%A1%BB%E5%BC%A5%E6%9B%B4%E6%96%B0%E4%B9%8B%E5%89%8D/</url>
    
    <content type="html"><![CDATA[<p>距离上一次写玩法（去年海岛活动）感受以来，已经很久没有写游戏体验相关的内容了。中间还有一次是吐槽渊下宫限时图像是废案的小篇章，属于碎片式的想法。</p><p>这一年由于工作的关系，游戏的强度已经比不上学生时代了，因而感觉《原神》稻妻大版本的内容是真的丰富。希望自己能够赶在 3.0 更新前总结一些感受、评价、或是改进建议之类，也不枉自己花费了那么多时间在《原神》上。</p><p>写法上我尽量系统有条理一些，由于不想流水账式的一个一个小版本进行回顾分析，所以实质上我可能想到什么就写什么了。</p><h2 id="内容回顾"><a href="#内容回顾" class="headerlink" title="内容回顾"></a>内容回顾</h2><p>首先来回忆一下整个稻妻大版本出了哪些内容吧。</p><ol><li>陆陆续续地把稻妻的地图出完了：独特的以海岛为单位的地图模式，每一个大的海岛又都对应着一个大型的解谜或是世界故事。鸣神岛的神樱大祓，神无冢的医樱和踏鞴物语，八酝岛的无想刃峡间和远吕羽氏遗事，清籁岛的雷暴与雷鸟，海祁岛古老的种族与无比美丽的环境，鹤观的时间轮回与悲剧，渊下宫的历史、遗迹和谜题，顺带一次渊下宫地图复用的限时图，为这古老的历史补充了更多的信息。</li></ol><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220822230534.png" alt="稻妻大地图"></p><ol start="2"><li><p>把稻妻的主线附带一些角色支线给讲的七七八八了：雷神的真相，眼狩令和锁国的原因，稻妻的主要势力，女士的谢幕，散兵带着雷神之心不知所踪，雷神追逐永恒的结局——眼狩令和锁国令的完结等等。虽然留下了散兵的大坑，但至少把雷之国度的永恒话题圆满结束了。</p></li><li><p>璃月 DLC 层岩巨渊：又是一个震撼人心的地图，无论是地表还是地下。推进了一些整体主线剧情，坎瑞亚与丘丘人、深渊的秘密（虽然大佬们在 1.0 版本已经推测出相关信息了），顺带填了一下五夜叉的坑。</p></li></ol><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220822231336.png" alt="层岩巨渊"></p><ol start="4"><li>一些大型的节日&#x2F;活动之类的：璃月逐月节厨艺大赛揭露锅巴真面目，雪山活动补充阿贝多身世之谜，璃月海灯节再度过年顺便带动神女劈观二创热潮，稻妻光华荣彩祭体验了一番屑狐狸主办节日的风味顺便讲述了万叶家族的过去，夏日海岛补充四位角色的内心活动。</li></ol><p>至于其他的打怪、解谜、跑酷、塔防、音游、新角色剧情故事、刷刷刷的小活动就不一一列举了。如此回顾下来，整个大版本的内容确实有够多的。相比于 1.x 版本直接丢上来两个大地图，稻妻版本每次丢出一个小地图的体量感觉都不少于一个雪山的体量（而一个雪山的体量怎么也得半个蒙德的体量吧）其他的大小活动更是一个接一个，不得不佩服团队的产出效率。</p><h2 id="玩法框架补充"><a href="#玩法框架补充" class="headerlink" title="玩法框架补充"></a>玩法框架补充</h2><p>很早之前就写过一篇 <a href="https://skeathytomas.github.io/post/%E5%8E%9F%E7%A5%9E%E7%8E%A9%E6%B3%95%E6%80%BB%E7%BB%93/">玩法总结</a> 的文章，其中把《原神》的核心玩法分成<strong>探索</strong>、<strong>战斗</strong>和<strong>养成</strong>三大类。如今看来，虽然在探索里有提到对于整个提瓦特发生故事的探索，之前的这篇总结确实省略了很多在故事&#x2F;剧情&#x2F;演出方面的玩法说明。</p><p>鉴于米忽悠在剧情，尤其是对于某些彰显角色魅力的剧情及相关演出上出色的表现，我不得不承认剧情玩法已成为我持续玩下去的一大动力（当然第一大动力还是大世界探索）。所以我想花个小篇幅补充一下关于剧情&#x2F;演出相关的玩法。</p><h2 id="剧情与演出"><a href="#剧情与演出" class="headerlink" title="剧情与演出"></a>剧情与演出</h2><p>RPG 游戏的一大魅力就是强的故事代入感，充当游戏中的一个主要角色，见证并影响游戏中的故事。《原神》的故事框架在足迹 PV 出来的时候已基本确定：一个天理与尘世斗争的总框架，七个国度各自已定下主题的故事，还有玩家扮演的旅行者身上兄妹寻亲（明线）与探索真相（暗线）的故事。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/genshin_pv.png" alt="原神 PV 足迹可以透露的情报"></p><h3 id="主支线剧情"><a href="#主支线剧情" class="headerlink" title="主支线剧情"></a>主支线剧情</h3><p>整体的天理与尘世的暗线揭露的还不够多，不过确实有着很大的吸引力。天理？科技发展？深渊？坎瑞亚？尘世七执政？冰之女皇的目标？这些引发人们好奇心的概念之间究竟有着怎样的矛盾与冲突，故事又将如何发展，只能静候主线故事的推进了。</p><p>而七国各自的小主题，也算是一个合格的小故事。至少已开的三个国度的主线故事还都在期待线之上：蒙德的巨龙与自由，讲述了一个美好的童话故事；璃月的还政于民，老大爷和反派 2 号坑了反派 1 号的故事心机而有趣，还有群玉阁上的大战场景至今历历在目；稻妻的永恒与变化，幕府和反抗军的斗争表现弱了一些，好在后续补上了令人满意的雷之神的内心斗争。</p><p><img src="http://image.uc.cn/s/wemedia/s/upload/2021/3c4e75f8a81cc312cea83db9ce45892c.png" alt="群玉阁大战"></p><p>除去以上主线任务，专门用于塑（xiao）造（shou）角色的传说任务和 GAL 式邀约任务的剧情，包括这次海岛活动对四位角色的背景塑造，也大都可圈可点，非常适合一些角色高光演出的融入。</p><p>顺便我心目中稻妻最佳高光时刻，要属雷神拔刀，以及万叶挡下雷神无想之一刀的场面。还有一些出色的剧情 PV，如灶神、神女劈观等也都留下了深刻的印象。至于演出表现，一向是米忽悠所擅长的，最近海岛秘境结合地图模式的创新式演出更加惊艳。</p><p><img src="https://p3.itc.cn/q_70/images01/20220425/0379e78d0d624af5a38e1aa21d4ec53a.png" alt="雷神胸口拔刀"></p><p>也许这些主支线剧情对某些人而言相比于王道剧情还有些差距，但至少在我眼里总体已是非常满意，值得给出五星好评。在之后的剧情发展上，希望能够保持水准，讲好每一个国家的主题，在大主线上逐步推进，顺带留下一些角色的高光时刻。至于宏大场面的叙述，可能受制于游戏画面&#x2F;算力的限制，少一些实时演算，多一些 CG 或者 PV 吧。还有细节处理方面，剧情中的人物动作或许可以再多一些或自然一些，不要只是简单套动作模板啦。</p><h3 id="碎片化剧情"><a href="#碎片化剧情" class="headerlink" title="碎片化剧情"></a>碎片化剧情</h3><p>主支线剧情（含配音演出）还只是《原神》世界观中的一小部分，真正的大头还埋藏在世界的角角落落（游戏内一般称为「世界任务」），这里称为「碎片化剧情」——这些故事分散在世界中，往往需要玩家在大世界中探索「碎片」，然后主动与世界中的不知名 npc 或场景进行交互才得以开启，以及往往不包含配音演出。</p><p>至于游戏中其他角角落落的碎片剧情与线索，如武器、圣遗物、道具文案说明之类的，1.x 版本就持续存在了，也有很多「原学家」有充分的解读，这里就不多说了。</p><p>在稻妻大版本中，几乎每出一个新图，总会额外有一个「冗长」的任务剧情引导玩家进入新地图，然后带你逛遍新图中的主要区域，而且这个剧情通常会强制设定多日（现实时间）完成。与其把这些称为「碎片化剧情」，不如说是一种引导式开图剧情任务，顺便还会包含这片地图主要背景故事。清籁岛、鹤观、渊下宫、层岩巨渊等都是这种套路。本质而言，这些引导式任务已直接影响到相关主支线剧情的推进，甚至融入到主支线剧情之中，称为主支线剧情任务也不过分，就是缺少个配音（普通 npc 没人权）。</p><p>这和 1.x 大版本还是有了一些比较大的差异：之前是主线任务会利用好大地图（雨露均沾地走一遭），剩余地区则通过一些谜题的设定填补一些细节，比如「宝藏归离」之类的任务（这些补充内容在稻妻版本同样存在）。当然这也很可能与新版本地图的分割放送，与主支线剧情有些错位有关。换句话说，以前的主线被整体地图服务，现在的主线只能被先放送的地图服务，而后放送的地图总要有些剧情故事作支撑。</p><p>从个人角度而言，我是非常喜欢这类碎片化剧情任务的。虽然比不上主支线任务的硬核，也没有自机角色任务那样华丽，却在提瓦特世界的角角落落叙写着一个又一个平凡而不普通的故事。更吸引了很多原学家大佬对于这些碎片故事的解读，以暗线的方式补充着整个世界观，揭露着某些世界真相，最有趣的当属雪山王国的颠覆、鹤观壁画中的王国故事，以及渊下宫深渊古老的王国故事了。</p><p><img src="https://img.99danji.com/uploadfile/2021/0105/20210105031824144.jpg" alt="雪山壁画"></p><p><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRSE5TdG8L7Iri6_BMac8uFg_mIv3jYRI9XZw&usqp=CAU" alt="鹤观壁画"></p><p>不过这些碎片化剧情故事的理解难度的确很大——收集线索的过程会花费相当长的时间，线索往往支离破碎又很谜语人，甚至包含自创语言的解读、多玩家间信息共享等复杂谜题。所以我一般似懂非懂地探索收集得差不多了，再去看看大佬们的解说回味一番。</p><h2 id="战斗：角色与怪物"><a href="#战斗：角色与怪物" class="headerlink" title="战斗：角色与怪物"></a>战斗：角色与怪物</h2><p>整个稻妻版本持续输出新角色，还放出了地区的新怪物，战斗体验上有所更新但并没有太多惊艳之处。另外武器、新圣遗物之类的统一算作数值系统，不想多说。</p><h3 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h3><p>整个稻妻版本共有以下新角色：神里绫华、宵宫、早柚、雷电将军、九条裟罗、珊瑚宫心海、托马、荒泷一斗、五郎、申鹤、云堇、八重神子、神里绫人、夜兰、久岐忍、鹿野苑平藏，外加特殊联动的埃洛伊和特殊的雷属性主角。</p><p>从多样性上来说，角色确实五花八门，覆盖各种元素、武器；角色用途上也遍布主 C、爆发 C、后台 C、奶辅、盾辅、伤害拐、充能拐等。在角色技能设计上，更频繁地使用了非常规的伤害数值面板属性（比如充能、防御、生命、精通）。之前大部分输出角色只要考虑攻击加双爆的圣遗物，现在基本上都有自己的专属有效词条空间（刚写完一个圣遗物评分工具确实很懂）。比较新的技能类型有同属性的爆伤拐（九条裟罗）和倍率拐（申鹤、云堇）。</p><p>抛开数值的变化不谈，角色的可玩性并没有太大的提升，大部分角色依然是丢技能打伤害类型的「法师」玩法，有元素反应的打打反应。一个拼 DPS 的战斗框架之下，越到后期可能越会觉得无聊，很难有一招一式与怪物斗智斗勇的 ACT 战斗乐趣了（无伤大佬请自动忽略）。这些乐趣在游戏前期刮痧的时候还存在，现在基本就是莽莽莽闭眼丢技能了。要说整个版本最有趣的战斗，还要属与狗子振刀了。</p><p>好在角色的增多使得基础的四人小队战斗花样也增多了，玩家多多少少可以凑出一些成型好用的队伍。大部分可以有反应的角色配队较为灵活（除去某些单元素拐因为同类角色的稀缺拐得比较单一），风系减抗一枝独秀；可怜岩系孤儿惨上加惨，除了死守个盾和高数值也玩不出什么花样了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220823091534.png" alt="版本热门配队"></p><p>角色玩法框架的上限，使得一些新的角色多多少少存在老角色的影子（虽然这是抽卡类角色的通病）：比如神里绫华的冲刺和莫娜类似，宵宫的开 E 附魔加伤害和胡桃类似，荒泷一斗大女仆，夜兰大行秋，云堇和北斗的弹反机制一致，侦探鹿爆发和凝光又有点像（好在近战法&#x2F;拳师看起来很新颖）等等。整体而言，虽然才两个大版本，已经有一些新角色的抽卡在玩法上吸引不了我了，当然 XP 另算。</p><p>尽管有老角色的影子，新角色肯定是有创新与独特性的。其中最满意的还要属雷神，小技能的特效和后台追踪，大招攒能量爆发输出、切换攻击形态，独特的攻击手法和手感，完美符合影武者和无想之一刀的设定。（插一句，攻击形态切换的第一人公子，由于独特的断流加上水元素完美的反应体系，依然在我心中是当前版本设计最完美有趣的角色。）其他的，比如说早柚的滚轮、九条瞄准放炸弹（但是操作繁琐反而没什么人喜欢用）、五郎吸附结晶盾、神里绫人「鸡你太美」式攻击动作和爽快感、夜兰穿针引线等，都是不错的创新。</p><p>好在下一个版本会放出新的元素类型——草，从前瞻介绍来看，草元素独有的反应类型和复杂度足以开辟一大波新奇有趣的玩法。不管是有心也好（刻意放缓草元素的设计），无心也罢（草元素的设计初期定不下来），在这一个角色与元素玩法被玩家开发殆尽的版本之后在核心玩法中新添一笔是非常有战略意义的。须弥正属整个游戏剧情框架较为中间的一章，玩家略显得倦意也会在新的玩法开发和讨论热度下消退与延缓。</p><h3 id="怪物"><a href="#怪物" class="headerlink" title="怪物"></a>怪物</h3><p>总体而言，角色在整个版本中没有太多的数值膨胀（前一波的膨胀在璃月 3C），不过由于配队更加成熟的因素，队伍伤害总体提高，怪物的数值也算控制在一个比较合理的范围内，除了未改版前的漂浮灵（被公认的粪怪）。</p><p>一般怪物和精英怪物，实话说确实没几个留下太多的印象，可能精英怪就是血厚一点的差别。野伏众：由于一开始的高韧性（风神强行削弱）被喷的挺惨，迅速做了调整，可惜现在依然处于低掉落的尴尬风评中；漂浮灵：一个血厚、飞天、乱跑、属性免疫、追踪弹、无弱点、击败 debuff、毫无打击感的怪物能被设计出来也是挺离谱的，然后终于在 2.8 大大削弱；流血狗：一个纯粹拿来针对护盾体系的怪，直白地告诉你该练个奶，虽然高玩可以用闪避应对，但是成群的特性和狂暴的乱飞对于一般玩家很难；深海龙蜥：被打扣能量，少有的符合 ACT 战斗设计的怪物，由于前摇比较明显一般玩家也能轻松应对，告诉玩家原来闪避键和走位原来还是有用的，反正比起狂暴岩龙蜥好评得多；藏镜侍女：一个很涩血很厚的其他不清楚的怪物；遗迹机兵：至今分不清不同的几种长啥样，攻击模式有啥区别；暗色空壳：描述很牛逼，实则肉桩类不知道有什么特色的怪物。</p><p><img src="https://www.youxi500.com/uploadfile/2021/0918/163194236736487.jpg" alt="万恶之源漂浮灵"></p><p>还有一些换皮的怪物就不介绍了，总体而言稻妻版本的大世界小怪物设计显得平庸，没有太多值得夸赞之处，倒是有不少被喷得被迫修改的怪物。战斗模式单一，要弱点也没什么弱点；可能设计了一套战斗方式，但玩家完全不买账，然后成功变成了白板怪物。</p><p>世界 Boss 中规中矩，在原先无相系列之上开发出一些略带新意的 Boss，有一定策略难度整体也不高。真正值得好评的只有周本的真·Boss 战（以及很少的剧情 Boss 战），无论是女士还是雷神，技能设计、元素克制、动作、BGM、战斗策略都不输以前的几个 Boss，甚至水平上又有了不少精进，特别是雷神的招式多的离谱（背板玩家可能记得比较痛苦了）。更有无伤大佬表演精彩的战斗过程，太优雅了。</p><p><img src="https://p6-tt.byteimg.com/origin/pgc-image/7e048e38be6149cf95007604f51010ee?from=pc" alt="魔女 Boss"></p><p><img src="https://www.8090.com/uploads/allimg/220215/293530-220215115004960.png" alt="雷神 Boss"></p><p>说到底这一切还是深渊时间限制和战斗玩法框架的锅，所有的怪物单纯数值化，也只有周本这类不进深渊的怪物可以好好设计。其他各类怪物统统向 DPS 妥协，几个世界 Boss 怪物进深渊也会被各种拖延时间的动作吐槽。可惜不这么搞得话，角色和武器售卖这种影响收益的根基也可能动摇了。算了，游戏那么多，我又何必仅对此一家的「伪战斗」吐槽太多，大不了去玩自己想玩的就好。</p><h2 id="探索与解谜"><a href="#探索与解谜" class="headerlink" title="探索与解谜"></a>探索与解谜</h2><p>终于到了第一期待的大世界玩法部分，探索和解谜两大核心要素在整个稻妻大版本又发展得如何呢？</p><h3 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h3><p>作为「开放世界」的根本，有新地图总是值得让人兴奋的。整个稻妻大版本的地图设计趋向于高水平的稳定状态。从一开始蒙德的平面式地图，到璃月的高山，再到雪山的立体空间结构。整个稻妻版本也延续了立体空间地图的设计，四处挖洞、打暗道连通内外，这一点在渊下宫和层岩巨渊体现得尤为明显。而层岩巨渊地下层层层深入，不断通过大尺度的垂直距离降落又新添了不少视觉冲击和神秘感。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220823002435.png" alt="渊下宫打卡风景区"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/2883116612373792.png" alt="层岩巨渊深不见底"></p><p>不过探索玩法有一个比较大的差异：之前版本的开图模式是以地图为核心的，从小地图到具体的地图场景，会天然吸引玩家开图。就算接了任务也会不断被地图场景中的元素分散注意力，不知不觉就跑偏了。而现在的地图引导模式大多则是「亲妈式」任务引导，只要跟着任务走，基本就能把图开得差不多了。而且由于部分地图强制需要跟着任务走（踏鞴砂、清籁岛），否则就地图强行限制进入或者持续 debuff 劝退，以致后续地图我慢慢学乖了，不自己乱逛摆烂跟任务就好了。</p><p>很难说哪一种玩法模式更好，只能说之前的模式符合「开放世界」一点，给玩家更多的自由空间；现在的模式「RPG」的感觉强一些，无情的任务清理机器。</p><p>可以从我的措辞中感受到我对于老模式的偏好，至今为止龙脊雪山地图依然是我感觉设计最为出色的地图，排在之后的可能是渊下宫和层岩地下（渊下宫开门场景值得表扬），稻妻地表的几座岛略显平庸（不过海祁岛的美术风格和音乐实属让人舒适）。</p><p>关于地图设计的讨论就不深入展开了，之前草草用交互设计的理论探索了一番地图设计方法论（ <a href="https://skeathytomas.github.io/post/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA%E5%9C%A8%E6%B8%B8%E6%88%8F%E5%9C%B0%E5%9B%BE%E8%AE%BE%E8%AE%A1%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/">交互设计理论在游戏地图设计上的应用</a> ），只能寄希望于未来草国这种连续式的地图设计重新找回自由探索的感觉吧。</p><h3 id="解谜"><a href="#解谜" class="headerlink" title="解谜"></a>解谜</h3><p>一个词形容：臃肿。在解谜这条路上，《原神》给出的答案是不断地增加解谜的种类和道具，我的背包里也在持续塞入各种新类型的解谜道具。新的解谜类型有：雷种子、魔方、雷指针、雷大炮、石狐狸、狸猫、雷鸟羽毛、白天黑夜切换、折射反射、共鸣石、流明石……（名称可能与游戏内的表达不一样），还有海岛限定的换假山、音符传递、视错觉、连连看。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220823002803.png" alt="一页放不下的新解谜教程"></p><p>如此总结下来，发现这解谜的类型还真是有够复杂的，每有一种新的解谜类型，就需要学习一下解谜的机制。若是几种解谜混用，估计还要枚举尝试到底该用哪种解谜机制了，好在在一个区域内解谜系统的机制还算稳定。再者，这些不同类型的解谜大体只是分散在地图的不同之处，重复而并没有太多递进式的难度设计。如此以来，解谜的乐趣不在于设置并解开有趣的谜面，而在于不断接触并学习新类型的解谜方式。</p><p>特别评价一下海岛的解谜。海岛解谜可谓大放出，一下新增了一页说明都放不下的解谜类型，每个角色的秘境和岛屿中都分布着特有的解谜模式。难吗？其实倒也还行，除了：莫娜岛明显的指引不明需要外加很多猜测与尝试；小艾咪城堡视错觉做的太拉；三个水占盘，两个切换时间，一个切换空间，略迷；万叶秘境怼着旋转空间进行特写的镜头让人不适；辛焱的多层闭环迷宫因为长得太像太容易迷路和遗漏了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220823003026.png" alt="海岛解谜玩法同样一页放不下"></p><p>可以理解在新的地区添加新的解谜类型，但是这样狂轰乱炸是不是有点过分了。如何使用好基础的解谜框架（莫娜岛解谜甚至用上了古早的元素视野），精心设计谜面，适当的解谜引导和提示，至少比各种解谜类型杂糅在一起有趣一些吧。完成解谜后让人惊叹谜面设计、恍然大悟，才算得上是优秀的解谜。比如莫娜秘境有个房间的虚实倒影，配合逐步的提示就算是优秀的解谜。</p><p>当然解谜确实很难，在开放世界中设置解谜更难。箱庭关卡可以把控流程，层层推进；而开放世界的流程可引导而不完全可控，递进设计很难的啦。拜托解谜组再努力一些，想想怎么把解谜系统化，做得更有趣吧。</p><h3 id="地图复用"><a href="#地图复用" class="headerlink" title="地图复用"></a>地图复用</h3><p>地图复用这一话题在之前限时图「暗黑渊下宫」的时候简单吐槽过一遍，概括下来就是地图复用不能让玩家有「废案使用」的感觉。</p><p>当时「暗黑渊下宫」紧跟在「渊下宫」地图出来的一个版本后，而且以一种和原地图共存的方式放送出来，让人不由地思考着这两个图是不是 Plan A 和 Plan B。这俩图除了地理结构一致外，可以说是毫无联系：关卡、怪物先不说，哪怕是存在于这片土地上的遗迹与痕迹都被抹去了（大日御舆失去了日夜交换交互性，我的太阳之子的墓碑全都不见了）。</p><p><img src="https://olimg.3dmgame.com/uploads/images/raiders/2022/0216/1644982046761.jpg" alt="暗黑渊下宫"></p><p>作为一个充满内容的世界，地图的复用不是简单将内容抹去，留下空壳再换上一套全新的内容。剧情上说，是渊下宫发生了「异变」，所以整体上是老地图附加上变化的内容，然后因为主角的修正使得地图恢复原貌的设定。然而实际上体验后，完全就是一个额外的故事而已，哪怕是搬出一个新地图也不会有太多异样感。</p><p>游戏中也不是没做过地图复用的尝试，比如过节日城市的新装扮，野外设置新的宝箱和探险活动，鹤观因为古怪的时间循环的背景里面的怪物也处于一种循环的状态，某一次狸猫活动故地重游，还有 2.8 海岛幻境地图对去年海岛的大修改（顺便四位角色岛屿的可操纵变化方式也是一种地图复用模式，还融入了强解谜的框架）。</p><p>本次海岛复刻虽然也对地图内容有了大体量的修改，但是至少之前存在的痕迹依旧保留下来了，什么断船（还有专门的大肉丸任务）、海岛人民逃出的壁画、音乐岛提示海潮的功能等可以看出地图是在原先基础上修改的。至于其他的机关的变动，一是去年的主题乐园是无所不能的艾莉丝女士一手定制的，二是今年剧情愚人众特殊装置引起的幻境（可能还有草神的功劳），反正起码自圆其说。</p><p>总之，地图复用是一种对于原大世界改动的方式，伴随着可大可小（大如某个区域被毁灭了，小则某客栈修了桥）的事件发生。虽然避免不了对原地图的破坏，甚至引发一系列任务、宝箱、解谜的复杂逻辑问题，但真要用的时候还是不得不处理这些问题，而不是简单在一个平行世界摆份新地图就完事了。</p><p>不能像单机游戏一样开二周目或者回档，网游对于这种破坏式的操作逻辑确实很难，更何况还要应对完全不同进度的玩家，补充一堆状态机。举个例子，现在稻妻日常任务还是能刷到仍然处于锁国令状态的角色任务，这对于已通关稻妻主线的玩家而言是不是显得有点突兀呢？</p><h2 id="尘歌壶系统与其他"><a href="#尘歌壶系统与其他" class="headerlink" title="尘歌壶系统与其他"></a>尘歌壶系统与其他</h2><p>尘歌壶，家园放置系统，以及由此引申的砍树、钓鱼、种田、抓动物玩法等。其中种田玩法产出了本就可以轻松获取的物品，唯一有用的可能是给新玩家买买到不了区域的素材，但是依然会卡在其他世界 Boss 掉落素材上。这一问题将在地图增多后不断加重，相信应该已经有了一些解决方案。</p><p>对于整个尘歌壶系统，我的评价是一个有些突兀，脱离核心玩法，填补玩家时间的娱乐长草式玩法。属于大部分玩家拿完成就、领完低保奖励后基本不碰的一个系统（与声望系统异曲同工），而成就所需重复玩法的数量又往往高得离谱（纯粹折磨人的成就）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220823003306.png" alt="堆数字的成就"></p><p>可能会有喜欢的玩家会精心布置家园系统，好看的作品自然也是有的。不过异常难用的交互模式（找不到想要的家具、造家具又臭又长）实属劝退，有这功夫我宁愿在 MC 里搭方块，起码不会卡我创作思路和承重上限。相关玩家群里也基本见不到相关的讨论，偶有一些热度的创作也属于 bug 整活类型。</p><p>也许从游戏制作角度，一个弹性的功能模块一占不了多少游戏资源（都是大世界里本就有的资源、地编系统可能本来就有基础），二还能提一下玩家在线时长，至少有一些作用。</p><p>不过我在思考，玩家在线时长对于《原神》的影响真的大吗？它的商业模式是以在线时间为基础抢占玩家时间从而攫取利益吗？恐怕内容、卡池、角色、地图、话题度会更加影响商业利益一些。</p><p>当然有句话叫做「这个世界上只有两种可以赚钱的方法，一是帮助别人消磨时间，二是帮助别人节省时间」。作为一个游戏，具体是需要消磨时间还是节省时间，在如今内容爆炸的时代恐怕还得重新思考思考了。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何做一个圣遗物管理系统：产品介绍</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<p>系列文章：</p><ol><li><a href="https://skeathytomas.github.io/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E8%B0%83%E7%A0%94%E4%B8%8E%E5%88%86%E6%9E%90/">如何做一个圣遗物管理系统：产品调研与分析</a></li><li><a href="https://skeathytomas.github.io/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3/">如何做一个圣遗物管理系统：产品需求文档</a></li><li>如何做一个圣遗物管理系统：产品介绍（本篇）</li></ol><p>属于总结性质的产品使用说明，大体摘自相关项目的 README，之后如有更新会在 README 中修改。项目链接： <a href="https://github.com/SkeathyTomas/genshin_artifact_auxiliary">刻晴办公桌</a></p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>帮你在游戏中整理圣遗物背包时更便捷地了解、查阅圣遗物的评分，然后把评分最高的圣遗物装配给希望的角色。 <a href="https://www.bilibili.com/video/BV1XB4y1k7au/">demo 视频</a></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220801125435.png" alt="使用截图"></p><h2 id="环境与准备"><a href="#环境与准备" class="headerlink" title="环境与准备"></a>环境与准备</h2><h3 id="OCR-引擎"><a href="#OCR-引擎" class="headerlink" title="OCR 引擎"></a>OCR 引擎</h3><ol><li>OCR 引擎 <a href="https://github.com/tesseract-ocr/tesseract">tesserect</a> ，安装过程详见原项目，或者参考 <a href="https://www.jianshu.com/p/f7cb0b3f337a">这篇文章</a> ，安装链接 <a href="https://digi.bib.uni-mannheim.de/tesseract/tesseract-ocr-w64-setup-v5.2.0.20220712.exe">tesseract-ocr-w64-setup-v5.2.0.20220712.exe</a> (64位)。如果你使用<code>scoop</code>，可以使用<code>scoop install tesseract</code>快速安装。安装完成后，可在命令行输入<code>tesseract</code>检验是否安装成功。</li><li><a href="https://github.com/tesseract-ocr/tessdata/blob/main/chi_sim.traineddata">tesseract 中文简体数据文件</a> ，下载完成后保存到tesseract数据目录<code>tessdata</code>中（如果是<code>scoop</code>安装的话，放在<code>./scoop/persist/tesseract/tessdata</code>文件夹中）。</li></ol><h3 id="如果你需要直接运行-python-程序"><a href="#如果你需要直接运行-python-程序" class="headerlink" title="如果你需要直接运行 python 程序"></a>如果你需要直接运行 python 程序</h3><ol><li>Python 3.6+ (作者开发环境 Python 3.10.5)。</li><li>必备的 Python 包：<br>   1.  PySide6，GUI 框架<br>   2.  pynput，监听窗口外鼠标操作<br>   3.  pywin32，获取设备分辨率、缩放信息，用于兼容不同分辨率<br>   4.  Pillow，截图<br>   5.  pytesseract，tesseract 的 python 接口</li></ol><h3 id="使用打包的-exe-文件"><a href="#使用打包的-exe-文件" class="headerlink" title="使用打包的 exe 文件"></a>使用打包的 exe 文件</h3><ol><li>在 release 中下载最新的压缩包。</li><li>解压。</li></ol><p><em>注：同样需要安装 OCR 引擎。</em></p><h2 id="使用教程"><a href="#使用教程" class="headerlink" title="使用教程"></a>使用教程</h2><ol><li>方式 1：运行打包好的程序。解压好的程序包后，找到并用管理员模式运行 keqing.exe（必须，否则程序运行中无法监听游戏中的鼠标操作）。</li></ol><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220805144258.png" alt="keqing.exe"></p><ol start="2"><li>方式 2：下载源码，使用管理员模式打开命令行工具（必须，否则程序运行中无法监听游戏中的鼠标操作），并打开程序目录，使用命令 <code>python app.py</code> 运行程序。</li><li>在主窗口中选择角色（不选的话，默认评估双爆+攻击词条）。</li><li>打开游戏，调整窗口大小为非全屏下最大的一档。（因为全屏状态下评分结果贴图无法置顶。）</li><li>打开背包-圣遗物，随意选择圣遗物，点击<strong>右键</strong>进行圣遗物评分，评分结果随后标记在对应圣遗物右下角。（暂未对滚动条进行适配，若下拉滚动条使第一行圣遗物显示不全，贴图结果可能会有偏离。）</li><li>选中某个贴图结果，使用快捷键 <code>Z</code> 删除该贴图；使用全局快捷键 <code>Ctrl+Z</code> 删除所有贴图，可进行新一批圣遗物的评估。</li></ol><h2 id="评分方法"><a href="#评分方法" class="headerlink" title="评分方法"></a>评分方法</h2><p><del>参考 <a href="https://mp.weixin.qq.com/s/EUc-o95gpovHv5ctKaQNFw">圣遗物评分方法</a> 。</del></p><p>更新了 <a href="https://mp.weixin.qq.com/s/DxyS8Rll3_eLSelvjiwKwQ">圣遗物评分方法</a> ，调整了角色的有效词条，增加了每个角色相对于固定词条的二级系数（如同样是大攻击对于一般主C和胡桃的评分系数就有所不同），删除了不同打法流派的角色。</p><p>具体每一个角色的有效词条和词条的评分系数可参考 <code>characters.py</code>中的配置，如与需求不符可自行前往源文件修改参数。</p><h2 id="已知问题"><a href="#已知问题" class="headerlink" title="已知问题"></a>已知问题</h2><h3 id="分辨率适配"><a href="#分辨率适配" class="headerlink" title="分辨率适配"></a>分辨率适配</h3><p>当前仅在自己的机子上做了分辨率适配，所以理论上只有 2560*1600 分辨率下可以较为正常的运行。不过分辨率适配框架已经搭好，就差热心玩家给一些不同分辨率的截图做坐标定位和测试了。需要把游戏窗口化为非全屏下最大的一档，打开背包-圣遗物，别去调窗口位置，然后全屏截图私发一下我。</p><p>目前已适配分辨率：</p><p>16:10</p><ul><li><input checked="" disabled="" type="checkbox"> 2560 * 1600</li></ul><p>16:9</p><ul><li><input checked="" disabled="" type="checkbox"> 2560 * 1440</li><li><input checked="" disabled="" type="checkbox"> 1920 * 1080 等</li></ul><h3 id="能不能在圣遗物装配中使用"><a href="#能不能在圣遗物装配中使用" class="headerlink" title="能不能在圣遗物装配中使用"></a>能不能在圣遗物装配中使用</h3><p>本来一开始确实是按照这个开发的，后来发现这个界面识别老是出错。背景飘过的白点和文字重叠基本就识别不出来了，所以放弃了。</p><p>有兴趣可以运行 <code>python test/app_character.py</code> 尝试下效果，当然角色配置还未同步过去。</p><h3 id="关于-GUI"><a href="#关于-GUI" class="headerlink" title="关于 GUI"></a>关于 GUI</h3><p>Bug 一堆，问就是还在学，不过用着应该没什么问题。</p><h3 id="语言支持"><a href="#语言支持" class="headerlink" title="语言支持"></a>语言支持</h3><ul><li><input checked="" disabled="" type="checkbox"> 中文简体</li></ul><h2 id="风险和声明"><a href="#风险和声明" class="headerlink" title="风险和声明"></a>风险和声明</h2><p>本程序不收集任何用户信息，所有数据保留在本地。</p><p>理论上未对任何游戏数据进行非法获取和修改，仅通过截图和 OCR 技术实现相关分析，且没有使用自动化程序帮助玩家获取游戏内资源，应该不在官方打击范围。</p><p>如若官方觉得不妥，我就删库跑路。</p><h2 id="问题反馈"><a href="#问题反馈" class="headerlink" title="问题反馈"></a>问题反馈</h2><p>提 Issue，最好提供下命令行的输出（如识别错误、环境错误等）。有人的话可以考虑建个交流群什么的。</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>Coding</tag>
      
      <tag>Python</tag>
      
      <tag>工具</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何做一个圣遗物管理系统：产品需求文档</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<p>系列文章：</p><ol><li><a href="https://skeathytomas.github.io/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E8%B0%83%E7%A0%94%E4%B8%8E%E5%88%86%E6%9E%90/">如何做一个圣遗物管理系统：产品调研与分析</a></li><li>如何做一个圣遗物管理系统：产品需求文档（本篇）</li><li><a href="https://skeathytomas.github.io/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/">如何做一个圣遗物管理系统：产品介绍</a></li></ol><p>在一番技术调研之后（并没有捞到程序大佬），以及自己对于圣遗物管理的强烈需求的驱动下，这篇「产品需求文档」得以更新。当然，在上篇需求分析文章的最后，圣遗物管理系统的需求已经转化为一种「辅助」式工具。但为了保持系列文章标题的统一性，这里还是称为「圣遗物管理系统」吧。</p><p>产品需求文档，作为工作期间打交道最多的文档，这篇文章多多少少会透露出我的习惯。不过我这个人嘛，不是非常讲规矩，文档自然也会多样化，可能并不能作为一篇合格的「产品需求文档」的参考，如有异议，欢迎讨论，正文部分就不讨论产品需求文档该怎么写了。</p><p>不同的是，这一次的文档面向对象前前后后都是我自己，是一次完完全全和自己交流的过程。当然，文档的目的还是一致的，使得整个工具的需求更加明确，后续第一版工具的研发过程不会因为各种思路调整而改来改去（除非我遇到技术难题实现不了既定需求，那也只能被迫改需求了）。</p><h2 id="修订记录"><a href="#修订记录" class="headerlink" title="修订记录"></a>修订记录</h2><table><thead><tr><th>序号</th><th>版本号</th><th>修改说明</th><th>作者</th><th>日期</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>0.1.0</td><td>创建文档</td><td>Skeathy</td><td>2022.7.13</td><td></td></tr></tbody></table><h2 id="需求简介"><a href="#需求简介" class="headerlink" title="需求简介"></a>需求简介</h2><p>在上一篇关于需求分析的文章中，已大致得出产品需求的结论：<strong>帮助玩家快速判断圣遗物及套装对于特定角色的强度数值</strong>。具体一点，就是以贴图的形式，在游戏界面上标注圣遗物的评分。</p><h3 id="用户行为"><a href="#用户行为" class="headerlink" title="用户行为"></a>用户行为</h3><pre><code class=" mermaid">graph LR    A[选择角色] --&gt; B[选择圣遗物] --&gt; C[触发行为] --&gt; D[查阅评分结果]</code></pre><p>从用户行为角度而言，整个产品的使用流程非常简单。</p><ol><li>选择角色：用户可以选择游戏中的某一个角色，后续的圣遗物将针对此角色展开。</li><li>选择圣遗物：用户在游戏中选择某一个圣遗物，游戏内界面展示出该圣遗物的属性。（可以是背包，也可以是角色的圣遗物装配栏）。</li><li>触发行为：用户需要告诉程序应用「我想要知道当前选择的圣遗物评分」，然后触发相关进程。最直接的自然是「选择圣遗物」的行为直接构成触发行为。但鼠标左键这一行为过于常用，作为触发事件是否会对其他正常操作产生影响有待进一步探讨。</li><li>查询评分结果：查看圣遗物的评分结果。由于游戏内只能一次查看一个圣遗物的详细属性（点开一个忘了上一个），该产品的评分结果需要持续保留在屏幕上（圣遗物列表上）。</li></ol><p>（抛开第三方工具的局限性，更加合适的方式肯定是打开列表就可快速查看到评分结果，而无需一个个去点。最理想的方式自然是游戏内置，给圣遗物的表加个字段用于记录分数。至于如何算分，官方可能不好解决，不如交给用户手动输入自己算的分，至少一次算好后可以永久保留。如果是纯第三方工具的话，就涉及一些数据本地保存与数据更新的问题，可以考虑后续版本添加。）</p><h3 id="需求列表"><a href="#需求列表" class="headerlink" title="需求列表"></a>需求列表</h3><ol><li>主窗口中选择角色的控件（下拉选择框，配备搜索过滤功能以应对角色过多选择困难的情况）。</li><li>圣遗物识别（OCR 技术+文字处理，获取到词条属性及对应的数值）。</li><li>圣遗物评分计算，需要确定算法规则并根据不同角色做适配。</li><li>评分结果显示，以贴图（某种窗口）的形式直接呈现在游戏界面上，并需要关联到对应的圣遗物选择区域附近。</li></ol><h2 id="需求详述"><a href="#需求详述" class="headerlink" title="需求详述"></a>需求详述</h2><h3 id="原型"><a href="#原型" class="headerlink" title="原型"></a>原型</h3><p>详见 Figma 文档： <a href="https://www.figma.com/file/kLy39GqnJW1aU8UpZAeRZN/Artifact-Auxiliary?node-id=0:1">Artifact Auxiliary</a> 。</p><p>由于实际上用户可操作的界面非常少，原型也非常简单，主要包括两个部分：</p><ol><li>主窗口的角色选择。</li><li>贴图窗口的分数显示。</li></ol><p>大头的需求还是要落在后台的识别和计算，以及一些不怎么常见的交互方式上。</p><h3 id="主窗口"><a href="#主窗口" class="headerlink" title="主窗口"></a>主窗口</h3><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220729142745.png" alt="主窗口"></p><p>核心组件下拉选择框，用户可从候选列表中选择想要测试的角色。（具体的交互方式可以丢给交互设计师吗？）</p><ul><li>候选的角色列表数据可参考 <a href="https://bbs.mihoyo.com/ys/obc/channel/map/189/25?bbs_presentation_style=no_header">米游社-角色图鉴</a> ，排序按照元素类型分（便于后期维护更新），每个元素类型下的排序按照图鉴里的来就行。<ul><li>默认情况下为空选择，并显示「–请选择角色–」。于此相关的，有效词条的配置也存在默认项，以针对空选择或通用情况下的分数计算。</li><li>同一角色可能存在不同的玩法，比如反应流或纯色流，对应的有效词条配置也会不一样。针对比较常见的多玩法角色，予以不同的玩法的支持，在角色后标注玩法类型。（不过我确实不怎么懂有哪些角色有多种玩法，随缘加吧，有反馈就补上，问题不大，下面随便记录一些。）<ul><li>可莉-蒸发流、可莉-纯火流</li><li>温迪-攻爆流、温迪-精通流</li></ul></li></ul></li><li>搜索功能。最常用的前后连续匹配搜索即可——候选列表中有任意连续字符与输入匹配则筛选出匹配的角色列表，用户可在筛选后的列表中进行选择。</li></ul><h3 id="触发行为"><a href="#触发行为" class="headerlink" title="触发行为"></a>触发行为</h3><p>前面已经简单讨论过关于圣遗物识别的触发行为，这里再继续展开讲讲。</p><p>PC 端的基础交互行为是键鼠，而在查看圣遗物这一操作行为中，玩家的主要操作为鼠标移动+左键点击。倘若使用最直接的左键点击，在识别阶段是没有什么问题；但在识别过后，用户的其他操作，比如装配、强化圣遗物等等，由于频繁的左键点击操作，可能会与识别的触发行为冲突，造成很多无效识别的情况，并给出干扰用户的无效贴图结果。理论上无效识别可以静默处理（不给贴图结果就当无事发生），但总感觉有些消耗资源。而且我并不确定自己能不能写出无效识别的逻辑，把界面业务变复杂，识别出来的结果就更加复杂，何为无效实际上比较难判定的。</p><p>所以最终定下不要使用左键点击事件作为触发行为。剩下可选的就是鼠标的其他键（中键、右键）和键盘事件了。和几位前端的朋友了解了一些技术原理，鼠标事件在窗口外的定位会比较复杂，所以是不是需要考虑一下使用快捷键+蒙版（建一个全屏的窗口）形式去追踪所选的圣遗物的坐标，有点类似于截图的功能和形式。</p><p>由于技术力限制，具体还需以实际技术测试结果为准，这里仅做几个可能实现的优先级排序：</p><ol><li>优先使用鼠标右键事件，右键点击则对当前点击位置的圣遗物进行识别。由于游戏中右键点击并不会切换圣遗物选择，所以玩家的实际操作是左键点击一个圣遗物，然后再右键点击一次。</li><li>可以结合一些键盘快捷键、鼠标事件，用类似截图的实现方式去触发识别程序。</li></ol><p>此外，确定了触发行为后，需要记录触发行为的一些数据，用于后续的结果展示贴图定位。这里最重要的就是触发事件时所选圣遗物的坐标。具体方法可以获取鼠标的坐标，这就需要用户右键落在所选圣遗物的方框中，否则贴图就会贴在其他圣遗物上了；或者图像识别，直接定位选择的圣遗物的方框。不过图像识别对我似乎有点难，还是用鼠标吧。</p><h3 id="圣遗物识别"><a href="#圣遗物识别" class="headerlink" title="圣遗物识别"></a>圣遗物识别</h3><p>圣遗物的主属性相对清晰，复杂的是对于 4 条副属性进行评估，相关同类评分工具也主要对副属性进行评分计算，所以识别的主要目标是圣遗物的副属性。</p><p>从屏幕上的信息到副属性词条和数值，比较常用的是 OCR 技术，可以使用网络 API 或本地 OCR 项目（自己研发是不可能了）。所以关键信息是确定识别的图片，也即截屏操作选择的区域坐标。</p><p>完成 OCR 识别后，获得了一些字符串数据，需要通过一些文字处理方法（比如正则表达式）从中得到格式化整理的数据，包含文字词条部分和数值部分。比如：</p><ul><li>攻击力：35</li><li>暴击率：12.3%</li><li>元素充能效率：15.5%</li><li>……</li></ul><p>由于攻击力、生命值、防御力包含百分比和具体数值两种情况，也需要额外处理「%」并作出区分。</p><h3 id="评分计算"><a href="#评分计算" class="headerlink" title="评分计算"></a>评分计算</h3><p>具体的评分方法已在上一篇文章中提到，总体上使用提瓦特小助手的评分方法—— <a href="https://mp.weixin.qq.com/s/EUc-o95gpovHv5ctKaQNFw">圣遗物评分方法</a> ，这里就不自己再去整一套算法了。</p><p>简单做下总结，每个角色（及玩法）有不同的有效词条，而每一个有效词条都可按比例转化为可累加的评分。为此，需要配备一些字典也好、数据表也好的数据，包括角色的有效词条和词条转化为分数的系数。</p><p>角色由主窗口用户选择而确定，同时为兼容用户未做选择或其他情况，默认设置一个比较通用的有效词条（攻击力、暴击率、暴击伤害）。</p><p>计算结果需要根据选择的角色，识别的结果和配置的两个基础数据来确定，大致可以用以下公式表达：</p><p>$$S&#x3D;\sum_i^Nvalue_i*coefficient_i$$</p><p>其中$S$是评分，$value$是识别的有效词条的数值，$coefficient$是该词条对应的评分系数，数值保留一位小数。</p><h3 id="评分结果显示"><a href="#评分结果显示" class="headerlink" title="评分结果显示"></a>评分结果显示</h3><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220703170950.png" alt="贴图式圣遗物评分结果显示"></p><p>特别感谢 Snipaste 截图软件的贴图功能给的启发。对于这一贴图（窗口）而言，其实没有什么交互式的功能，只要保留窗口置顶使得结果一直可见即可。当然，贴图的坐标需要准确，使得评分结果和圣遗物能够对应起来，这由前面的触发事件决定。至于贴图出来后，后续在游戏页面内滚动下拉圣遗物列表，造成位置对应不上，这一版本暂时不考虑，相信一屏的数据已经够用。</p><p>然后是窗口的关闭&#x2F;刷新操作。由于贴图窗口为了保持简洁，省略了窗口的关闭按钮，需要有额外的操作方法将这些窗口关闭，比如右键菜单，快捷键等（右键菜单又有 GUI，饶了我吧）。在实际应用中，也存在识别错误，需要刷新数据；或者换了另一种圣遗物&#x2F;页面，需要重置所有贴图的情况。</p><p>所以存在两种关闭&#x2F;刷新贴图窗口的需求：</p><ol><li>关闭单独的贴图。选中贴图（获取焦点）后通过快捷键 Z 关闭贴图。</li><li>关闭所有的贴图。全局快捷键 Ctrl+Z 关闭所有贴图。</li></ol><p>另外，关闭主窗口视为退出程序，也需要关闭所有贴图窗口。</p><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>第一次用 Markdown 的格式写 PRD，各种富文本的图啊之类的需要切换再引用还是有一点点麻烦的（画图什么的如果没有所见即所得还是难受，说的就是 mermaid，外部导入后再修改又是一件让人头疼的事），还是各类集成了作图工具的在线文档好用。好在整体上功能简单，原型图也没几张，整个文档也没几个图要画。</p><p>不过本以为需求非常简单，PRD 会比较少，可惜最后写成 PRD 还是满满的字，更有很多具体的数据配置都懒得放上去（打算直接堆代码里了）。初版实现的功能还是相当简陋的，也不知道有没有能力搞个好看的 UI，就这样吧。</p><p>一些后续版本可优化的方向：</p><ol><li>很多前端坐标受 PC 的分辨率影响，后续要适配更多的分辨率。</li><li>考虑一下自动化操作，一键自动控制鼠标遍历圣遗物然后把结果都呈现出来。</li><li>适配滚屏的操作，可以一次显示更多圣遗物。</li><li>数据本地保存，后续可一键调动后台数据然后将结果展现出来，无需一次次去识别，需要解决圣遗物更新的问题。</li></ol>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>产品需求文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>工作踩坑录：多选陷阱</title>
    <link href="/post/%E5%B7%A5%E4%BD%9C%E8%B8%A9%E5%9D%91%E5%BD%95%EF%BC%9A%E5%A4%9A%E9%80%89%E9%99%B7%E9%98%B1/"/>
    <url>/post/%E5%B7%A5%E4%BD%9C%E8%B8%A9%E5%9D%91%E5%BD%95%EF%BC%9A%E5%A4%9A%E9%80%89%E9%99%B7%E9%98%B1/</url>
    
    <content type="html"><![CDATA[<p>无论是 B 端产品还是 C 端产品，多选操作实在是有太多坑了。最近的工作中也栽在一个多选操作上，写 PRD 时陷在多选逻辑中而忽视了其他细节，然后在需求评审时被前端问倒了。谨以此文记录与此相关的工作失误与反思，下次别犯了。</p><h2 id="踩坑回顾"><a href="#踩坑回顾" class="headerlink" title="踩坑回顾"></a>踩坑回顾</h2><p>这次接到的是一个常规的选地区的需求（当然只是其中很小的一部分），但是要支持多选操作，平台 PC&#x2F;网页端。</p><h3 id="常用的地区选择控件"><a href="#常用的地区选择控件" class="headerlink" title="常用的地区选择控件"></a>常用的地区选择控件</h3><p>一般地区选择有专门的控件支持，比如级联选择（Cascader）或树形选择（Tree），用于处理省市区多层级的包含关系。</p><p><img src="https://img-blog.csdnimg.cn/20200924115202501.png" alt="级联选择（Element）"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220706142317.png" alt="树形选择（Ant Design）"></p><p>两者在使用逻辑上其实非常相似，比较而言，级联选择更占横向空间，树形选择更占纵向空间。一般 PC 端横向空间会充裕一点，而树形选择在纵向空间不足（使用滚动条）时多层级的展开会严重影响到可读性，所以级联选择会更常用一些。</p><p>但是，以上两个控件对于单选的操作支持更好，多选的话就必须配备一个展示选择结果的列表（类似穿梭框，但保留初始选择列表中的选项），用以查看或取消已选的选项。这里的主要原因是选择列表内容比较多，又被隐藏在控件唤起的「面板」中，因此选择结果并不能直接展示给用户。</p><h3 id="稍微魔改了一些"><a href="#稍微魔改了一些" class="headerlink" title="稍微魔改了一些"></a>稍微魔改了一些</h3><p>考虑到实际的业务需求，虽然确实是一个地区选择业务，但可选的层级不需要精确到区级，且可选范围限定在某一个省级（根据用户账号地区而定）。所以可选选项数量有限，且最主要的层级关系只有一层，并不复杂。综合考虑下来，最后并没有使用以上控件，而是采用选择标签平铺的模式，直接将所有选项和选择结果展示在一级页面中。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220706142109.png" alt="地区多选原型方案"></p><p>整体选择项以二维列表标签的形式平铺——行首代表高层级的选择，表示此行全选；第一行「全部地区」则代表了最高层级的全选。这一形式的优势是直观地将选择项及结果实时展示给用户，不必一层层去展开、寻找想要的选项（少一些点击操作），缺点的话层级目录不是那么明显，全选的操作逻辑可能需要在实际操作后进行理解。</p><p>图中高亮&#x2F;异色表示了选中状态，全选操作的话考虑过全部高亮&#x2F;异色处理，但又觉得有些颜色污染，注意力分散，所以最后选择了——高层级目录选择操作则高层级的选项高亮，而子目录选项清除高亮状态。</p><p>然后，因为沉迷于描述这种选择逻辑，哪些哪些不能同时选中云云，成功忘了选择的逆操作——取消选择，以及特殊状态无选择的异常处理。这下前端满头问号了。</p><h3 id="解决与补救"><a href="#解决与补救" class="headerlink" title="解决与补救"></a>解决与补救</h3><p>在与前端一番激烈的讨论与思考之后，大致产生了几种补救措施：</p><ol><li>取消「取消选择」操作。听上去非常离谱——点一次选择，再点一次取消选择在多选操作中是非常常规的操作。但是在这个场景中，高层级选项与低层级选项互斥，实际上可以通过这种 bug 般的操作曲线救国。比如，选了杭州市后想取消，可以先选择浙江省，再选宁波市，杭州市自然就取消了。这个逻辑唯一的好处就是无论用户怎么选，一定会有一个选择结果（默认状态下有一个选项），不会有空选择状态提交的情况。当然，这种操作逻辑太反人类了，在多选状态下取消其中一个会非常麻烦，很快就 pass 掉了。</li><li>保留取消选择功能，取消最后一个选项时自动调整为全选或默认选择状态。也算是一种比较无感（无中断用户流程的错误提醒）的方式，但是最后的选择结果突然变成其他选项时还是会让用户有一些懵逼。所以最后还是 pass 了。</li><li>比较常规的错误提醒。当用户未选择任一选项时，使用消息提示（Message）提醒用户至少要选择一个选项。当然这里有两种处理方式，一种是即时处理——在用户取消操作的即时消息提示，或采用静默式的空选择状态下区域显著文案提醒；另一种是后置处理——在上传选择数据时前端&#x2F;后端校验数据发现空选择，然后进行消息提醒。总体而言，两种方式的用户体验差别不大：即时处理可能会让用户行为有一些中断，尤其是在仅存一个选项而用户想要先取消这个选项再选其他选项时（这时消息提示可能就比较恼人）；后置处理则会打断用户的视线流，把用户注意力突然转移到一个无预期的区域。相对而言，静默提示+后置处理的方式更容易避免强中断的消息提示的出现，所以最后也选择了这种方案。</li></ol><p><em>关于静默提示，最多使用于输入框中。由于用户完全自主输入总是五花八门，很难控制用户输入满足要求，所以经常会报错。对于这种经常出错的情况，强打断的消息提示就太合适了。比如下图中填写邮箱地址，正确的错误提示方式为鼠标焦点离开输入框（相当于用户确认了一次输入过程）时进行提示。图中在输入过程中提示，以及输入没开始就提示都是错误示例。</em></p><p><img src="https://image.woshipm.com/wp-files/2019/05/FKKAhjTwFuYywoE99v8a.jpg" alt="静默提示实例"></p><h2 id="多选业务的坑"><a href="#多选业务的坑" class="headerlink" title="多选业务的坑"></a>多选业务的坑</h2><p>这次「事故」反应出来的是我对于某些交互设计的偏执而忽视了某些基础业务流程，设计专业出身是这样的。对此，特整理有关于选择（尤其是多选）操作的相关基础业务，以使未来相关 PRD 工作更加完整而无懈可击，以及在需求评审中游刃有余。</p><p>一个选择操作业务包含三个主要步骤：</p><ol><li>选择项展示（数据获取）。这一步骤同时包含选项的目标说明（比如前面例子中的「地区设置」，目标就是选择地区）和可选选项的展示。其中可选选项需要考虑选项空间的完整性和互不重叠性，不要遗漏明显的「其他」选项或是使用户在两个选项间犹豫选哪一个。在 PRD 中需要同时描述清楚两个要素，至于具体的展示形式（比如使用下拉菜单，还是单选框（Radio）&#x2F;多选框（Checkbox）），可根据具体的业务选择合适的控件类型并结合好原型图去描述，这里就不具体展开了。</li><li>选择操作（数据处理）。用户在理解选择业务要干什么后，对选项进行选择。这一步骤需要考虑：<br>a. 是单选还是多选？如果是多选的话，是否有全选&#x2F;取消全选的操作？<br>b. 有无默认选项？如果有的话默认选项应该怎么设置？<br>c. 是否支持取消选择？ 一般单选通过选择其他选项即取消了当前已选，而多选则通过多选框表达选择状态（未选、已选）并通过点击操作切换两种状态。</li><li>选择结果上传（数据提交）。所有有关表单的操作（选择是最常见的表单操作），都需要考虑是否允许用户空提交，以及如果用户空提交了该如何提醒用户（这一点前面已经讨论得比较详细了）。</li></ol><h2 id="总结与推荐"><a href="#总结与推荐" class="headerlink" title="总结与推荐"></a>总结与推荐</h2><p>这篇文章的重点还是在于工作业务上遇到的问题和解决方案的梳理，对于背后的常用功能——选择类（多选）控件——的知识梳理还是少了很多细节且缺乏系统性。</p><p>不过如此常用的功能必然少不了前人做的梳理和非常成熟好用的轮子，这里特别推荐 <a href="https://www.woshipm.com/pd/4198279.html">选择类控件设计详细解析</a> ，尤其适合设计师。</p><p>如果你是产品经理的话，我更推荐去研究下成熟的 UI 框架，比如 <a href="https://material.io/design">Material Design</a> ， <a href="https://ant.design/index-cn">Ant Design</a> ， <a href="https://element-plus.org/zh-CN/">Element Plus</a> 等等。不求看懂代码，只求对各种控件和能够解决的业务有更加清晰的了解。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>工作</tag>
      
      <tag>设计</tag>
      
      <tag>需求评审</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何做一个圣遗物管理系统：产品调研与分析</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E8%B0%83%E7%A0%94%E4%B8%8E%E5%88%86%E6%9E%90/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E8%B0%83%E7%A0%94%E4%B8%8E%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<ol><li>如何做一个圣遗物管理系统：产品调研与分析（本篇）</li><li><a href="https://skeathytomas.github.io/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E9%9C%80%E6%B1%82%E6%96%87%E6%A1%A3/">如何做一个圣遗物管理系统：产品需求文档</a></li><li><a href="https://skeathytomas.github.io/post/%E5%A6%82%E4%BD%95%E5%81%9A%E4%B8%80%E4%B8%AA%E5%9C%A3%E9%81%97%E7%89%A9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%BA%A7%E5%93%81%E4%BB%8B%E7%BB%8D/">如何做一个圣遗物管理系统：产品介绍</a></li></ol><p>本篇从标题里就可以看出是一个系列，后续系列文章会在开头处添加相关链接，供自己同时也供读者进行快速查阅。至于后续究竟会出到第几篇文章，以及多久才会产出一篇相关文章，全凭自己的心情。可能觉得产出价值不大（比如重复造轮子），系列就随时终止了。</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>整个项目来源于和朋友们一起玩《原神》时，吐槽的垃圾圣遗物管理系统。尽管已经有了不少第三方工具辅助，但总感觉用起来有不顺手的地方。虽然有重复造轮子的嫌疑，但一时兴起一句「不如自己做一个」启动了这个项目。</p><p>我将以产品经理的角度去实现这么一个第三方工具的设计与开发，重视产品的需求分析和相关文档的整理，当然 UI、程序也可能会全包了。不考虑商业目的，如果真的自己写了代码就考虑开源。当然如果找到程序大佬，然后给大佬打工做做产品和用户体验也是可以的。</p><p>本文主要探讨「圣遗物管理」的需求到底是什么。结合一下对官方系统和第三方系统的竞品分析，挖掘痛点并提炼出新产品的核心竞争点，未来能够基于此分析做出一个可用的 MVP（最小可用模型）。</p><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><p>谈起圣遗物管理的时候，我们（玩家）到底需要什么？</p><p>在讨论这个问题之前，我想先谈谈圣遗物这一系统。首先作为一个被御魂系统折磨的《阴阳师》前玩家，我基本对圣遗物系统不抱有兴趣（甚至有一些厌恶）。讨厌纯粹的刷刷刷行为（<strong>而且看不到尽头</strong>），虽然有策略性但是很多情况下属于看完圣遗物的说明就失去了策略性；或者很多策略性被精准的数值平衡得大差不差，完全比不上升级带来的有效副属性数值提升（策略带来的提升不如欧一点）。</p><p>另外，2.0 版本的绝缘套带来的对于大招后台角色的普适性，也在很大程度上打破了策略性这一要素；以及同副本的追忆套无脑带来的对于小技能后续站场输出的普适性，使得整个副本具有极高的性价比。（1.0 玩家对此十分恼火。）</p><p>但是我完全认同圣遗物系统在手游中的成功，其和体力系统的联动和一定的随机性在很大程度上消耗而又限制玩家的游戏时间并延长游戏寿命。所以，玩家们为什么「沉迷」于刷圣遗物？又在圣遗物管理上需要什么？</p><p>前一个问题的回答是「玩家想要变强」。这一目标的终极体现是（花式）深渊满星，或者说深渊满星「激励」着玩家想要变强。说来也惭愧，我这个 59 级的萌新至今也没满星过（写这篇文章同期的深渊突然就满星了😂）。</p><p>所以后一个问题的回答是「量化玩家变强的数值」。在等级、武器、天赋等其他变强途径中，只有圣遗物这一途径是量化不明显的。所以一个圣遗物管理系统需要的是帮助玩家更加快速地评定<strong>圣遗物及套装</strong>对于<strong>特定角色</strong>的强度数值。</p><p>另外，圣遗物的数量不会只有一个，所以一个合格的管理系统必定包含排序&#x2F;查找&#x2F;筛选&#x2F;对比等列表的基本功能。</p><h2 id="竞品分析"><a href="#竞品分析" class="headerlink" title="竞品分析"></a>竞品分析</h2><p>基于以上基础的圣遗物管理需求分析，本节主要调研下官方和一些第三方工具的情况，分析这些工具是如何评估圣遗物强度数值并进行管理的。</p><h3 id="官方工具"><a href="#官方工具" class="headerlink" title="官方工具"></a>官方工具</h3><p>官方游戏内置有两个主要的圣遗物管理系统：</p><ol><li>背包面板的圣遗物分页。</li><li>角色面板的圣遗物装配系统。</li></ol><p>另外在圣遗物强化时以及合成台废物回收时也涉及到一些列表排序方面的面板，但总体相差不大就不具体分析了。（坏了，我以为相差不大，仔细一查发现圣遗物回收里的排序规则和其他页面里的不一样。）</p><h4 id="背包中的圣遗物"><a href="#背包中的圣遗物" class="headerlink" title="背包中的圣遗物"></a>背包中的圣遗物</h4><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2022-06-14_00-06-18.png" alt="背包面板的圣遗物"></p><p>整个背包大体上是一个高级的列表系统，除了列表的基本功能外，还额外提供了圣遗物的锁定（防错设计）和圣遗物佩戴角色小头像的标识（好像是某一个版本加上的，用以快速判断使用情况，好评），基本上是满足一般的列表内容管理需求的。</p><p>列表的基本功能是排序的呈现。记得远古版本的时候，这个系统里的圣遗物排序用户体验可以用「couldn’t be worse」来形容——不仅同一种圣遗物不一定排在一起，而且五个位置也会莫名被打乱，研究了好一阵子发现不了什么规律，一度怀疑是按照获取的时间戳排序的。所以这个系统对我来说一度只剩一个查阅圣遗物总数的作用。</p><p>好在现在写文章分析这个问题的时候，惊奇地发现这个排序问题已被优化了。总结一下优化后的排序规则：</p><ol><li>有两个最高优先级的排序规则并可由用户选择：按照等级排序&#x2F;按照品质排序，可切换升序或降序。</li><li>第二层排序规则是圣遗物种类，在等级&#x2F;品质一致时，会将同类的圣遗物排在一起。</li><li>第三层排序规则是圣遗物的位置，在同一种圣遗物子序列中，会按照花&#x2F;羽毛&#x2F;沙漏&#x2F;杯子&#x2F;头的顺序排序。</li></ol><p>另外，此系统还允许——对圣遗物的种类进行筛选操作，方便仅针对其中一种圣遗物进行管理查阅；可对选择的圣遗物进行强化和快速装备操作；可对不需要的圣遗物进行废弃以获得摩拉（有亿点小亏）。总体来说圣遗物管理系统的体验在提升，至于玩家呼声比较高的圣遗物套装方案保存与一键装备功能，官方似乎还没有动作（《阴阳师》的御魂倒是很早就有了）。</p><p>不过，此系统不允许按照圣遗物的位置进行筛选，对于圣遗物的强度评估&#x2F;排序仅限制于等级和品质，完全比不上角色面板中的圣遗物装配系统。想必使用频率上比不上另一个系统。</p><h4 id="角色面板的圣遗物装配系统"><a href="#角色面板的圣遗物装配系统" class="headerlink" title="角色面板的圣遗物装配系统"></a>角色面板的圣遗物装配系统</h4><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220615003933.png" alt="角色面板的圣遗物"></p><p>相比起背包中的系统，这个系统在基本满足原功能的情况下添加了更多功能。首先，将系统的入口改为角色面板的圣遗物标签页，从逻辑上更符合玩家对于圣遗物的管理需求。因为一般圣遗物的数量远大于需要装配的数量，玩家的需求更多情况下是<strong>在较为有限的角色中装配几个「有用」的圣遗物</strong>。</p><p>操作页面上，这一系统第一层级就将圣遗物按照五个位置进行筛选，同一页面中仅能查阅一个位置的圣遗物。在排序上，默认规则与背包中排序前两条一致；此外，允许玩家根据圣遗物的属性自选两个属性进行排序。当然，对于圣遗物的种类的筛选也完全满足，且在五个位置一级筛选页面切换过程中，后续的选择的排序&#x2F;筛选规则予以保留。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220615004444.png" alt="自选排序属性"></p><p>从功能上来看，这一系统额外增加了默认的一级位置筛选和手动数值排序功能，使得玩家根据强度筛选圣遗物更为方便。另外，若选择的装配位置已有圣遗物，可以将后续选择的圣遗物面板和已装配的圣遗物面板进行比较，也算是一种强度方面的快速对比。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220615005358.png" alt="圣遗物面板对比"></p><p>值得注意的是，在背包中选择圣遗物进行快速装备时，采用了另一种对比方式：隐藏新旧两个圣遗物的原始数据，而是整体上展示套装属性的变动及具体角色属性的变动数值。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220615005130.png" alt="背包圣遗物替换属性变化提示"></p><p>很难说究竟哪一种对比形式更合适：由于词条数量最多 5 条，两个原始圣遗物逐条比起来有一点麻烦，但也并非那么困难；而整合在属性数值上变化上的模式直接列出了正负数值比较，少了一步计算的过程，但也因为缺失了两个圣遗物的原始数据而容易让人迷惑。只能说以上种种还不能满足我对于圣遗物管理的需求，主要包含两个方面：</p><ol><li>圣遗物强度的量化和对比过于复杂。一个满级圣遗物一般包含 1 个主属性和 4 个副属性，主属性可以不去考虑对比，但是 4 个副属性比较起来究竟整体上孰强孰弱还是比较困难的。更何况一个角色可以装配 5 个圣遗物，整体上的复杂度对比就更高了。</li><li>自选排序属性并不区分主属性和副属性，导致排序结果中会突然插入几个主属性并不满足的圣遗物。在后期玩家中，一个有效的未强化圣遗物胚子至少要考虑主属性和 2 个副属性，这对于筛选胚子而言降低了用户体验，可能相对于改版前的仅筛选主属性反而是某种负优化。</li></ol><h3 id="移动端工具"><a href="#移动端工具" class="headerlink" title="移动端工具"></a>移动端工具</h3><p>「提瓦特小助手」是一个第三方微信公众号&#x2F;小程序，也是整个需求的来源，有兴趣的读者可以自行搜索使用（注意这不是广告）。这一服务除了能提供给玩家圣遗物强度数值的评估，还提供了角色练度、伤害查询等其他方面小功能，另外也通过公众号推送一些相关资讯。</p><p>服务的数据来源于游戏内置的角色展示与分享功能，无论是好友还是非好友，只要知道角色 UID 且对方开启数据共享，就可查阅对方最多八个角色的数据（含等级、武器、圣遗物等）。由于本文大体是来讨论圣遗物管理系统的，所以主要对「圣遗物强度」这一功能进行讨论。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/2d7c7eae80f8e64dc66e85a74ed82e1.jpg" alt="提瓦特小助手-圣遗物强度查询"></p><p>如图所示结果，找到相应服务并输入自己的 UID 后，系统就会返回一张角色圣遗物强度评分结果，包含五个圣遗物单独的评分（配套角色）和总评分及评价&#x2F;排名。</p><p>从结果上来看，该服务提供了一套确定的圣遗物强度数值量化方法，可根据角色识别专门的「有效词条」，又通过字体加粗显著展示，再根据词条的评分系数换算成最终的分数。另外在操作上也算是比较便利，结果呈现也清晰明了。查了一下其背后的 <a href="https://mp.weixin.qq.com/s/EUc-o95gpovHv5ctKaQNFw">强度数值量化方法</a> ，起码看上去比较靠谱。关于量化方法重要的是统一规则并被玩家接收，后续如果造轮子话大概率也会沿用这一评估方法。</p><p>类似的第三方工具还有很多，比如「游创工坊」，在角色整体练度分析的基础上，也进一步分析了各圣遗物的强度，虽然在算法上存在一些差异。也可以单独分析最多 <code>8*5=40</code> 个圣遗物的数据，然后简单排个序。理论上研究同一类型的 8 套圣遗物数据，已经完全能够把这一种类型的圣遗物中最好的几个挑出来了。唯一比较麻烦的可能就是分析不同类型圣遗物时，需要在游戏内频繁调整角色和圣遗物，然后分批保存下来数据。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/3169275d0941d2a18078981e4f4ebbd.jpg" alt="游创工坊-角色毕业度"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/6983d57f864024c486b9e40d09ce77a.jpg" alt="游创工坊-圣遗物评分"></p><p>另外也有专门的圣遗物分析工具，可通过图像识别技术识别上传圣遗物图片的相关数值，或是自己手动输入相关数据，进而分析圣遗物强度，并有简单的保存及管理功能。不过截图上传对于 PC 端玩家而言流程过于复杂（对于移动端玩家而言也挺麻烦的），我放弃了体验与尝试。</p><p>这类工具的优势是方便：</p><ul><li>移动端应用&#x2F;小程序的形式解决了不少用户的设备门槛问题。</li><li>通过简单的戳戳点点操作（第一次可能需要额外记忆并输入下 UID），就可掌控 8 个角色的最新练度，并获取一些提升的建议。</li></ul><p>然后是一些不足之处：</p><ul><li>整体上重点在于查询而非管理。在一次查询后得到的只是一份可视化图片结果，很难在后续管理上优化。</li><li>由于底层实现方法上的局限性，玩家一是需要在分享面板更换角色或圣遗物，二是需要经过一段时间的延迟才能重新获取刷新的数据。有时候服务器比较繁忙，可能还需要大量的排队时间。</li><li>需要忍受那么一点点广告的时间，毕竟人家维护系统需要支出，可以理解。</li><li>由于数据走了第三方的服务器，对方肯定会记录相关数据用于分析和盈利。虽然理论上没什么风险，只是一种常规的用自己的数据换别人利益的手段，不过某些用户可能会有一些膈应。</li></ul><h3 id="PC-端工具"><a href="#PC-端工具" class="headerlink" title="PC 端工具"></a>PC 端工具</h3><p>PC 端的工具就更多了，比如 <a href="https://genshin.pub/relic">可莉特调</a> 支持上传截图通过图像识别分析圣遗物强度（可惜又用了另一种评估方法和数值体系）。优势是PC端上传截图方便多了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220702233352.png" alt="可莉特调"></p><p>再比如 <a href="https://www.mona-uranai.com/intro">莫娜占卜铺</a> ，集游戏内圣遗物自动导出（自动化操作与图像识别）、圣遗物配装与分析（根据角色挑选最强套装）、伤害计算等等功能于一体的超级第三方工具。不得不说，这一工具虽然复杂、上手难度大，但是可以说是很好地满足了有需要研究强度的玩家的基本需求，而且有很高的自主调节性（强度计算方面很多参数都可以手动调整）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220703002813.png" alt="莫娜占卜铺"></p><p>此工具在圣遗物管理层面的需求满足度完全超出我的预期——除了在交互&#x2F;用户体验方面的不足（折腾了一阵后重新定义为非常难用），以及不属于游戏内置外，基本找不到缺点，可谓完全发挥了 PC 端「生产力工具」的优势。一个现成的轮子就摆在我的面前，甚至比我预想的还要造的好，完全打消了我重复造轮子的念头。唯一的想法就是联系作者，重新梳理下业务流程，然后强化用户体验，使得整个工具好用一些。</p><p>总结一下 PC 端工具的优势：</p><ul><li>更加丰富的功能。</li><li>具有较高的调整空间和可玩性。</li><li>真正满足管理的需求。</li><li>对 PC 玩家更为友好。</li></ul><p>不足：</p><ul><li>操作更加专业而复杂，缺乏功能说明&#x2F;帮助手册，用户体验很差，具有较高的学习成本。</li><li>不兼容移动端玩家，存在设备门槛。</li></ul><h3 id="《阴阳师》御魂"><a href="#《阴阳师》御魂" class="headerlink" title="《阴阳师》御魂"></a>《阴阳师》御魂</h3><p>虽然和圣遗物无关，不过两个系统具有高度的一致性。加上自己一度是《阴阳师》深度玩家，以及自认为网易在交互&#x2F;用户体验&#x2F;视觉方面的优势（在国内的水平没有第一也有第二了），打算简单对比下。由于懒得下回《阴阳师》，本部分将查些网图，结合自己的一些记忆来完成。</p><p><img src="https://img.18183.com/uploads/allimg/210512/299-210512102308.jpg" alt="御魂更换页面"></p><p>首先御魂页面的入口是式神页面，点击更换或特定位置的御魂即可打开御魂管理页，可快速更换当前角色的御魂，或者切换到其他角色进行管理，以及对御魂进行整理（废弃）。</p><p>默认按照御魂的种类进行分类展示，各分类下按照等级、品质、1~6 号位御魂位置进行排序，总体上和《原神》的圣遗物排序规则一致。可进一步按照位置、御魂的主属性进行筛选、排序。同时可按照位置进行展示，即可挑选目标位置下属性最高的御魂，满足玩家不按照套装进行装备的需求。</p><p>以上页面可查看单个或套装御魂带来的属性加成，以及更换御魂后的数值变动。更不用说后来功能迭代产生的主属性、副属性快速筛选、废弃功能，以及下图的御魂计算器功能。</p><p><img src="https://nimg.ws.126.net/?url=http://dingyue.ws.126.net/2020/0904/41a7d0dej00qg4hp70014c000hs009wm.jpg&thumbnail=660x2147483647&quality=80&type=jpg" alt="御魂计算器"></p><p>无论是功能完备性、易用性还是一些细节处理方面，御魂（管理）系统在多年的迭代之后已经相当成熟，成熟到有些冗余而复杂的程度，以至于对于新手而言会有不少的学习成本。不过御魂系统的管理需求的复杂度是远高于圣遗物的：回合制游戏对于「速度」的要求非常高（决定了行动顺序），以至于《阴阳师》不同玩法系统往往需要玩家更换御魂及套装。相对的，《原神》的圣遗物更换并不频繁，属于一套圣遗物各种场景都可适用的情况。</p><p>但是这并不代表《原神》内置的圣遗物管理不必优化了。御魂系统提供的废弃、强度筛选、一键强化等很多人性化功能是值得团队学习借鉴并好好优化的。这里点名批评一次只能选 6 个圣遗物狗粮强化的 nt 设计。</p><p>回过头来这一节讨论的管理问题大多和游戏内置系统相关了，作为一个打算做第三方工具的我来说已经没有太多的参考价值。由于第三方工具绝对不可能做到数据的双向流动（主要是无法将管理结果返回到游戏中），很多功能也就没有实质性的作用了，所以还是简简单单做做强度分析，然后能对照着工具在游戏内进行圣遗物装配调整就好。</p><h2 id="总结与反思"><a href="#总结与反思" class="headerlink" title="总结与反思"></a>总结与反思</h2><p>其实在做竞品分析的时候，不知不觉就发现问题的复杂度越来越高了，甚至一度怀疑去做这些的意义究竟在哪里，所以这篇文章也是辗转许久才终于落地，但落地之后续是否还能进行下去又是另一回事了。</p><p>总结一下复杂度：</p><ol><li>对于圣遗物强度的算法五花八门，有评分制，有词条数，对于不同角色有差异，每一个差异可能都对应着一个不同的参数。</li><li>角色的武器本质上也是另一种形式的数值，加上武器这一数值，圣遗物强度的评估可能又会有一些新的变化。</li><li>跳出圣遗物强度的框架，玩家对于强度的需求更准确的是角色&#x2F;队伍的期望伤害（当然也有喜欢大数字的玩家），这时候又会牵扯到配队和手法的问题，「手法是最大的乘区」也是这么来的。</li></ol><p>考虑到以上复杂度，「莫娜占卜铺」确实有着最大的发展潜力，但是这似乎又陷入了数值的陷阱。我玩游戏的目的是什么？是来计算这错综复杂的最优解数学题？还是享受养成类游戏带来的满足感？</p><p>恐怕都不是，我更在意的是角色的玩法，阵容的搭配，以及战斗的策略性。至于伤害数值什么的，可遇不可求，慢慢提升就好。《旷野之息》有着最简单的攻击防御数值系统，完全没有花里胡哨的计算，战斗体验丝毫不减，发现自己容易暴毙的时候，升级下衣服就行。数值什么的，策划随手改个数字，可能这版本就不够用了，何必被数值牵制。</p><p>回过头来，可能比起「莫娜占卜铺」，一些纯粹的查查角色练度的小程序反而更加实用了——发现哪一个圣遗物有待提升，住在对应副本刷一会儿，出货了对比一下前后差距，有提升的话就换上新货，一个角色练得差不多了就换一个练。</p><p>于是，再次回到需求本源：<strong>帮助玩家快速判断圣遗物及套装对于特定角色的强度数值</strong>。</p><p>所以有没有一种第三方工具，可以脱离以上种种工具的查询式体验，而是直接作用在游戏界面中，给出一个圣遗物评分结果呢？感觉上官方不大可能做这种系统（《幻塔》的数值成分更高，所以给了各种装备「战力」这一数值供参考），唯一的实现方式就是通过图像识别+前置贴图，就像这样：</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220703170950.png" alt="贴图式圣遗物评分辅助工具"></p><p>凭借我的技术力这种方式肯定是暂时实现不了的，所以等一个有缘大佬帮忙实现吧，我可以想想 PRD 该怎么写。</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>需求分析</tag>
      
      <tag>竞品分析</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>工作踩坑录：团队、交流、协作与执行</title>
    <link href="/post/%E5%B7%A5%E4%BD%9C%E8%B8%A9%E5%9D%91%E5%BD%95%EF%BC%9A%E5%9B%A2%E9%98%9F%E3%80%81%E4%BA%A4%E6%B5%81%E3%80%81%E5%8D%8F%E4%BD%9C%E4%B8%8E%E6%89%A7%E8%A1%8C/"/>
    <url>/post/%E5%B7%A5%E4%BD%9C%E8%B8%A9%E5%9D%91%E5%BD%95%EF%BC%9A%E5%9B%A2%E9%98%9F%E3%80%81%E4%BA%A4%E6%B5%81%E3%80%81%E5%8D%8F%E4%BD%9C%E4%B8%8E%E6%89%A7%E8%A1%8C/</url>
    
    <content type="html"><![CDATA[<p>本文是一篇工作随想，主要记录一些团队工作过程中遇到的问题，相应的解决方案，会涉及一些配套的软件、工具，或是管理方法等等。全文没什么专业性，仅为本人经验之谈，尽量讨论一些具备普适性效用的场景，不拘泥于细节的扣扣嗖嗖，欢迎吐槽。</p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>虽然我尽量会往普适性的方向讨论相关问题，但还是要说明一下我的工作的主要内容。我是一名产品经理（PM），虽然普遍这么叫，但我自己更愿意称自己为产品设计师（PD）。这个岗位如果对标到游戏领域的话，就是游戏设计师，也即大家普遍称之的策划。</p><p>产品设计师的主要工作自然是设计产品。但是设计这个词涵盖的概念太广了，就我所从事的领域而言就包含方案、交互、视觉、程序四个主要部分。当然，方案、交互、视觉、程序可以分工给不同的工种，而我主要负责的是方案+交互部分的产品设计工作。除了设计的主要工作外，不可避免地需要对产品负责，所以管理工作必不不少，偶尔也会抢占项目经理&#x2F;leader&#x2F;总监的一些工作。</p><p>具体的工作主要包含调研、数据分析、写文档、画原型图、结果验收等。至于具体的团队协作方面的工作，包含需求获取、需求交接&#x2F;评审、需求验收三个部分。</p><ul><li>需求获取：与用户&#x2F;上级&#x2F;其他团队（如市场、运营）交流，知道产品要做什么以及为什么要做这些（用户需求）。</li><li>需求交接&#x2F;评审：在用户需求翻译成实现方案（怎么做&#x2F;产品需求）后，对接执行团队，整个团队评估整体方案的可行性、潜在问题、需要时间等。这个部分交流的目的是保证执行团队可以把需求做出来。</li><li>需求验收：执行团队实际做出了的东西可能会与预期有差异，这个时候就需要及时跟进团队的结果产出，在妥协&#x2F;完善&#x2F;修改中推进整个结果的产出。</li></ul><p>最后用斯坦福的设计方法论的基础模型来总结整个工作流程和需要交流的地方。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220525225705.png" alt="设计思维与协作"></p><h2 id="文档，文档，还是TM的文档"><a href="#文档，文档，还是TM的文档" class="headerlink" title="文档，文档，还是TM的文档"></a>文档，文档，还是TM的文档</h2><p>一说到交流，我们的第一反应会是面对面的交谈，或者即时通讯软件上的沟通，或者再正式一点的邮件。但是这种形式的交流（即时或半即时），主要的使用场景是讨论。凡是讨论，则必定会含有大量的不确定的信息&#x2F;垃圾信息，使得工作目标模糊；加上这些交流很快会被新的交流淹没，就算讨论出了结果，明确的工作目标也很可能因被遗忘在某个角落而丢失。</p><p>所以唯一的解决方案就是白纸黑字确定下来的文档。这份文档需要随时供团队内的成员进行查阅，并伴随整个项目落地。「这份文档」也不仅仅代表一份文档，除了最重要的<strong>产品需求文档PRD</strong>，偶尔需要接触到的<strong>商业需求文档BRD</strong>和<strong>市场需求文档MRD</strong>，可以进一步包含<strong>会议记录</strong>、<strong>各类评审记录</strong>、<strong>用户研究报告</strong>、<strong>项目管理文档</strong>等等，还可能包含领导口头<strong>传话记录</strong>等（虽然不应该直接负责，但为了防止领导变卦最好还是留档下来给领导过一遍。）</p><p>总之，凡是需要协作与工作交接的部分，在讨论完成之后就需要有一个确定的文档，保证整个团队对于工作目标明确清晰，从而使得项目有序推进。团队里的开发同学有自己的开发文档、接口文档需要准备，交互、UI同学有交互、UI文档准备，测试的同学有测试文档，剩下的PRD以及各种杂七杂八的交流文档则基本上由产品经理包了。整个团队中产品经理对于业务的理解一定是最深刻的，所以多承担些别的同学不那么喜欢的文档工作，也是必须的。</p><h3 id="修改与存档"><a href="#修改与存档" class="headerlink" title="修改与存档"></a>修改与存档</h3><p>上面说到我们需要一堆确定的文档指导工作推进，但是实际执行中，文档是会不断更改的。比如自己在写第一版的时候，可能就会私下里修改很多次；然后给领导过的时候，又会有一些修改；再之后发布给整个执行团队的时候，执行团队可能首次提问就会导致很多修改；然后就算执行团队需求评审通过了，在实际执行起来后也会遇到一些没预估的问题，这个时候又要进行修改或补充。</p><p>当然以上这些还算是正常的文档修改，通过一些备注、修改说明还能定稿。有些情况下领导一拍脑门整个方案大改，文档重构也是完全可能的。</p><p>所以如何做好这些文档的版本控制也得好好研究研究。随着各种在线协作文档的兴起，各种集成在软件中的版本控制已经完全能用。不必像开发那样严格按照dev、beta、release分支那样管理版本，产品经理对于文档的版本管理更多的是保持文档的良好阅读性。</p><p><img src="https://pic4.zhimg.com/v2-a8c2834cb2097297bdbb6e43113e981f_r.jpg" alt="一份可参考的修订历史记录"></p><p>比如在需要频繁修改的文档中首先就说明历次修改的内容，同时做好文档的目录，方便目标成员查阅。虽然一般情况下接触的文档很少有回滚版本的需求，但是若注意到某些破坏性的修改，可以考虑在修改前备份文档副本并标注版本信息（就和游戏存档一样）。</p><h3 id="通知与交流"><a href="#通知与交流" class="headerlink" title="通知与交流"></a>通知与交流</h3><p>在实际的工作中，时刻要关注文档的受众，完成或修改文档后需要及时向受众沟通。文档天然在即时性上存在缺陷，所以需要通过这种方式弥补交流的缺陷。</p><p>一般情况下，我都会把各类文档的最新版直接呈现给团队成员，这一点会在<a href="#%E6%96%87%E6%A1%A3%E7%AE%A1%E7%90%86">工作空间</a>中进一步讨论。实时协作文档工具（包括面向设计文档的Figma），因为部分解决了传统本地文档在交流上的痛点，这几年也是快速增长。</p><h2 id="工作空间"><a href="#工作空间" class="headerlink" title="工作空间"></a>工作空间</h2><p>我对工作空间的定义是一个实体或虚拟的环境，用于向个人或团队呈现工作流中的各种实时信息，或者帮助人们快速查找工作需要的信息，从而帮助人们高效工作。</p><p>一个工作空间需要有一个大的工作目标，团队成员因为拥有这一共同的工作目标而聚集在这一工作空间中。当然在实际工作中，一个人往往会同时接手多个大的工作目标（项目），这种多线程操作稍后再谈。</p><h3 id="看板"><a href="#看板" class="headerlink" title="看板"></a>看板</h3><p>看板（KANBAN）工具是一个典型的工作空间工具，同时市场上几乎所有的协同办公&#x2F;管理工具都会添加看板的功能，另外GitHub的Issue、Pull Request也和看板的理念类似。看板是一个可视化工具，通过将工作目标拆解，并放置在「未开始」「进行中」「已完成」三个基本的核心模块中，实现整体工作进程的可视化。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220529002156.png" alt="看板工具"></p><p>看板的管理属性会更强一些，管理者通过这种可视化可快速监控项目进度；团队成员也可在看板中明确自己的代办事项，合理规划自己的工作。一个团队需要有这么一个看板来激励所有成员的工作。</p><p>至于看板的实体或虚拟性，我个人倾向于在团队办公室竖一块玻璃看板，通过便利贴跟进子任务。站在实体看板前讨论问题和进度总是会让人更有感官上的冲击，让工作更加具象化从而起到更好的激励效果。</p><p>而虚拟看板的优势在于突破了空间限制，为远程办公等跨距离办公场景提供帮助。同时在「多维表格」这一概念起来之后，看板的可视化效果可以根据需要在列表、便利贴式看板以及甘特图间切换，满足不同的需求场景，可参考<a href="https://www.feishu.cn/hc/zh-CN/articles/360049067678">飞书「多维表格」的说明</a>。比如列表模式可方便快速编辑、甘特图模式对于进程的综合展示效果更佳。</p><p><img src="https://p9-hera.byteimg.com/tos-cn-i-jbbdkfciu3/7d6678c7dd5b4f6784d1724fc123b158~tplv-jbbdkfciu3-image:0:0.image" alt="飞书的多维表格"></p><h3 id="文档管理"><a href="#文档管理" class="headerlink" title="文档管理"></a>文档管理</h3><p>看板工具虽然在任务可视化上很有成效，但在实际的任务推进上还是缺了一点味道，看板并不能方便地告诉成员如何完成任务。相应的，解决方案是前面提到的文档。对应到GitHub，则是核心的Code模块。</p><p>工作空间中需要有这么一个文档管理系统，包含最基础的存储、分类、查阅、编辑等功能。</p><p><img src="https://static.sitestack.cn/projects/yuque/f69f5c6abf012d05b3a350757e545e6c.png" alt="语雀知识库"></p><p>我的实际使用流程一般就是直接在空间的合适目录建立新文档，完成后通知相关人员。在整个项目的持续时间内，相关的文档修改、添加等都在这一空间中进行，文档时刻保持最新且唯一状态（也即一个问题&#x2F;工作流程对应一个文档）。同时整个文档空间对所有人开放，就算是暂时无关的成员也可对所有文档进行查阅，方便对整个产品业务进行认知和了解。</p><p>保持在线文档的「唯一」，省去了文档版本冲突、交流不在一个版本上的各种问题，从易用性角度完爆各类版本控制软件。</p><p>而在项目结束或者版本上线后，当前工作空间中的在线文档都会统一归档处理，通过「项目名称+版本号」的形式归档在本地SVN服务器中，供后续复盘或历史查阅使用。</p><p>至于线上的工作空间，则暂时清空。在保留产品线和空间结构的基础上，相关文档随着新一周期的工作目标而逐渐建立和丰富起来。不过实际上，产品经理和研发的工作时间线相对会错位一些，在研发后期一般下一轮的产品工作已经逐步启动，在这一时间段我会在个人工作空间先完善各种文档，然后随着新一轮项目的交流工作迁移到团队工作空间中。</p><h3 id="多线程工作"><a href="#多线程工作" class="headerlink" title="多线程工作"></a>多线程工作</h3><p>理论上多线程完全是一个管理工作，暂时还轮不到我来负责统筹安排。不过我也不是完全没有多线程的经历，看书&#x2F;剧总喜欢一本&#x2F;部没看完的时候就新开一个坑（典型INTP了），工作上现在也是在三条产品线上多开。</p><p>对于多线程的工作空间，首先第一步是对每一个线程建立起一个独立的工作空间。对于个人而言，TA的工作域就是多个工作空间的集合，进入某一个工作空间即开展这一工作空间的相关工作。至于单独工作空间内的协作与交流，都与前面提到的无异。</p><p>唯一比较麻烦的是，由于多线程操作，时间管理更加困难了。虽然名义上叫做多线程操作，但是实质上事情只能一件一件的做。所以多线程本质上是一个时间安排问题，什么事先做，什么事后做，突发事件怎么应对，事件完成后的协作交流与任务交接等等。</p><p>比较有效的方式是项目规划阶段的甘特图与个人安排的甘特图之间的协调。从大到小拆解任务流程，在大阶段避免个人任务的冲突，小阶段适当灵活调整。不过这一切的基础还是团队leader对整个项目难度的把控以及对自身团队能力的把控，能够合理安排计划。</p><p><img src="https://p9-hera.byteimg.com/tos-cn-i-jbbdkfciu3/5afc8d30c7bb4d2d8e908b2940860a34~tplv-jbbdkfciu3-image:0:0.image" alt="飞书甘特图"></p><p>可惜管理工作讲起来太抽象了，以前单打独斗的时候没怎么重视管理的重要性。如今在各个团队中偶尔涉及一些小的管理工作，深知管理不易，虽然我基本上可以实现团队的成果按时提交。</p><h2 id="碎碎念的总结"><a href="#碎碎念的总结" class="headerlink" title="碎碎念的总结"></a>碎碎念的总结</h2><p>以上就是这篇文章的全部了，有一些技巧类的总结，也有一些工具、方法的介绍，还有一些抽象的说明。不论如何，工作中需要时刻保持思考、保持学习、提高效率。</p><p>最后，团队合作最重要的还是要放开自己，由向内思考（Introvert）转为向外交流（Extrovert）。虽然我在生活上倾向于INTP（主要是社交太无聊了），但在工作上还是倾向于ENTP，巴不得天天和团队内的成员对线（指解答问题、Push任务推进、说服大家接受自己的想法）。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>效率</tag>
      
      <tag>团队协作</tag>
      
      <tag>管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>阿宅也体验了一把疫情</title>
    <link href="/post/%E9%98%BF%E5%AE%85%E4%B9%9F%E4%BD%93%E9%AA%8C%E4%BA%86%E4%B8%80%E6%8A%8A%E7%96%AB%E6%83%85/"/>
    <url>/post/%E9%98%BF%E5%AE%85%E4%B9%9F%E4%BD%93%E9%AA%8C%E4%BA%86%E4%B8%80%E6%8A%8A%E7%96%AB%E6%83%85/</url>
    
    <content type="html"><![CDATA[<p>想不到这里会新增「生活」的分组和标签，难不成写作&#x2F;创作已经构成了我的「生活」？</p><p>这篇文章大抵只是一些关于疫情生活体验的碎碎念，记录一下作为一个宅在近两三年中疫情中的体验及变化。</p><h2 id="早期"><a href="#早期" class="headerlink" title="早期"></a>早期</h2><p>对一个宅而言，疫情本来是没有很大影响的。防疫政策大部分是限制人群的流动，所以一个本就没什么流动需求的宅，大抵是对疫情无感的。甚至因为疫情的原因可以推掉很多不必要的外出，为自己的宅找出一些借口，反而是带来了一些正向的体验。</p><p>比如最早期的时候，寒假、春节，全国范围内封控，寒假足足延长到三个月。和爸妈在家中呆在一起如此之长的时间，就算是高中毕业那个暑假也没有这样的机会。虽然肯定少不了日常的摩擦和矛盾，但起码这一次居家时间有了很多和爸妈交流的机会，总体上体验良好。</p><p>加上虽然叫做封控，物资充足、新鲜感、在家中的舒适、没什么对疫情的担心，除了限制出行不能出小区外（几天一次外出采购物资机会）基本上没有什么其他需要额外耗费精力的事情。虽然学校那边反而整天无意义地填个人健康信息打卡有一点点麻烦，但总体来说早期的疫情管理得出色、高效且保证了良好的体验。</p><p>整个封控期间，恰好刚完成论文的投稿，学习科研工作方面都比较闲，整体多出来非常多的时间。因而也有幸补了许多想玩的游戏、想看的番和剧，甚至抽空多学了一门语言。虽然宅在家里，但总感觉生活特别充实。想来若是我的工作也是如此，每天居家即可完成工作目标，之后全部的时间都由自我安排，那可真是令人期待的生活。</p><h2 id="中期"><a href="#中期" class="headerlink" title="中期"></a>中期</h2><p>然后就是全面封控的结束，全国防疫的大胜利。在全世界范围内都被疫情阴霾笼罩的情况下，只有我们国家稳定住了疫情的扩散，并保住了百万数量级的生命。</p><p>当然封控的解除并非完全没有代价的，比如健康码系统，比如全国范围内设置的风险地区管理系统，比如凡是公共场合必戴口罩，还有数不清的为防疫工作的人员……如果没有疫情，又有谁愿意一直活在这种代价中呢？</p><p>好在这些代价是可以承受的，我所在的地区常年低风险。偶有出门需求的时候，也只要戴个口罩，出示一下健康码就完全OK；加上本身不会有太多出门的需求，所以整体上也慢慢地把疫情当成了生活的一部分，一个没有太多影响的小小部分。甚至之前爆火的「疫情三年，青春几年？」也基本对我无感。</p><p>大多的时候，我还是宅在自己的舒适圈中，学习、工作、娱乐，唯一比较头疼的就是原定的实习计划被迫中止，以及难难难难难的找工作。</p><p>这里我还是要吐槽一下学校的傻x操作，什么层层加码、无意义打卡、出入申请报备，严格控制学生及家长的出入，但是其他人员似乎完全不受到影响。最有意思的是某位教职工外出没报备没做核酸，返校一段时候后查出了阳性，导致整个校区封锁一个多礼拜，全员多轮核酸。然后媒体还在大势报道什么半夜做核酸秩序井然，一边排队一边看书。什么「丧事喜办」，全然不知某些流动的学生、工作人员等因为没有校区内的固定住所，在某些不知名的小角落挨冻，后续在物资到位后这些基本问题才得以解决。</p><p>不去细究个中原因和正误，整个中期其实就埋下了不少矛盾。比如某些基层对于政策的执行问题，某些宣传口不顾实际的宣传与人民真实感受的矛盾，还有凡是有权就非常难避免的官僚问题。印象中全国各地疫情的小反弹事件有很多起与高校相关。本以为学校作为象牙塔与这些并没有很大的联系，却不知疫情之下存在感最为薄弱的学生群体正是对于这些问题与矛盾见证得最早且最为深刻的群体，当然某些傻白甜自然是不会看到的。</p><p>整个疫情的中期，是一场漫长的拉锯战，向每一位奋斗在一线把好关口的工作人员致敬。</p><h2 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h2><p>一个不能称之为后期的「后期」，因为谁也不清楚之后的疫情防控政策是怎样的，只能用「现在」一词作为小节标题。</p><p>时间是发展的，病毒也是发展的，全世界的防疫政策也是发展的，但是我们的防疫政策究竟是在发展，还是在倒退，还是在原地踏步、摇摆不定，现在看来还不好确定。整个疫情因为上海的操作将沉积下来的矛盾引爆了，光从数字上来看已经比两年多前的武汉更为严重。</p><p>本来我已经逐渐习惯起了疫情的种种，却不知自己付出的代价正在一点一点变大。原先只要一个健康码就可以出入公共场所，现如今需要健康码、行程码、疫苗接种记录、48&#x2F;24小时核酸检测结果……差不多只要范围内出现一例阳性，就是全员核酸，哪怕是去个超市买个菜都需要以上4件套，所以就是需要不停地做核酸，利好核酸产业。</p><p>这次上海疫情的扩散完全摧毁了构筑了两年的健康码信用系统，什么低风险统统没有用，你不去做核酸，最基本的生活保障就受到了威胁。这种代价已经逐渐超出我所能忍受的极限了，我可以限制自己的出行，却不想唯一的出行是去做核酸以及回来的路上。核酸的排队短则十几二十分钟，长则几个小时，之间接触更多的人，还有很多人无视规则地抽烟、吐痰，若是其中一个阳性，我也怕是要吃上隔离套餐，承受本不应承受的风险。最近一两个月，我已经记不清自己做过几次核酸，又在做核酸上花费了多少时间。</p><p>而当因为某些需求确实需要外出的时候，噩梦才真正来临。首先高铁大部分停了，客车也停了，网约车、出租车也停了不少。自驾过路口遇到重重阻拦，没有报备就是不给过，硬是遣返，哪怕你的4件套完全OK。至于那个报备系统，从没有任何官方通告，全靠口口相传，光是一个报备系统，我可以在短短几天之内见到好几个不同的版本，并且没有哪一个版本是可以审核通过的。</p><p>然后就是不知如何而来的黄码套餐。从未去过任何中高风险地区，4件套正常也可能随时收到一个黄码隔离套餐，出高铁站时甚至还有专门的技术人员手动将你的健康码转成黄码。我本以为自己会规避风险，中高风险的地区都可堂而皇之地推掉，却不想只要一出门处处都是中高风险待遇。如此下来，一次出行花费的精力完全可以和一个月的工作相媲美了。所以尽管爸妈催着我回家，却打心底里地害怕且觉得麻烦。</p><p>不是非常想讨论「国难财」的利益链，但还是要说一下切身体会到的一件事。风险永远能够带来收益。在出高铁站人工赋黄码后，不能乘坐公共交通，不能打车，那么我该如何回去呢？工作人员给出的答案是你可以叫朋友来接。嗯，又是一个没什么用的政策，毕竟要是传播了依然防不住，而且在我出高铁站前完全不知道有这样的政策。刚走出高铁站，正愁着联系哪位朋友时，边上的黑车师傅就凑过来了。好在要价也不算特别离谱，在我接受范围内，所以也不去承担额外的时间和人际关系成本了。</p><p>可惜虽然管控程度已经是严上加严了，疫情传播起来还是根本控制不住。四下疫情还是接连不断地出现，周围的封控地区比过去两年加起来的还要多，且更新得十分频繁。真是完全不懂为什么在这么严格的防疫控制下还会有那么多的漏网之鱼呢！</p><h2 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h2><p>我不是什么专业人事，手头也拿不出一手的数据用来决策哪种防疫政策更加优秀，只会偶尔查查数据，看看不同人的观点，和不同的人聊聊，仅此而已。</p><p>和两位国外的患者友人聊过，最新的Omicron虽然比刚开始的病毒「毒性」下降了不少，但也算是比较强的「流感」。20多岁的青壮年也会有比较严重的症状，咳嗽、发烧、咽痛、浑身无力等等，在严重的时候还会影响到睡眠。大概会有两到三天的「重症」体现，之后好转一些，一周左右基本完全恢复，检测结果转阴，恢复正常的工作&#x2F;生活。</p><p>不是非常了解国外发达地区的防疫政策，不过查到有很高的疫苗接种率，感染了之后一般居家隔离，只有重症才会去医院接受治疗。也即我们媒体口中的「躺平」。</p><p>GDP方面，从2020年普遍负增长，到2021年开始逐渐恢复正常，当然也可以说是前一年（2020年）跌的太多了然后这一年回血了一波。</p><p>至于究竟选择那种防疫政策，或者如何完善防疫政策，我不清楚。我不清楚有多少人因为当前的政策承受了代价，不清楚经济又承受了多少代价；也不清楚政策变化后医疗资源能否支撑，不清楚会有多少新增死亡（尤其是高龄老人）。</p><p>我只知道当发展的步伐放缓甚至停滞的时候，社会问题暴露得比想象中的多得多。在中国最发达地区暴露出来的问题，我都懒得去总结了。至于这些问题的解决方法，我什么都做不到。</p>]]></content>
    
    
    <categories>
      
      <category>生活</category>
      
    </categories>
    
    
    <tags>
      
      <tag>生活</tag>
      
      <tag>疫情</tag>
      
      <tag>宅</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>抽卡与掉落（2 道概率题）</title>
    <link href="/post/%E6%8A%BD%E5%8D%A1%E4%B8%8E%E6%8E%89%E8%90%BD%EF%BC%882-%E9%81%93%E6%A6%82%E7%8E%87%E9%A2%98%EF%BC%89/"/>
    <url>/post/%E6%8A%BD%E5%8D%A1%E4%B8%8E%E6%8E%89%E8%90%BD%EF%BC%882-%E9%81%93%E6%A6%82%E7%8E%87%E9%A2%98%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>之前接触数值的时候遇到了一些有趣的概率题目，涉及氪金游戏的抽卡，物品掉落等等。一直留着代码却迟迟没有记录下来并给出解释，也不知道把代码继续存到那里。于是打算整理成文章，一则可以保留代码，二则可以保留思路甚至与他人交流。</p><p>我的解法都是基于代码的硬算，使用了期望的基本定义：</p><p>$$\mathbb{E}(X)&#x3D;\sum_i^N x_i*p_i$$</p><p>即事件*概率的累加。</p><h2 id="题目-1：伪随机思路的抽卡与保底"><a href="#题目-1：伪随机思路的抽卡与保底" class="headerlink" title="题目 1：伪随机思路的抽卡与保底"></a>题目 1：伪随机思路的抽卡与保底</h2><p>自从抽卡游戏需要公布概率以来，如何设计抽卡的概率也成为了一门需要不低数学门槛的学问（其实不需要公布概率的时候也是很深的学问）。虽然厂商公布了一个概率，但这个概率没有标注的那么简单，往往是引入保底的综合概率，每一次抽卡实际的概率与公布的概率并不完全一致。</p><p>关于抽卡，厂商们多多少少会引入一些「伪随机」概念。这里的「伪随机」并不是指计算机程序原理层面的「伪随机」，而是一种应用层面的随机性。</p><p>举个例子，某抽卡过程有 20% 的概率的抽中，那么理论抽中的期望次数是 5。如果使用「真随机」，即每一次都有 20% 的概率抽中，事件独立，那么 5 次没抽中的概率高达$0.8^5&#x3D;0.32768$，也就是有差不多 1&#x2F;3 的人不能在 5 次以内抽中；而另一方面，抽中 2 次的概率约为 20%，3 次 5%，而一次约为 40%，运气比较好的玩家约占 1&#x2F;4。这与玩家的期待是不一致的，<strong>欧皇过于欧，非酋也过于非</strong>。</p><p>所以，为了让抽卡结果更加符合玩家的心理，需要研究出一种新的抽卡概率模型，使得欧皇的概率降低，非酋的概率也降低，但整体上抽卡的概率保持不变。这一「伪随机」理念同样适用于「暴击」（或者说是来源），有一定概率暴击和抽卡是完全一致的。</p><p>经典的例子的是《WAR3》中的暴击，一个暴击概率 20% 的英雄，并不是刀刀 20% 的概率暴击，而是首刀 5.57% 概率暴击，如果不暴击，则之后暴击概率变成 2 倍、3 倍……直至暴击则重置概率，从首刀的 5.57% 开始算。如此下来，综合暴击概率仍为 20%，却有效减少了刀刀暴击或者迟迟不暴击的尴尬局面。</p><p>以上只是一个比较简单的例子，实际上伪随机的算法处理起来非常多样化，比如可以按照某个函数递增概率，或者干脆设定好每一次的概率。不过从最终综合概率结果拟合概率变化函数过于复杂（我不会），我只会用已知概率函数正推综合概率。</p><p>比如《明日方舟》中标准池抽到六星的概率规则：</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220426002425.png" alt="《明日方舟》抽卡概率规则"></p><p>简单写了一段代码计算抽中六星的期望抽卡次数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> math<br><br>c = <span class="hljs-number">0.02</span><br>add = <span class="hljs-number">0.02</span><br>n = <span class="hljs-number">50</span><br>currentp = <span class="hljs-number">0</span><br>successp = <span class="hljs-number">0</span><br>expectation = <span class="hljs-number">0</span><br>maxN = n + math.ceil((<span class="hljs-number">1</span>-c) / add)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(maxN):<br>    <span class="hljs-keyword">if</span> i &lt; n:<br>        currentp = (<span class="hljs-number">1</span> - successp) * c<br>    <span class="hljs-keyword">elif</span> i &lt; maxN - <span class="hljs-number">1</span>:<br>        currentp = (<span class="hljs-number">1</span> - successp) * (c + (i-n+<span class="hljs-number">1</span>) * add)<br>    <span class="hljs-keyword">else</span>:<br>        currentp = <span class="hljs-number">1</span> - sucessp<br>    successp += currentp<br>    expectation += currentp * (i + <span class="hljs-number">1</span>)<br><br><span class="hljs-built_in">print</span>(expectation)<br></code></pre></td></tr></table></figure><p>代码的基本思路就是计算第一次抽中的概率、第二次抽中的概率……直至第 99 次抽中的概率（100%），然后用期望的基本公式求和。</p><p>稍微解释一下代码：<code>c</code> 是初始概率；<code>add</code> 是 50 抽之后的递增概率；<code>n</code> 表示之后概率递增；<code>maxN</code> 表示此时抽中概率已为 100%；循环结构内 <code>i+1</code> 表示抽卡次数（循环从 <code>i=0</code> 开始）；<code>successp</code> 代表 i 次抽卡已抽中的概率，经过一次抽卡后累加当前抽中的概率；<code>currentp</code> 代表本次抽中的概率，即累计未抽中 <code>（1-successp）*当前概率 </code>（分 50 抽前后两种情况）；期望就是当前抽中概率（<code>currentp</code>）*当前抽卡次数（<code>i+1</code>）的累加。</p><p>最后运行下来，期望约为 34.59，也就是平均 35 抽可以得到一个六星干员，好像与自己的抽卡体验挺符合的。什么你说双角色池歪了，那没事了。</p><p>整个代码框架可以微调一些参数，或通过设置各次抽卡的概率，套用到其他「伪随机」事件中。</p><h2 id="题目-2：怪物掉落物品凑成整套装备"><a href="#题目-2：怪物掉落物品凑成整套装备" class="headerlink" title="题目 2：怪物掉落物品凑成整套装备"></a>题目 2：怪物掉落物品凑成整套装备</h2><p>首先是一个较简单的问题：<strong>打一次怪物随机掉落五种装备中的一种，问收集齐五种装备打怪物次数的期望是多少？</strong></p><p>这题可以一步一步推：获取第一个装备的期望是 1；第二个装备不重复的概率为 4&#x2F;5，所以获得 2 个不重复装备的期望为 1+5&#x2F;4；依此类推，可得收集齐的期望为 1+5&#x2F;4+5&#x2F;3+5&#x2F;2+5&#x2F;1&#x3D;11.42。</p><p>后来又遇到了一个稍微棘手一点的问题升级版：<strong>打一次怪物随机掉落五种装备中的三个（不重复），问收集齐五种装备打怪物次数的期望是多少？</strong></p><p>这个改进版的问题一开始着实困扰到我，所以一怒之下打算用暴力模拟的方式解决：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> random<br><br>a = [<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>]<br><span class="hljs-built_in">sum</span> = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10000</span>):<br>    b = []<br>    i = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">while</span>(i &lt; <span class="hljs-number">100</span>):<br>        b += random.sample(a,<span class="hljs-number">3</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">set</span>(a) == <span class="hljs-built_in">set</span>(b):<br>            <span class="hljs-built_in">sum</span> += i<br>            <span class="hljs-keyword">break</span><br>        i += <span class="hljs-number">1</span><br>exp = <span class="hljs-built_in">sum</span> / j<br><span class="hljs-built_in">print</span>(exp)<br></code></pre></td></tr></table></figure><p>非常简单的暴力模拟，进行 10000 次集齐装备试验，记录每次试验中集齐 5 个装备的打怪次数然后求平均值，模拟出来大概 3.2 附近。</p><p>后来在进一步的思考下，决定使用抽卡的期望算法来准确计算，先上代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python">exp = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">2</span>,<span class="hljs-number">40</span>):<br>    j = i<br>    exp1 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">0.1</span>,i-<span class="hljs-number">2</span>)*<span class="hljs-number">0.3</span>*i<br>    exp += exp1<br>    <span class="hljs-keyword">while</span> j &gt; <span class="hljs-number">2</span>:<br>        exp2 = <span class="hljs-built_in">pow</span>(<span class="hljs-number">0.1</span>,j-<span class="hljs-number">3</span>)*<span class="hljs-number">0.6</span>*<span class="hljs-built_in">pow</span>(<span class="hljs-number">0.4</span>,i-j)*<span class="hljs-number">0.6</span>*i<br>        j -= <span class="hljs-number">1</span><br>        exp += exp2<br><span class="hljs-built_in">print</span>(exp)<br></code></pre></td></tr></table></figure><p>解题思路是第一次打肯定掉落 3 个装备，不会集齐，所以从第二次打怪开始计算概率和期望。</p><p>一些基础概率，使用排列组合知识易得：</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs clean"># <span class="hljs-number">3</span> #已经掉落三个的前提下<br># p123 = <span class="hljs-number">0.1</span> #继续掉落前三个<br># p4or5 = <span class="hljs-number">0.6</span> #掉落第四个或第五个<br># p4and5 = <span class="hljs-number">0.3</span> #同时掉落第四个和第五个<br><br># <span class="hljs-number">4</span> #已经掉落四个的前提下<br># p5 = <span class="hljs-number">0.6</span> #掉落第五个<br># p1234 = <span class="hljs-number">0.4</span> #掉落前四个<br></code></pre></td></tr></table></figure><p>这里分两种情况讨论：</p><ol><li>第四个和第五个在某一次打怪中一起掉落（exp1）。</li><li>先掉落第四个，再掉落第五个（exp2）。</li></ol><p>第一种情况需要第 <code>i</code> 次前都未掉落 4 或 5，然后第 <code>i</code> 次同时掉落 4 和 5，此事件的概率为 <code>pow(0.1,i-2)*0.3</code>。</p><p>第二种情况需要考虑是第几次掉落第四个装备，可能是第 2 指 <code>i-1</code> 次，同时再嵌套一次循环遍历所有可能。然后考虑单次循环内前三个掉落的前提下继续掉落前三个的情况需要持续几次，以及前四个掉落的前提下继续掉落前四个的情况需要持续几次，此事件的概率为 <code>pow(0.1,j-3)*0.6*pow(0.4,i-j)*0.6</code>。</p><p>需要注意的是，理论上足够非的话永远也凑不齐 5 件套，所以程序仅模拟一定的打怪次数。实际上，当放开次数到 40 次时，期望已经收敛至 3.222222222222156，也就是尽管存在后续凑齐套装的概率，也基本上对期望没什么影响了。</p><p>通过这种方法得到的期望和暴力模拟的期望基本上一致，预计此方法正确。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>以上就是本文关于两道有趣概率题的解法，方法或结果可能有误，或者存在其他更巧妙的解法，欢迎讨论。</p>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>Coding</tag>
      
      <tag>Python</tag>
      
      <tag>概率</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>注意力与工作效率——番茄钟的使用体验</title>
    <link href="/post/%E6%B3%A8%E6%84%8F%E5%8A%9B%E4%B8%8E%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E2%80%94%E2%80%94%E7%95%AA%E8%8C%84%E9%92%9F%E7%9A%84%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/"/>
    <url>/post/%E6%B3%A8%E6%84%8F%E5%8A%9B%E4%B8%8E%E5%B7%A5%E4%BD%9C%E6%95%88%E7%8E%87%E2%80%94%E2%80%94%E7%95%AA%E8%8C%84%E9%92%9F%E7%9A%84%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<p>成为社畜以来已经快一年时间了，由此说来还并没有写过关于工作方面的文章，特别是工作经验、方法论相关的总结。于是新开一个分类，专门记录工作总结、感想，复盘一些通用性的工作方法，同时激励自己坚持使用这些方法。</p><p>本篇文章从注意力角度出发，聊一聊如何在工作中提升注意力，不被各种闲杂的消息分散注意力，从而更高效地完成工作目标，<del>毕竟完成之后就可以毫无顾虑地愉快摸鱼了。</del></p><h2 id="注意力和精力"><a href="#注意力和精力" class="headerlink" title="注意力和精力"></a>注意力和精力</h2><p>注意本是一个医学&#x2F;心理学概念，</p><blockquote><p>是一种导致局部刺激的意识水平提高的知觉的选择性的集中。</p></blockquote><p>另外注意力的临床表现包含五个面向，但是这些解释与研究都太复杂抽象了。所以我更愿意用通俗一点的解释——人的心理活动指向和集中于某种事物的能力，不过大家也都心知肚明。</p><p>精力，类比于体力，一般我都理解为某种能量值，工作或者专注时会消耗能量值，休息时可以恢复能量值。精力和注意力密切相关，比如能量值高的时候可以有较高的注意力，而低能量时则集中注意力比较困难。</p><p>我们都知道集中注意力的时候可以快速推进任务的执行，提高工作效率。集中注意力的最大障碍是注意力的干扰，包含各种环境、事件、信息等的影响；另外注意自己的精力（能量值），也会改善自我对于注意力的控制。</p><h2 id="心流理论"><a href="#心流理论" class="headerlink" title="心流理论"></a>心流理论</h2><p>有关于注意力和精力有一个比较有名的理论——心流（Flow），大致说的是一种进入某种沉浸式状态从而忘记时间并且高度兴奋愉悦。</p><p>不过我个人感觉这一理论除了在游戏领域的应用外，大多只是对于专注力的另一套说法（所谓的噱头），有兴趣可以看看理论开创者的书<a href="https://book.douban.com/subject/27186106/">《心流：最优体验心理学》</a>。</p><h2 id="减少注意力的分散"><a href="#减少注意力的分散" class="headerlink" title="减少注意力的分散"></a>减少注意力的分散</h2><p>在讨论如何减少注意力分散的问题之前，首先要了解注意力被分散到了哪些地方。以下场景针对桌面办公场景，按照频率由高到低排序：</p><ol><li>被各种工作消息通知打断，包含聊天消息、电话&#x2F;视频&#x2F;现场会议、当面交流、突发任务等等。</li><li>浏览各种无关信息，包括刷手机、刷网页等。</li><li>想东想西，注意力的迷离，由工作内容主题偏离到比较边缘无关的方向。</li></ol><h3 id="有关信息干扰"><a href="#有关信息干扰" class="headerlink" title="有关信息干扰"></a>有关信息干扰</h3><p>针对第一种场景，工作避免不了交流，所以这种打断比较难解决，该中断的时候就必须要中断。所以主要的解决方案是在一天的工作计划中预设这些杂七杂八的事件，并在剩余的时间中专注完成今日的计划。</p><p>此外，屏蔽一些无关的聊天群消息通知，取消任务栏图标闪动（或者收进扩展栏隐藏图标），周期性地处理非紧急的聊天消息也是一种方法。</p><h3 id="无关信息干扰"><a href="#无关信息干扰" class="headerlink" title="无关信息干扰"></a>无关信息干扰</h3><p>第二种场景，大多数无关消息的浏览诱因是各种消息推送，包括手机的通知和桌面的通知。主要的解决方法就是主动屏蔽这些通知。比如我的手机基本上只允许即时通讯类应用发送通知，且各种聊天群该取消通知的都取消通知；办公软件因为在桌面可以看到消息推送，手机端也关了通知（下班时间也影响不到我，美滋滋）。桌面的消息推送设置同理，当然也可另外设置勿扰模式（专注助手），对通知权限、勿扰时间进行设置。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220412235745.png" alt="Win 11专注助手设置（虽然基本没什么通知所以我也懒得设置，甚至不开）"></p><p>至于刷网页，基本需要靠自制力去控制，通过设定一定的规则并去遵循实现，比如番茄工作法。</p><h3 id="思想迷离"><a href="#思想迷离" class="headerlink" title="思想迷离"></a>思想迷离</h3><p>第三种场景，对于我来说是最为艰难的一点。在大多数并无唯一正解的脑力工作中，思维的发散和收敛都是必须的过程，而这一过程非常容易走偏，不经意间就会陷入某个思维深渊并不知不觉地耗费时间。表面上看是专注了，实际上可能已经被各种打开的资料、记录的笔记等分散了注意力，导致产出的下降。</p><p>这一场景我一般通过工作计划+番茄钟的方式进行适当调整，主观感觉上有一定效果。</p><h2 id="恢复精力"><a href="#恢复精力" class="headerlink" title="恢复精力"></a>恢复精力</h2><p>最主要的还是要保证充足的休息时间，尤其是睡眠时间，大部分情况下需要保证每天必需的7-8个小时的晚上睡眠时间。此外，合适的午睡时间也可以让整个下午的工作时间中头脑更加清醒一些。</p><p>除去最为彻底的睡眠外，也可以在其他时间适当补充些精神放松方法以恢复精力，比如闭眼放空自己（发呆？冥想？）、轻娱乐消遣活动（水手机、刷网页、休闲游戏等）。</p><p>除了精神力需要放松外，肉体也需要放松。比如工作时间周期性地从工位上起来溜达一圈，和周围的同事聊聊天，活动一下筋骨，倒杯水等；非工作时间也可以低强度地锻炼锻炼，瑜伽、健身都是不错的选择。</p><p>最后也要痛斥一下加班文化，加班只是一种对紧急事件的特殊处理的措施。常态化的加班并不会提高工作效率，反而只会拉长工作周期，就更不用说带来的其他身体、情绪、热情、精力、个人成长方面的副作用了。</p><h2 id="番茄工作法"><a href="#番茄工作法" class="headerlink" title="番茄工作法"></a>番茄工作法</h2><p>番茄工作法（Pomodoro Technique）基本就是一种围绕减少注意力分散和恢复精力两个方面展开的时间管理方法。</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/3/34/Il_pomodoro.jpg" alt="厨房用番茄定时器"></p><p>简单来说，就是设定好一个最小工作周期（番茄钟），一个周期内包含工作时间和休息时间（一个标准的番茄钟包含25分钟工作时间和5分钟休息时间）。然后必须要遵循的规则就是在工作时间集中注意力工作，休息时间完全放松休息。</p><p>至于其他的，比如开始之前的工作计划设定，完成计划后增加休息时间，并用于复盘或是制定下一个计划，基本属于工作中都需要注意的点，按照自己的节奏来就行。</p><p>番茄工作法通过较短的时间周期（其实也可自定义拉长周期，工作时间：休息时间一般为5:1左右，差不多一个小时内有10-15分钟的休息），实现注意力和休息的平衡。</p><p>稍微需要的是休息时间不要过长，否则容易从「高速」的工作流中脱离出来，重新进入状态需要时间，反而降低了整体效率；另外「频繁+较长时间」的休息时间也会强烈压缩工作时间，可能时间真的就不够用了，工作一个小时休息二十分钟（工作时间：休息时间 &#x3D; 2:1）就有些「三天打鱼，两天晒网」的味道了。</p><p>整个番茄工作法与学校里的排课上课时间安排非常类似，相信这也是番茄工作法得到实际应用的有效验证。</p><h2 id="软件使用与心得"><a href="#软件使用与心得" class="headerlink" title="软件使用与心得"></a>软件使用与心得</h2><p>番茄工作法需要一个基本的工具进行辅助——定时器，用于在设定好的时间进行休息&#x2F;工作的消息提醒。这个定时器的名称一般也称为「番茄钟」。</p><h3 id="软件介绍"><a href="#软件介绍" class="headerlink" title="软件介绍"></a>软件介绍</h3><p>有关于番茄钟的软件应用很多，搜索「番茄钟」或「Pomodoro」即可。不过大多数番茄钟是基于手机平台的，本人大多数的工作基于桌面平台。所以对我而言，Windows平台的番茄钟应用是我的第一选择。</p><p>在一番搜索之后，我选择了Windows自带的「闹钟」应用，其在最近的更新中添加了「专注时段」的新功能，可以简单实现番茄钟的作用。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220420001733561.png" alt="时钟——专注时段"></p><p>应用非常简单，只要设定好一段时间并启动「专注时段」，系统就会开始倒计时模式，并在准确的时间点通过通知中心的弹窗提醒你该休息&#x2F;工作了。关于工作&#x2F;休息的时长可在设置中进行调整，我使用了默认的设置，工作时间自动，休息时间5分钟。自动模式下，一般工作时间会设定在20多分钟，随一开始设定的总专注周期而定。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220420002416407.png" alt="专注时段——倒计时模式"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220420004817996.png" alt="专注时段——消息通知"></p><p>右边的每日进度还可以统计你每天的专注时间段完成情况，在一定程度上培养起专注的习惯。虽然我自己这一模块用的不多，毕竟有其他的日报、周报等辅助完成工作目标。重要的不是究竟花了多少时间，而是完成了工作目标。</p><h3 id="使用心得"><a href="#使用心得" class="headerlink" title="使用心得"></a>使用心得</h3><p>具体的使用上，我会在周期启动前先设定好这一专注周期的总体目标，如果任务比较长则对任务进行拆解。由于一般的工作周期为3-4小时（上下午），除去一些准备时间、衔接时间等，我会将一个专注周期设定为2-3小时。在一个专注周期中，尽可能地完成任务目标。</p><p>当然，预估时间完全可能不准确，可能提早完成或是延期完成，在一个精确的专注周期中更是如此。所以番茄钟的作用对于我而言更多是一种规则束缚，提醒我不要走神并投入足够的时间和精力在工作中。若是提早完成任务，我会根据整体工作进度选择继续下一个计划或是适当的调整休息；若是当前任务未完成，我会在下一个周期中继续完成当前任务。</p><p>有了这么一种规则的约束，我可以感受到自己的工作时间的走神时间减少，比如自己随手刷起网页来会提醒自己还在工作时间而终止。另外，工作产出也得到有效提升，比如在写这篇文章的时候我对比了使用番茄钟和不使用番茄钟的效果，结果不使用番茄钟时产出大大降低。虽然没有严谨的对比实验，但主观上使用番茄钟给我带来了不小的帮助。</p><p>短短的5分钟休息时间，是一种良好的奖励措施，它会提醒我在工作时间保持专注，之后就可以好好休息。这种微不足道的「假想奖励」却实实在在有提升我的兴奋感和快乐感，大约确实有在促进多巴胺的产生。</p><p>一般休息时间的提醒一出 ，我会立刻闭眼后躺，放空大脑，大约持续1-2分钟。之后起身稍稍活动一下，喝点水，然后回到座位随便浏览下信息。等到专注时间的提醒出来，便重新回到专注状态。因为时间比较短，不必担心思路打断，很快就会回到状态，且专注精神的疲惫感也会有不少的缓解。</p><p>最后一个专注周期的结束时，我会心安理得地划水，并在划水满足后复盘任务执行情况并安排下一个专注周期（往往就推到下午或第二天了）。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>虽然番茄工作法最终依然要靠本人的自制力，但通过这种详细的时间规划和限制后，自制力可以比较现实地实行下来。所以如果你也有注意力和工作效率方面的困扰，不妨尝试一下使用番茄钟和番茄工作法。</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>工作</tag>
      
      <tag>软件</tag>
      
      <tag>教程</tag>
      
      <tag>效率</tag>
      
      <tag>番茄钟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>交互设计理论在游戏地图设计上的应用</title>
    <link href="/post/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA%E5%9C%A8%E6%B8%B8%E6%88%8F%E5%9C%B0%E5%9B%BE%E8%AE%BE%E8%AE%A1%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <url>/post/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA%E5%9C%A8%E6%B8%B8%E6%88%8F%E5%9C%B0%E5%9B%BE%E8%AE%BE%E8%AE%A1%E4%B8%8A%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>要说近两年哪种体裁类型的游戏拥有最高的话题度，我愿意把手中的一票投给开放世界。从17年《旷野之息》对于开放世界的新定义，到20年《原神》在手机游戏中做到的开放世界（以及友商不断出的开放世界手游竞品），再到22年刚出的《艾尔登法环》，和即将要出的《旷野之息》续作（写完此文跳票到23年了）。不得不说开放世界的话题度逐渐在扩张，连我身边从未玩过宫崎英高游戏的朋友们，最近也纷纷放下王者荣耀，疯狂沉迷于老头环的开放世界中，而且嘴里对于「开放世界」念念有词。</p><p>开放世界少不了地图和关卡的设计，有感于地图设计中的引导与信息设计、交互设计中信息流设计的一致性，突发奇想地尝试探索交互设计在地图设计中的应用，于是诞生此文。</p><p><em>声明：也许已经有其他相关研究了，但本文不是一篇研究综述，意在表达自己的观点。</em></p><h2 id="关于交互设计"><a href="#关于交互设计" class="headerlink" title="关于交互设计"></a>关于交互设计</h2><p>由于看这篇文章的应该没多少是交互设计师，所以还是有必要先介绍一下什么是交互设计。</p><p>其实交互设计的定义还挺多的，在这里我想先用一下交互设计行业鼻祖Alan Cooper在《交互设计精髓》中的解释：</p><blockquote><p>The practice of designing interactive digital products, environments, systems, and services.</p><p>对于交互式电子产品、环境、系统和服务的设计实践</p></blockquote><p>其实这个解释多多少少有些循环定义了，但是其明确表达了交互设计的对象——电子产品、环境、系统和服务。</p><p>再看一下另一个取得普遍认可的定义：</p><blockquote><p>定义、设计人造系统的行为的设计领域。</p></blockquote><p>这个定义把「交互设计」视作了一门学科，人造系统是对前面提到的四种对象做的总结，且提出了一个全新的概念「行为」，也即「交互设计」核心的研究内容——「用户行为」。其实「行为」这个词也是Cooper在交互设计解释后马上抛出的一个词：</p><blockquote><p>While interaction design has an interest in form (similar to other design fields), its main area of focus rests on behavior.</p><p>尽管交互设计和其他大多数设计学科一样关注形态，但交互设计的焦点是如何设计行为。</p></blockquote><p>而游戏地图，显然属于「环境」这一分支（也会包含一些「系统」）。在这里需要特别注意，<strong>虽然现阶段大多数电子游戏的交互方式都是围绕屏幕展开的，但本文讨论的并非基于屏幕的游戏交互设计，而是游戏内容——游戏地图上的交互设计</strong>。</p><p>游戏地图是一种对于真实环境的模拟（当然也有搭建在真实环境中的游戏），其<strong>对于用户（玩家）行为的设计在于引导用户去选择某些路径，触发某些游戏中的事件，这与交互设计的研究用户行为是完全一致的</strong>。所以，我们可以认为，交互设计研究的内容包含游戏中的地图设计，自然某些理论可以通用。</p><h2 id="交互设计理论"><a href="#交互设计理论" class="headerlink" title="交互设计理论"></a>交互设计理论</h2><p>谈起交互设计的理论，大致可以分为三个类别：</p><ol><li><p>底层的心智模型。基于一系列心理学研究及成果，分析用户的认知行为过程，从而让产品符合用户的心智模型。这一方面的理论比较多且相对零散，比较有名的有格式塔心理学原则、尼尔森可用性原则、马斯洛需求层次理论等。</p></li><li><p>交互设计方法论。包含构建团队、用户研究、设计实践等流程性质的方法论，比如《通用设计方法》之类。</p></li><li><p>细节的设计规律或标准。由于被用户逐渐习惯而产生的一系列设计细节的规范化处理标准，比如各类按钮、操作控件的标准与说明，iOS设计标准、Material Design标准等等。</p></li></ol><p>本文主要讨论第一个类别的理论在地图设计上的应用，不过由于理论很多，这里仅探讨尼尔森可用性原则。实际上，这十条原则基本包含大多数交互设计需要考虑的用户心理。</p><h2 id="尼尔森可用性原则"><a href="#尼尔森可用性原则" class="headerlink" title="尼尔森可用性原则"></a>尼尔森可用性原则</h2><p>尼尔森（Jakob Nielsen）是著名的人机交互专家&#x2F;（网页）可用性研究专家，他在上个世纪90年代提出的网页可用性原则至今至今依旧是交互设计师必备的理论基础。</p><p>其中最为著名的是尼尔森可用性十大原则：</p><ol><li><p>系统状态可见性（Visibility of system status）</p></li><li><p>系统与现实世界相匹配（Match between system and the real world）</p></li><li><p>用户控制与自由（User control and freedom）</p></li><li><p>一致性与标准化（Consistency and standards）</p></li><li><p>预防错误（Error prevention）</p></li><li><p>辨认而不是回忆（Recognition rather than recall）</p></li><li><p>灵活性与使用效率（Flexibility and efficiency of use）</p></li><li><p>好看而简洁的设计（Aesthetic and minimalist design）</p></li><li><p>帮助用户识别，诊断，并从错误中恢复（Help users recognize, diagnose, and recover from errors）</p></li><li><p>帮助与文档（Help and documentation）</p></li></ol><p>这里仅简单罗列原则名称，有需要详细解读和案例参考的读者可以自行搜索或查看以下文章：<a href="http://www.woshipm.com/pd/3159120.html">交互设计师必懂的尼尔森十大原则</a>。</p><h2 id="游戏地图中的交互行为"><a href="#游戏地图中的交互行为" class="headerlink" title="游戏地图中的交互行为"></a>游戏地图中的交互行为</h2><p>根据本人的游戏经验，暂且把游戏地图中的交互行为总结为以下三类：</p><ol><li><p>观察（看）。</p></li><li><p>位置操纵。</p></li><li><p>环境互动（交互）。</p></li></ol><p>观察即为从画面信息中获取信息，类似于在真实环境中的观察。不过根据游戏的类型与视角，游戏中的观察给予玩家更多的方式，比如2D游戏中常见的俯视图&#x2F;侧视图上帝视角，3D游戏中的常见的第一人称视角、第三人称视角或上帝视角。与传统界面交互相比，这条交互行为相当于用户对整个页面的元素进行观察。</p><p>位置操纵包含视角&#x2F;视域的操纵和角色的坐标操纵（如果有的话），绝大部分手柄左摇杆调整角色坐标，右摇杆调整视角；键鼠的话方向键（WASD）调整角色坐标，鼠标调整视角。2D游戏中可以上下左右位置移动，3D游戏中可以前后左右位置移动，以及包含飞行&#x2F;攀爬（或相似能力）的第三个维度的移动操纵。还有一个比较特殊的，从某个地点瞬移到另一个地点的传送。与传统界面交互相比，这条交互行为相当于把鼠标或手指移动到相应的位置（其实还有一种轨迹球鼠标，以及通过键盘对鼠标上下左右移动的精确控制，这与游戏中位置操纵可以说是一套交互形式）。</p><p>环境互动的具体形式则严格上不算在地图设计中了，但吸引用户触发环境互动属于地图设计的范畴。具体的环境交互形式千变万化，比如对话、触发事件、物理互动模拟、传送点等等，但本文不重点对这些交互形式进行讨论。与传统界面交互相比，这条交互行为相当于按钮等其他可操纵的控件。</p><p>整合以上三点，<strong>游戏地图的设计在于吸引玩家去关注地图中的某些元素，然后触发玩家移动角色&#x2F;视角从而触发相关环境互动；就好比界面交互设计在于吸引用户去关注界面中某些元素，然后触发玩家对某些元素进行交互操作</strong>。</p><h2 id="尼尔森可用性原则在游戏地图设计中的解读"><a href="#尼尔森可用性原则在游戏地图设计中的解读" class="headerlink" title="尼尔森可用性原则在游戏地图设计中的解读"></a>尼尔森可用性原则在游戏地图设计中的解读</h2><p>首先需要说明的是，尼尔森可用性原则的主要面向的是界面交互设计，相关理论的解读也有强针对性。相关理论不能直接硬搬到游戏地图设计中，而是应该考虑藏在十大原则背后的用户心理。本节将会结合一些游戏地图案例对十大原则进行解读。</p><h3 id="系统状态可见性"><a href="#系统状态可见性" class="headerlink" title="系统状态可见性"></a>系统状态可见性</h3><p>系统需要实时将自己的状态呈现给用户，特别是用户需要了解的内容，比如正常运行、操作中、执行完毕等。这里主要包含两个方面的状态：一是系统自运行产生的状态（及变化），二是系统与用户交互产生的状态（及变化）。这个原理反应的是用户对于刺激-反馈的需求，即用户需要系统的刺激以引起注意，并期待自己的操作得到系统的反馈。没有刺激系统无法吸引用户，没有反馈会让用户快速陷入焦虑进而失去对系统的兴趣。</p><p>这一点其实大多还是和具体的交互形式相关了，勉强和游戏地图有关的基本在于环境、场景的互动可视，比如天气系统、光线渲染等这些基本的场景渲染带来的地图视觉变化；以及某些高级的用户操作反馈（至少拾取物件后，原物件总不能还停留在原地吧）。</p><p>特别针对地图设计的——引导用户到达某个地方，需要有隐性的地图状态可见性，比如这个地方需要可见，或者去这个地方的路径需要可见。在这一点上，《旷野之息》可谓是教科书级别的示范了，比如在开启初始之塔后，系统就教玩家学会站在高处眺望远方，通过望远镜标记目的地，然后尝试到达目的地；以及地图中处处运用的「三角模型」，通过醒目标记吸引用户前往。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220324231840.png" alt="《旷野之息》望远镜标点"></p><p>此外，地图中一般少不了一个实时的状态信息——玩家的坐标信息。一般游戏都会配备一个小地图用于实时标注这个坐标状态，还会配备一个地图视图用于总览玩家在整个地图中的坐标，这其实也是一种状态可见性的良好设计。当然，不乏游戏提高难度，允许用户关闭这种小地图（或者就是头铁不做小地图）提高沉浸式体验，通过纯游戏内的指引，比如npc指路&#x2F;路标&#x2F;地点更换时区域提示+玩家记忆等形式达到认路的目的。</p><p>当用户熟悉整个地图后，小地图的作用确实会小一些，就好比我们在陌生的城市中总离不开导航和地图，但在熟悉的城市&#x2F;环境中不怎么使用地图软件一样。</p><h3 id="系统与现实环境相匹配"><a href="#系统与现实环境相匹配" class="headerlink" title="系统与现实环境相匹配"></a>系统与现实环境相匹配</h3><p>系统所呈现的内容与方式需要符合用户的认知模式。人类对于现实环境的认知是经过亿万年的进化的，短短几十年的电子界面去学习现实环境的模式，并与现实环境相匹配可以降低用户的认知难度。在界面交互设计中，这些内容与方式包含文案、图形等，十年之前的拟物化潮流是这一原则的良好体现；而在地图设计中，自然就是地图中的元素与现实环境符合了。</p><p>相比于界面设计，这一点上游戏存在天然的优势。大多数游戏本就是一种对于生活场景或是想象场景的模拟，本身就是对于物的再现，而且凭借优秀的游戏引擎就可以实现许多现实环境的模拟；而界面交互设计大多需要对动作等抽象的内容进行具象化。况且近年流行的扁平化风格让界面设计偏向于像抽象发展，而游戏中则依然保持拟物&#x2F;写实的风格，虽然在艺术风格上存在一定差异，但总是能够一眼就明白游戏中的元素所对应的现实元素。</p><p>具体到游戏地图中，路有路的样子（可以行走），水有水的样子（可能可以游泳），梯子有梯子的样子（看上去就可以攀爬、垂直移动，当然还有开放式的攀爬操作），障碍物有障碍物的样子（此路不通）……通过这些隐性的路径设计，再配合上小地图的明显的道路绘制，很容易引导玩家按照预设好的路径前进。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220327181405.png" alt="《TUNIC》中的道路/梯子/桥/障碍物"></p><p>除了游戏本身就设定好的地图路径外（含某种机关交互开启的隐藏路径），还有一种利用游戏自身的物理引擎提供的玩家自创式地图路径（多用于开放世界游戏）。虽然这种交互式地图多基于引擎的拟真能力，很难和传统的地图设计相联系，但游戏地图设计可以考虑基于引擎的能力设置路径解谜点。比较有名的有《原神》中的「凝冰渡海」，《旷野之息》中的「砍树铺路」。当然，这种交互形式也是与玩家们的认知相符的，指人们还是有在冰上行走，以及独木桥的经验的。若是没有这种认知前提，这种交互形式就难以被玩家自我发掘。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220327184550.png" alt="凝冰渡海去无人岛|砍树去时停神庙"></p><h3 id="用户控制与自由"><a href="#用户控制与自由" class="headerlink" title="用户控制与自由"></a>用户控制与自由</h3><p>这条原则在描述上可能不是非常准确，但一般指的是撤销和重做的机制。用户在操作过程中难免会发生各种误操作，撤销和重做则为用户提供一种「反悔」的功能，给予用户容错机会。若是没有撤销重做机制，用户一旦出现误操作就需要付出非常大的代价，也使得用户在日常操作中需要格外小心。另外，在文字、图像、视频编辑工作领域，撤销和重做机制也是提高工作效率的一大良器。至于具体的撤消重做的设计方法，也是一门挺深的学问，这里就不细说了。</p><p>在游戏中，撤消重做的机制一般都被存档机制代替了。但是存档的数量毕竟有限（就好比操作记录历史有上限），很难对玩家每一步的操作都存档处理并允许重载入。一般都是系统自动对关键点位存档，或者玩家自行存档。</p><p>在地图设计中可以考虑两种思路：</p><p>第一种是存档点在地图中，当玩家出现重大失误时（如死亡），可以在存档点重生，所以容错的设计落到了如何放置存档点的位置上。避免长流程&#x2F;路径的任务中途毫无存档点，然后一个失误完全从头开始。合理设计的存档点位，会是一种改善玩家体验的方法。</p><p>第二种是地图的可逆性，指用户进入一个新区域后可以无障碍回到上一个区域。这种思路其实和存档的原理是一致的，只不过无需通过存档的方式，而是玩家可以通过自行的行走操作回到上一个「存档点」。想象一下，任务指引着你走向前方，然后有一个陷阱把你传送到了任务起点，需要千辛万苦才能回到这个陷阱前，然后选择绕过这个陷阱。玩家会对这个陷阱血压飙升还是大加赞赏呢？</p><p><img src="https://i.ytimg.com/vi/S4VOSVtg_z0/maxresdefault.jpg" alt="「掘地求升」骑蛇名场面"></p><p>但是游戏是复杂的，比如上图游戏《Getting Over it with Bennett Foddy》中骑蛇的分支，瞬间回到起点，且游戏无存档机制。不能否认这款游戏的成功以及其在直播圈的火热，其核心的买点&#x2F;看点就是各种一不留神就回到起点。但这种反其道而行之的地图设计是非常有特殊性的，为了某些特殊的玩家（和大部分观众）而设计。在不是这种测血压的游戏中，还是按照正常的原则去设计地图容易留住玩家一些。</p><h3 id="一致性与标准化"><a href="#一致性与标准化" class="headerlink" title="一致性与标准化"></a>一致性与标准化</h3><p>对于同一个产品，或者同一个公司的系列产品，产品的信息架构、交互方式、功能名词、视觉表现等需要有一致性。而一致性往往由设计阶段的标准化来定义，比如定义色号、字体字号、按钮控件的大小和使用方法等。一致性的主要目的是减少用户的认知难度。对于一个新产品，用户都是需要学习和认知过程的，而一致性可以让用户在学习一次后就掌握，不用对相同的操作不断学习。</p><p>游戏地图中的一致性和标准化则一般是整体或区域美术风格的统一，和素材的复用。比如在一个区域内，植被、地形、生物等具有高度的相似性&#x2F;一致性；而在整体游戏层面角色行动模式、与环境的交互模式都遵循同一套规则。熟悉的素材会方便玩家对于地图的辨认，同时也有效降低了游戏资源制作耗费的精力。如果游戏地图足够大，可以按照区域或关卡设定不同风格的标准，避免完全雷同的素材使玩家审美疲劳。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220329000525.png" alt="《旷野之息》中的平原、雨林、雪地、火山、沙漠、海滩"></p><h3 id="预防错误"><a href="#预防错误" class="headerlink" title="预防错误"></a>预防错误</h3><p>这一原则与「用户控制与自由」中的容错原理有比较大的关系。虽然产品不能百分百保证用户发生误操作，但在交互设计上应该尽可能预防用户犯错。如果对两个原则进行优先级的排序，防错的优先级是排在容错之前的，而容错是「万一」之后的双保险。</p><p>但这一原则实际上在游戏地图设计中很难得到实际应用。首先预防错误对于地图引导而言本就是一个「伪命题」：</p><ul><li>在终点可见的情况下，很难将除标准答案（原始设计好的路径）的其他路径称为错误，玩家们可能正对各种不同的解法而津津乐道。</li><li>若是终点不可见，玩家不知道怎么走，这可能是「系统状态可见性」这一条上做法欠妥。</li><li>若是没有其他路径，玩家就只能按照游戏设计师的思路跑图，也就不会有什么错误的发生。</li><li>最后，游戏设计师可能会设置几条迷惑的（支线）路径，但这往往会增加游戏的乐趣和可玩性。可以说，游戏中的错误是被认可的，玩家在错误中学习成长本就是游戏的基本思路之一。</li></ul><p>所以，容错的机制让玩家再次尝试是更常用的方法。当然，「预防错误」也非完全无用，正如上面提到的第三点，限制路径数量对于新手教程&#x2F;新手村一类的教学关卡还是不错的选择，不仅可以完全避免错误，还能让玩家快速熟悉游戏的基础操作。</p><h3 id="辨认而不是回忆"><a href="#辨认而不是回忆" class="headerlink" title="辨认而不是回忆"></a>辨认而不是回忆</h3><p>尽可能提供给用户可选择的信息去辨认，而不是让用户去记住各种信息，从而减小用户的记忆负担。移动互联网逐渐将用户培养成「傻瓜」，只知道点点点&#x2F;刷刷刷，任何需要脑子的操作都被简化（搜索引擎正是这样没落的）。</p><p>大多数存在游戏地图设计的游戏并不属于这种「傻瓜式」产品，会不可避免地要求玩家去记忆、背板，但这条原则也并非完全无用。「系统与现实环境相匹配」原则就隐性表达了地图中的元素需要玩家可以快速辨认，一看就知道是什么&#x2F;怎么用，而不是看到之后还要回忆回忆怎么用；所以此原则并非让游戏的所有放弃「傻瓜式」操作，而是让玩家该记忆的内容好好去记忆，无需记忆的内容使用「傻瓜式」操作。</p><p>游戏地图本身存在大量的记忆要求——认路，这可能对于某些「路痴」玩家不怎么友好。地图设计师要明确当前的地图是为了增加玩家认路难度的「迷宫式地图」，还是其他正常地图。对于大多数正常地图而言，利用好「三角原则」和地图标志性建筑&#x2F;提醒&#x2F;元素可让玩家在远处快速辨认，不仅可以在首次发现时快速吸引玩家，也可在后续探索中帮助玩家确定自己的方位。</p><p><img src="https://assets.matters.news/processed/1080w/embed/46f87403-b34c-4347-9427-fa200551c2ec.webp" alt="《原神》中风起地的地标性大树"></p><h3 id="灵活性与使用效率"><a href="#灵活性与使用效率" class="headerlink" title="灵活性与使用效率"></a>灵活性与使用效率</h3><p>无论是新手还是老手，都能够轻松高效地使用产品。一般指的是拥有初学者教程的同时，也为老手准备了高效的快捷键。一个产品大多数的用户都处于一种中级用户的状态，初学者和专家只占很小的部分。所以在界面交互中保留的是适配给绝大多数的中级用户的界面，但这并不影响初学者和专家的体验——初次体验会有详细的教程引导，高级功能在用户进行细致探索后可主动学习（比如界面自定义、快捷键等）。</p><p>这一原则在游戏界面和内容交互上的应用十分明显，特别是高手熟练操作后各种秀操作，但要谈及地图设计就略微有点尴尬和死板。地图一旦设计好，并没有什么新手老手的区分。唯二可能有点关系的是赛车类游戏地图中的捷径，以及整体游戏设计上地图的复杂度的提升。而地图复杂度的变化是有限的，从最简单的常规地图，到复杂一些的单层迷宫，到最复杂的多层（嵌套）迷宫，一般游戏地图设计难度的可选性并不高（取而代之的往往是怪物难度）。另外，前面提到的小地图提示（新手模式）和隐藏（高手模式），虽然勉强和地图相关，但本质上是界面交互的体现。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220330222746.png" alt="《极品飞车9：最高通缉》赛道中的捷径"></p><h3 id="好看而简洁的设计"><a href="#好看而简洁的设计" class="headerlink" title="好看而简洁的设计"></a>好看而简洁的设计</h3><p>好看的概念是复杂且主观的，不同人对于好看的感觉不尽相同。本世纪的界面交互就经历过拟物化、扁平化、微立体+动效+多彩风格的转化。游戏也是充满各种美术风格，像素风、写实风、二次元风、赛博朋克等等，不同风格的美术会吸引相关喜好的用户，这里就不对「好看」展开讲述了。</p><p>简洁相对而言会有更加明确的标准，指的是界面内不要出现无关或冗余的信息，因为这些信息会分散用户的注意力。简洁的原则在桌面和移动端（尤其）的作用不必多言（但是最近移动端疯狂地为商业化加功能已经逐步背离这一原则），在游戏领域为了提升沉浸感也是非常重要。</p><p>游戏地图方面，简洁的定义就相对模糊了。界面中不必要的信息进行隐藏，可以使用留白的手法，但在地图中留白，只会增加地图的空洞感。动画监督可以对每一帧画面中的每一个元素进行安排，因而每一帧画面中的每一个元素都会有一定的意义。而地图也是如此，不能让任何一块地没有用，哪怕这块地是两个任务点之间的边界，也要做好交接地图的作用，也需要各种细节的处理。以上的解释也许符合「简洁」的目标，但表现上可能并不「简洁」，而是一种充实感。所以，相比于「简洁」，饱满而又清晰可能是地图设计更需要的准则。</p><h3 id="帮助用户识别，诊断，并从错误中恢复"><a href="#帮助用户识别，诊断，并从错误中恢复" class="headerlink" title="帮助用户识别，诊断，并从错误中恢复"></a>帮助用户识别，诊断，并从错误中恢复</h3><p>在容错、防错之后又一个和用户犯错有关的原则，虽然优先级低于防错，但也是一个必要的需求，因为用户不可能不犯错。在产品设计时，就需要考虑各种用户可能发生的错误，保证产品正常运行的同时告知用户错误的原因以及如何解决错误。</p><p>但是正如<a href="#%E9%A2%84%E9%98%B2%E9%94%99%E8%AF%AF">预防错误</a>所讲述的，错误对于地图设计是一个「伪命题」。用户可能在交互上犯错误，这个时候通过文字也好，语音也好（游戏自带一个向导不过分吧），去提示玩家就好，而这也不算在游戏地图设计范畴了。比如名梗——「前面的区域以后再来探索吧？」</p><p><img src="https://pic2.zhimg.com/v2-055758b0e33dfa786d3d45743d270a25_r.jpg" alt="前面的区域以后再来探索吧？——派蒙"></p><h3 id="帮助与文档"><a href="#帮助与文档" class="headerlink" title="帮助与文档"></a>帮助与文档</h3><p>帮助与文档是用户学习使用产品的最终手段，最优的方式是用户不通过教程就可轻松使用产品，但万一呢？帮助文档需要简洁清晰，步骤明确，方便用户查找，进而帮助用户解决问题。</p><p>游戏内同样需要帮助文档&#x2F;教程，优先级高的教程会集成于地图场景中进行操作，通过教学关卡实现，严格意义上是一种关卡设计（因为纯粹的地图能带来的游戏内容教学有限）。如何根据游戏具有的操作空间，设置合适的交互地图&#x2F;怪物，以及设计教学的路径顺序，都是这个关卡设计需要考虑的事情。</p><p>这里就不得不再次提到《旷野之息》中初始台地神一般的设计了（这是一张足够单开一篇文章好好谈谈的地图设计，如<a href="https://zhuanlan.zhihu.com/p/305025925">《塞尔达：荒野之息》初始台地设计研究</a>）。</p><p><img src="https://pic4.zhimg.com/80/v2-d9d4be17920a6917dc387a4d92de86c7_1440w.jpg" alt="初始台地地图"></p><p>另一种文档式的教程则集成于界面交互中，通过图文&#x2F;视频等进行帮助指导，不算地图设计范畴。</p><h2 id="地图设计实战"><a href="#地图设计实战" class="headerlink" title="地图设计实战"></a>地图设计实战</h2><p>前几天《原神》的「神巧天工」活动给了玩家一次关卡设计的机会，我也稍稍玩了一些玩家自制关卡。大致有以下几类：</p><ol><li><p>纯堆难度的机关阵。</p></li><li><p>真·非常简单的纯放松关卡。</p></li><li><p>利用一些游戏特性的解谜类关卡。</p></li><li><p>迷宫类关卡。</p></li></ol><p>这里要简单提一下迷宫，单层的迷宫可以用「右手定则」比较轻松的通关，多层迷宫也可通过穷举+记忆的方法去试错通关，比起迷宫本身的设计，迷宫的引导反而会重要一些，否则只是无尽的穷举。</p><p>大部分关卡体验下来基本都没有系统出的几个图可玩性高，但不乏良好第三方观赏&#x2F;调侃体验的图。当然我这里的评价也是比较主观的，玩家类型多样，也会追求不同类型地图的设计。而且官方出这么一个玩法，引起玩家的讨论热度，比玩家设计「可玩性高」的地图重要多了。</p><p>于是我也按照自己的游戏理解简单做了一个图，可惜没在活动结束前把这篇文章肝出来，所以只能看<a href="https://www.bilibili.com/video/BV1UU4y1o7eg">视频</a>了。</p><div style="position: relative; width: 100%;     padding-top: calc(100% * 720 / 1280); ">    <iframe src="//player.bilibili.com/player.html?aid=682202579&bvid=BV1UU4y1o7eg&cid=548638301&page=1"    style="position: absolute; width: 100%; height: 100%; top: 0;">    scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"</iframe></div><p>大致的制作思路就是：</p><ol><li>终点明确。（系统状态可见性）</li><li>足够的提示与引导。（系统状态可见性、预防错误、辨认而不是回忆、帮助与文档）</li><li>多种解法、逃课彩蛋。（灵活性与使用效率）</li><li>拒绝高血压。（用户控制与自由、帮助用户识别，诊断，并从错误中恢复）</li></ol><p>虽然部分系统级元素无法设计使得某些原理实现不了，但其他相关原理还是有好好使用的。不过还是因为承载上限加上迷宫制作时的内部视角问题，各种细节摆烂了，欢迎吐槽。</p><h2 id="局限性与总结"><a href="#局限性与总结" class="headerlink" title="局限性与总结"></a>局限性与总结</h2><p>虽然尼尔森可用性原则在地图设计上确实得到了某些验证，但不可忽略交互设计和游戏设计部分底层原理的冲突。其中最主要的一点是：<strong>交互设计大部分情况下是为了降低认知难度，简化用户操作流程，或者可以引导用户的某些操作；但游戏设计的目的主要是要让游戏好玩</strong>（当然你要说是赚钱我也不反对）。</p><p>「好玩」的定义是多样的，不同类型的玩家对于「好玩」的追求不一致，贴一个应用比较广的<a href="http://wiki.tanyu.mobi/doku.php/%E7%8E%A9%E5%AE%B6%E5%88%86%E7%B1%BB">玩家类型理论</a>。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20220515163934.png" alt="Bartle&#39;s character theory"></p><p>还有一个更广为人知的「心流」模型，意在游戏的挑战和玩家的技能间的平衡，否则玩家就会进入焦虑（太难）或无聊（太简单）的情绪状态，进而终止游戏。随着玩家时间的投入和技能的提升，游戏需要提高难度。此外，难度的提升也并非线性，而是一种曲线式的提升，使得玩家在焦虑、无聊的边缘反复横跳。</p><p><img src="https://s3.ifanr.com/wp-content/uploads/2017/11/Game_23.jpg" alt="「心流」模型"></p><p>以上种种理论都表达了游戏设计并非一味的像交互设计一样简化操作提高可用性从而提高用户体验，相反，复杂化（加难度）也是游戏设计必须考虑的要素。有关于地图设计的复杂化在<a href="#%E7%81%B5%E6%B4%BB%E6%80%A7%E4%B8%8E%E4%BD%BF%E7%94%A8%E6%95%88%E7%8E%87">灵活性与使用效率</a>、<a href="#%E9%A2%84%E9%98%B2%E9%94%99%E8%AF%AF">预防错误</a>中略有提到。</p><p>也许交互设计理论能够指导部分地图的设计，尤其是对于新手村地图；但后续地图的制作中，如何对目标进行隐藏、如何设置错误的引导（陷阱）等等也是必须的。</p>]]></content>
    
    
    <categories>
      
      <category>设计</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>游戏</tag>
      
      <tag>设计</tag>
      
      <tag>交互</tag>
      
      <tag>地图</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LeetCode No.3 Longest Substring Without Repeating Characters</title>
    <link href="/post/leetcode-no-3-longest-substring-without-repeating-characters/"/>
    <url>/post/leetcode-no-3-longest-substring-without-repeating-characters/</url>
    
    <content type="html"><![CDATA[<p>This is a test for post writing in English, as well as my writing skill practice. The test is to check the Google search data in Google Search Console for English posts.</p><p>I chose LeetCode problems for the test. Since I am not an expert in algorithm, I just show my solutions with explanations for the problems and do not pursue better performance. The series of the posts will be updated due to my personal interest if the problem attracts me, and more importantly, I am able to solve the problems 😛.</p><p>P.S. I use Python 3 in LeetCode.</p><h2 id="Problem-Description"><a href="#Problem-Description" class="headerlink" title="Problem Description"></a>Problem Description</h2><p>Check the original <a href="https://leetcode.com/problems/longest-substring-without-repeating-characters/">URL</a>:</p><blockquote><p>Given a string <code>s</code>, find the length of the <strong>longest substring</strong> without repeating characters.</p><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">Example <span class="hljs-number">1</span>:<br><br><span class="hljs-symbol">Input:</span> s = <span class="hljs-string">&quot;abcabcbb&quot;</span><br><span class="hljs-symbol">Output:</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">xplanation:</span> The answer <span class="hljs-built_in">is</span> <span class="hljs-string">&quot;abc&quot;</span>, <span class="hljs-keyword">with</span> the length <span class="hljs-keyword">of</span> <span class="hljs-number">3</span>.<br></code></pre></td></tr></table></figure><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vbnet">Example <span class="hljs-number">2</span>:<br><br><span class="hljs-symbol">Input:</span> s = <span class="hljs-string">&quot;bbbbb&quot;</span><br><span class="hljs-symbol">Output:</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">Explanation:</span> The answer <span class="hljs-built_in">is</span> <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-keyword">with</span> the length <span class="hljs-keyword">of</span> <span class="hljs-number">1</span>.<br></code></pre></td></tr></table></figure><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">Example <span class="hljs-number">3</span>:<br><br>Input: s = <span class="hljs-string">&quot;pwwkew&quot;</span><br>Output: <span class="hljs-number">3</span><br>Explanation: The answer is <span class="hljs-string">&quot;wke&quot;</span>, <span class="hljs-keyword">with</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">length</span> <span class="hljs-keyword">of</span> <span class="hljs-number">3.</span><br>Notice that <span class="hljs-keyword">the</span> answer must be <span class="hljs-keyword">a</span> substring, <span class="hljs-string">&quot;pwke&quot;</span> is <span class="hljs-keyword">a</span> subsequence <span class="hljs-keyword">and</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">a</span> substring.<br></code></pre></td></tr></table></figure><p><strong>Constraints:</strong></p><ul><li><code>0 &lt;= s.length &lt;= 5 * 104</code></li><li><code>s</code> consists of English letters, digits, symbols and spaces.</li></ul></blockquote><h2 id="My-Idea"><a href="#My-Idea" class="headerlink" title="My Idea"></a>My Idea</h2><p>The main idea is to read the items in the string one by one, meanwhile construct a new substring to store the read items. The length of the new substring should be counted as our goal is to find the maximum length.</p><p>Here comes to the duplicated items:</p><p>In the loop of item reading, if we find the newest item is duplicated in previous substring, we should update the substring to avoid duplication with trim the early used item. For example, if the previous substring is <code>***x***</code> (<code>*</code> is not <code>x</code>) and the newest item is <code>x</code>, then the previous 4 items should be trimmed and substring should be update to <code>***x</code>. So the method is to find the index of the duplicated item and complete the trim.</p><p>After all the items are read, return the maximum length of substrings.</p><h2 id="My-Code"><a href="#My-Code" class="headerlink" title="My Code"></a>My Code</h2><p>Here is my submitted code:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">lengthOfLongestSubstring</span>(<span class="hljs-params">self, s: <span class="hljs-built_in">str</span></span>) -&gt; <span class="hljs-built_in">int</span>:<br>        <span class="hljs-built_in">max</span> = <span class="hljs-number">0</span><br>        a = []<br>        count = <span class="hljs-number">0</span><br>        <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> s:<br>            <span class="hljs-keyword">if</span> item <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> a:<br>                a.append(item)<br>                count = count + <span class="hljs-number">1</span><br>                <span class="hljs-keyword">if</span> count &gt; <span class="hljs-built_in">max</span>:<br>                    <span class="hljs-built_in">max</span> = count<br>            <span class="hljs-keyword">else</span>:<br>                index = a.index(item)<br>                a = a[index + <span class="hljs-number">1</span>::]<br>                a.append(item)<br>                count = <span class="hljs-built_in">len</span>(a)<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">max</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Coding</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Algorithm</tag>
      
      <tag>Coding</tag>
      
      <tag>Python</tag>
      
      <tag>LeetCode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>聊一聊社交——可话App产品体验手记</title>
    <link href="/post/%E8%81%8A%E4%B8%80%E8%81%8A%E7%A4%BE%E4%BA%A4%E2%80%94%E2%80%94%E5%8F%AF%E8%AF%9Dapp%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C%E6%89%8B%E8%AE%B0/"/>
    <url>/post/%E8%81%8A%E4%B8%80%E8%81%8A%E7%A4%BE%E4%BA%A4%E2%80%94%E2%80%94%E5%8F%AF%E8%AF%9Dapp%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C%E6%89%8B%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>最近B站视频推送到了一条独特的广告——<a href="https://www.bilibili.com/video/BV1sR4y1s7Mb">可话App的广告</a>（到我写这篇文章的时候播放量已经快1千万了，看来应该是拉到了不少新用户）。看着这么一个有着沉稳而又不失一丝俏皮的男声配音，简单质朴而又透露着一丝可怜的推广视频，我还是稍稍有被吸引到（指产品本身）。所以抽空下载体验了一番，才不是因为对社交话题感兴趣呢（傲娇，其实只是偶尔需要新产品刺激灵感罢了）。</p><p><em>声明：</em></p><ol><li><em>本文不包含任何商业推广，毕竟我自己也没什么流量，而且厂商估计也没有预算做UGC推广。</em></li><li><em>没有什么竞品分析、数据分析，可能会随手比较一些同类产品但不会系统地比，相关产品也没有商业推广且不作脱敏处理。</em></li><li><em>只是一次核心功能的使用体验，而非测试，所以体验手记不会非常全面。</em></li><li><em>不分析商业模式</em>。</li><li><em>重个人使用主观感受，如有异议，你说得对。</em></li><li><em>封面来自官方另一个视频的封面，侵删。</em></li><li><em>使用平台与版本号：安卓 Version 1.7.6。</em></li></ol><h2 id="产品简介"><a href="#产品简介" class="headerlink" title="产品简介"></a>产品简介</h2><p>首先简单介绍一下「可话」，综合整理推广视频和自我使用后的信息。<strong>一句话概括：「可话」是一款以动态为匹配机制的陌生人社交App。</strong></p><p>其中包含三个关键词：<strong>动态</strong>、<strong>匹配</strong>、<strong>陌生人社交</strong>。</p><ul><li>动态：一条可包含图文的动态&#x2F;消息&#x2F;状态&#x2F;日记&#x2F;分享&#x2F;记录&#x2F;说说&#x2F;微博（或其他叫法）。</li><li>匹配：将两个动态进行关联。</li><li>陌生人社交：找到动态背后的人进行社交活动。</li></ul><p>稍微具体一点，该产品的主要功能就是——用户通过发布一条公开动态，匹配到内容含义差不多的别人的动态，然后可以点亮别人的动态获取到他人的信息并进行交流。</p><h2 id="核心功能梳理与体验"><a href="#核心功能梳理与体验" class="headerlink" title="核心功能梳理与体验"></a>核心功能梳理与体验</h2><p>虽然在简介中已经基本把核心功能介绍完了，但为了更清晰的展示功能流程，同时方便自己的整理，还是先上个图（虽然删了、弱化了不少分支）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/%E5%8F%AF%E8%AF%9D.svg" alt="核心功能流程图"></p><p><em>吐槽一下流程图的线性逻辑对于多方交互的弱表达，以及我强行把点亮别人和被别人点亮两个主被动视角整合在一张图里带来的复杂化。</em></p><h3 id="写动态"><a href="#写动态" class="headerlink" title="写动态"></a>写动态</h3><p>此功能是首页的主体或者说全部，核心功能的第一步。整个首页全部用于引导用户写动态，没什么多余功能。<del>还有一个隐藏功能——替换背景，可能是因为上方大量留白过于平淡，允许用户自定义背景图，同时支持浅色模式和深色模式。yysy，这个渐变的图片处理效果在首页视觉效果上还是过关的。</del></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/%E5%BE%AE%E4%BF%A1%E5%9B%BE%E7%89%87_20220216004426.jpg" alt="首页写动态"></p><p>至于动态的编辑功能，基本和朋友圈类似，支持图文&#x2F;纯文字。发布可支持公开或仅自己可见，若是仅自己可见，则中断后续的匹配流程。</p><p>正如广告视频介绍的一样，「可话」非常重视「单机」用户的体验，重视用户的表达与输出，这一方面类似日记类App。当然，「日记」完成后的处理又没有日记&#x2F;笔记类应用那样的分类明确，单单只是个时间线。若是纯「单机」用户，我建议还是选择日记类App或者本机，毕竟对于日记，数据安全可转移的需求会相对高一些。</p><h3 id="动态匹配（共鸣）"><a href="#动态匹配（共鸣）" class="headerlink" title="动态匹配（共鸣）"></a>动态匹配（共鸣）</h3><p>最为核心的功能，但是体验几乎可以用糟糕来形容了，总的来说有两大致命性问题：</p><ol><li>过长的寻找共鸣等待时间。</li><li>糟糕的共鸣匹配结果。</li></ol><h4 id="长长长长长的等待时间"><a href="#长长长长长的等待时间" class="headerlink" title="长长长长长的等待时间"></a>长长长长长的等待时间</h4><p>公开发布自己的动态后，主页会出现一个消息框，告诉用户正在寻找共鸣（匹配相关的动态）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220218001548382.png" alt="寻找共鸣中"></p><p>但是这个等待时间未免有些过于长了，虽然算法可能比较复杂，但是用户是经不起等待的。在交互设计中有一个关于用户等待时间的理论：</p><blockquote><ul><li>0.1 秒大约是让用户感觉到系统正在立即做出反应的极限，这意味着除了显示结果之外不需要任何特殊的反馈。</li><li>1.0 秒大约是用户思想流保持不间断的极限，即使用户会注意到延迟。正常情况下，大于 0.1 秒但小于 1.0 秒的延迟不需要特别的反馈，但用户确实失去了直接对数据进行操作的感觉。</li><li>10 秒大约是将用户的注意力集中在对话上的限制。对于更长的延迟，用户将希望在等待计算机完成的同时执行其他任务，因此应向他们提供反馈，指示计算机预计何时完成。如果响应时间可能变化很大，则延迟期间的反馈尤其重要，因为用户将不知道会发生什么。——《可用性工程》</li></ul></blockquote><p>虽然时间针对不同的时代可能不完全准确，但大致0.1s以内的等待完全不用使用加载动画；0.1-1s可以考虑添加加载动画转移用户觉察卡顿的注意力；秒级别的等待则必须添加加载动画防止用户焦虑；而10s以上的等待除了动画还需要实时告知具体的等待时间，让用户有大致的心里预估。</p><p>「可话」寻找共鸣的等待时间，没有一次让我有耐心等完，加上App内没有什么其他消磨时间的方法，所以我一般都退出App去干其他事情了，直到收到「可话」的共鸣寻找成功消息提醒。这个等待时长可能并不固定，但感官上没有小于5min的。甚至有一次因为没注意到消息推送，直至第二天再次打开App才发觉原来寻找到共鸣了。</p><h4 id="约1-x2F-5的合适共鸣寻找结果"><a href="#约1-x2F-5的合适共鸣寻找结果" class="headerlink" title="约1&#x2F;5的合适共鸣寻找结果"></a>约1&#x2F;5的合适共鸣寻找结果</h4><p>说来也怪，每次匹配到的共鸣结果都是6条，估计上限就是6条或者设定死为6条。不够6条就硬找，哪怕只有一个词语一致；达到6条就马上终止。</p><p>通过左右滑动可切换查看匹配到的共鸣。一般6条共鸣只有1到2条是满意的，无论你发的动态是文字还是图片或是图文并茂。相比于文字，我还是对图片的匹配结果满意一些：可能不能完全对上特定的人物，但图片的意象大多类似；至于文字，大部分情况下只有一到两个词语相同，在整体意义上基本没什么关联。</p><p>恰巧自己也是做过NLP的，虽然短文本的相似度算法确实让人头疼，但是你这个相似度的阈值是否设定的有点太低了？还是说，一旦往高了设，就匹配不到共鸣了？</p><p>6条的上限加上1&#x2F;5满意的结果，一次写动态差不多刚好可以得到一次能够引起「共鸣」的结果，也不知道是不是产品刚好这么盘算的。如果这恰好是一次合格的「共鸣」也就算了，可是后续的流程让仅有的一次「共鸣」机会也基本被浪费。</p><h3 id="点亮与交流"><a href="#点亮与交流" class="headerlink" title="点亮与交流"></a>点亮与交流</h3><p>点亮匹配到的动态是「可话」能够连接其他用户的唯一方法。</p><p><img src="https://is5-ssl.mzstatic.com/image/thumb/PurpleSource126/v4/31/cc/d2/31ccd2ab-0c86-4dca-1bff-5fc7b4913043/6f025b78-22df-4587-b354-25786bfc3328_2.png/600x0w.webp" alt="点亮后开启交流权限"></p><p>在常见的陌生人社交应用中，陌生人之间的匹配机制一直是一个创新的点，比如摇一摇（微信），照片的互相感兴趣（陌陌&#x2F;探探），随机连接一个想要对话的陌生人（Talk to someone），按照各种爱好、相似度匹配的高阶连接同时想要对话的陌生人（Soul、因乐会友），在同一模拟时空中的「面对面」交流（VRChat）……以及「可话」的对一个话题（动态）感兴趣。</p><p>可以看到陌生人社交的匹配机制着实有点越来越卷，不仅花式越来越多样，算法也越来越复杂。但万变不离其宗，匹配机制大都离不开两个核心点：<strong>同时性</strong>、<strong>互相感兴趣</strong>，二者至少包含一点。</p><p>「可话」的设计逻辑很好的符合这两个核心点，这也是其吸引我去试用的主要原因。其动态的相似度让用户会彼此感兴趣（至少针对同样的动态话题），而限定匹配只在此刻写动态的人生效则保证了同时性。对于话题而言，同时性的重要性则更上一层，特别是这种情绪流的输出，可能过个几小时就失去了讨论相关话题的时效性。所以朋友圈很早就出了三天可见的功能，对于这种情绪流时效性的挖掘，非常佩服微信的这种产品洞察。</p><h4 id="我是谁？我在哪儿？我怎么突然被点亮了？"><a href="#我是谁？我在哪儿？我怎么突然被点亮了？" class="headerlink" title="我是谁？我在哪儿？我怎么突然被点亮了？"></a>我是谁？我在哪儿？我怎么突然被点亮了？</h4><p>设计思路不错，可是执行的时候就。。。在实际使用中，最长在动态发出的两个星期后收到了被点亮的消息提醒。所以，这个同时性基本就成了噱头，再加上前面提到的匹配精确度的问题，所以实际上是两个核心点一个都没解决😂。</p><p>可以理解技术实现的难度，考虑到用户量和动态的特异性，也许确实存在大量无实时匹配结果的情况。所以牺牲同时性和准确度，让匹配起码有个结果实乃缓和之计，没有什么比匹配无结果更尴尬的事情了吧（似乎视频评论区就有这样的结果发生）。如果我是产品，我可能也会选择这样的处理方式。</p><p>但缓和归缓和，问题并没有解决。因为被匹配的那个人，可能动态的时效期已过，并不想与此刻想要交流的那个人交流。与之对应的实际情况就是：<strong>点亮的人回复了别人的动态，然后基本没什么回应；被点亮了的人看了一眼被点亮的消息，或者再进一步加了看了点亮人的消息和详情，然后懒得回复别人。</strong>所以，使用过程中经常遇到用户的抱怨——「遇到个活人可真不容易！」。</p><h4 id="非对称的交流行为"><a href="#非对称的交流行为" class="headerlink" title="非对称的交流行为"></a>非对称的交流行为</h4><p>有一个很有趣的小细节是对话列表开启的方式对于主动方和被动方是不一致的，这一点在流程图中特别使用了红色箭头进行标注。即点亮别人的用户需要回复动态才会保留对方的信息，若仅是点亮操作，退出匹配结果后将再也无法主动获取到对方的资料（除非下一次又遇到了同一个人）；而被点亮的用户则直接开启了对话列表，后续一直有机会联系点亮者。</p><p>这个非对称操作同样延续到个人中心页面——一个包含个人动态和点亮动态两个列表的页面。有关于个人的动态，将有机会查看点亮者；而对于自己点亮的动态，无权查看动态的所有者。</p><p>可以理解社交产品对于机遇的把控，创造一种「机不可失，时不再来」的体验，从而让用户谨慎操作，珍惜每一个遇到的人。但这一种逻辑应该同样应用到被动方——比如被点亮后有一个临时的聊天页面，若不回复则永久失去联系点亮者的机会（除非下次再遇到同一人），以及个人动态中也失去相应点亮者的信息获取方式。至于点亮者的数量，甚至点亮者的头像，自然可以保留，为的是满足动态被点亮（点赞）带来的认可和满足感。</p><p><img src="https://is4-ssl.mzstatic.com/image/thumb/PurpleSource126/v4/67/76/59/677659ce-5a4a-3c9f-2467-df290d924249/597602f6-8ed2-4ae3-9018-86fbe03778c5_3.png/600x0w.webp" alt="基于动态的消息列表"></p><h4 id="不鼓励私聊"><a href="#不鼓励私聊" class="headerlink" title="不鼓励私聊"></a>不鼓励私聊</h4><p>私聊功能藏得非常深，需要点开好友的个人中心页面，然后点击发消息才能开启；而点开好友页面至少需要通过点击动态+点击头像两步操作。如此深之又深的操作路径让人不禁感叹，这个App果然不想要用户私聊呢。</p><p>此外，私聊的消息列表不在底部导航栏占据独立页面，而是通过一个并不起眼的图标作为入口，这在IM应用中也是实属罕见。更者，私聊没有消息提醒（这一点已通过其他用户的描述进一步确认了，应该不是偶然遇到的bug）。</p><p>但这些其实都好理解，因为「可话」的重点在于对动态的构建（好友有新动态也会有醒目提醒），即便是私聊功能，也基本集成在动态之中。双方可以在同一条动态下（环境中）使用和私聊没什么区别的IM功能，而且私聊的环境背景容易让人根据同一话题去表达，算是一种引发聊天的催化剂。</p><h4 id="在陌生人社交软件中怎么能够不体验性转的魅力"><a href="#在陌生人社交软件中怎么能够不体验性转的魅力" class="headerlink" title="在陌生人社交软件中怎么能够不体验性转的魅力"></a>在陌生人社交软件中怎么能够不体验性转的魅力</h4><p>性别选项是陌生人社交避不开的一个话题，无论是账号设置、匹配机制都会考虑性别的因素。作为一个产品体验者，自然也是要体验一番不同性别的差异。好家伙，性转机会只给一次，和当年的Soul一致（如今下回Soul发现性别已经要经过身份认证了），且转且珍惜。</p><p>特意留意了一下匹配对方的性别，似乎是异性的概率高一点，（果然这个世界异性恋是主角捏，产品角度自然符合越多人的喜好越合适），当然自己的样本量少没什么说服力。</p><p>一开始体验了男性用户视角，留下的动态女用户点亮的多一点。加了一个女性用户好友，正常的聊了一聊产品相关的话题（我的动态比较多与产品本身相关了。。。），其他似乎没什么印象深刻的事发生。</p><p>后来体验女性用户视角，这下点亮动态的全是男用户了。印象里有一条动态说是想去上海玩，然后有不少用户回复「在上海等我」。特意观察了其中一个用户，他会不断删去旧动态然后新发一条「上海」二字的动态，然后匹配到上海相关的用户。hhh，原来这才是真正的玩法，通过输入地理位置信息匹配到附近的人，然后愿者上钩，果然社交软件都离不开ghs的动力，用户永远有办法找到有趣的玩法。然后还遇到一些一上来就似乎问家谱似的问一堆问题的用户，直接心烦意乱拉黑处理。再后来被点亮的时间越来越离谱，不断有很久前的动态被点亮，但就算有消息我也懒得回复了，于是这么一种「似乎大家都是死人」的现象就保留了下来。</p><p>总的来说，无论作为男性用户还是女性用户，似乎都不怎么容易匹配到人，并没有想象中的让人深入交流的机会与欲望。</p><h2 id="社交与反社交"><a href="#社交与反社交" class="headerlink" title="社交与反社交"></a>社交与反社交</h2><p>体验了那么多，那么「可话」到底想要做什么呢？也许不能百分百还原团队所想，但根据宣传视频和实际的产品体验，我想站在自己的角度（用户&amp;产品两个角度）回答这个问题。</p><p>「可话」自内而外地透露着非常严重的自我矛盾：</p><ul><li>主动与被动</li><li>开放与限制</li><li>输出与输入</li><li>社交与反社交</li></ul><p>以至于在写这篇文章的时候，我依然对于「社交」这个因素存疑。你说TA是社交吧，实际体验下来不怎么给社交的机会；你说TA不是社交吧，TA最核心的机制就是社交与匹配。TA在为一个想法的诞生而处处引入社交的概念，而又在引入社交后处处限制社交功能的拓展。</p><p>TA一反如今被信息流取代的「伪社交」模式，转而提供一种输出的机会。打个比方，用户就好像打着手电在漆黑的夜晚摸索，希望能够遇上另一个打着手电的人；这个手电很特殊，你只能看到和自己手电一样的对方打出的那束光芒，而且双方看到光芒之后都彼此相互迈出步子（突发奇想，把这个可视化做成匹配等待的交互动画如何？）。TA提供的是一种让人们可以在信息流的环境中喘息的机会，沉下心来好好想一想自己。</p><p>TA声称在培养互联网背景下人们正确发声的意识，但TA真的做到了吗？凡是社交性质的平台，越是早期越是边缘，发声越是让人舒适。一切都是历史的循环罢了？所以，「可话」想做的其实是一个新的循环的起点，至少现在还处于起点阶段。</p><h2 id="总结与展望"><a href="#总结与展望" class="headerlink" title="总结与展望"></a>总结与展望</h2><p>做下简单的总结：</p><ul><li>优点：有新颖的匹配机制。</li><li>缺点：匹配不到人。</li></ul><p>最后还是非常佩服「可话」团队能够逆着时代的潮流——指各种无限媒体流的刷刷刷形式，去做一个类似于搜索结果数量非常有限的搜索引擎的功能，TA真的一点刷刷刷的机会都不给。从桌面的搜索引擎为王，到移动的刷刷刷为王，如今鼓励主流用户思考、输出的模式越发少见。</p><p>希望「可话」可以在历史的进程中留下一些痕迹~</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>社交</tag>
      
      <tag>体验报告</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价《原神》2.5 版本新活动「三界路飨祭」？</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B2-5-%E7%89%88%E6%9C%AC%E6%96%B0%E6%B4%BB%E5%8A%A8%E3%80%8C%E4%B8%89%E7%95%8C%E8%B7%AF%E9%A3%A8%E7%A5%AD%E3%80%8D%EF%BC%9F/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B2-5-%E7%89%88%E6%9C%AC%E6%96%B0%E6%B4%BB%E5%8A%A8%E3%80%8C%E4%B8%89%E7%95%8C%E8%B7%AF%E9%A3%A8%E7%A5%AD%E3%80%8D%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p><strong>有没有这么一种可能，这是渊下宫的废案。</strong>在黑夜白天转化这一设计被提出来后的弃子。</p><p>两张地图，地图设计是一致的，但是关卡设计完全是两回事，存在不可调和的冲突，比如某些解谜的机关完全是两套思路。常驻地图额外增加了蛇肠之道，额外增加了从边缘到中间这一探索过程。<strong>其余两个地图的主线剧情都是从中心区域到周围三个区域的探索</strong>，活动额外加上了一个迷雾的设定。</p><p>虽然两个地图的关卡设计都挺优秀，但活动地图的关卡反而更像是一种为了开图而设计的思路，对于新手实在是太友善了。另一方面，对于在上一个版本刚把常驻地图翻遍了的玩家而言，反而有了那么一丝割裂感的不适，有些破环整个地图的设计的感觉。（深渊的家伙可真好心，给我送了一批新的宝箱和解谜机关。虽然这个问题通过文案或背景问题都可以解决。）</p><p>整体地图的评价不如去年暑假的金苹果岛。以及最最严重的问题，rpg 这方面着实该上上心了。当我和巫女对完话，发掘渊下宫发生异常，然后一头跳下入口之后，才发现自己进入了一个「正常的渊下宫」。以及异常的渊下宫需要另一个 npc 带着走过去，甚至屏幕一黑一行字「穿越了迷雾」到了中心岛。然后打开地图，哦，原来正常的图和异常的图，这俩图共存。</p><p>要是活动期间把常驻图删了不共存，我也不会萌生出废案这样的想法（虽然里面一些场景逻辑处理起来可能就麻烦了）。</p><p>开放世界的地图再利用，璃月的几次藏宝箱探索活动是一种不错的尝试；而如今这种发生变故，需要解决问题，在终点路上设置种种考验的 jrpg 模式是否是更合理的模式呢？虽然好像细想确实是这样的模式，但总感觉方向有了偏移，把线性的逻辑转成了开放式探索的逻辑。</p><hr><p><strong>补充：</strong></p><ol><li>什么是「废案」？</li></ol><p>「废案」只不过是在方案抉择的时候由于各种原因没被选上的众多方案中的称呼，没有什么贬义，再常见不过了。我自己都不知道产出多少「废案」了，「废案」再利用本身也是一种节省资源的方式。</p><ol start="2"><li>龙蜥 boss 材料怎么办？</li></ol><p>通过主线之后 boss 可挑战（就和海岛限时图最后可挑战剑鬼一样），加个发生事变 boss 收到干扰暂时无法挑战的设定即可。这一方法可以类推到其他关卡设计，其实在鹤观同一地点不同时间刷新不同的怪已经差不多实现了。</p><hr><p><strong>调酒活动更新：</strong></p><p>又是一个更改大世界事件的活动，只不过本次区域限制在小小的酒馆之中。其实本次活动 rpg 成分反而做得很好，比如强制切成主角视角的单人世界自由活动模式。</p><p>只可惜当我正常进入酒馆时（不通过 npc），还是原来那个大世界的酒馆，而本次活动的酒馆是另一个平行世界。看来「大世界变动」这种模式真是有什么技术难题呢，明明之前的蒙德璃月节日就没有平行世界一说。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Scoop——也许是Windows平台最好用的软件（包）管理器</title>
    <link href="/post/scoop%E2%80%94%E2%80%94%E4%B9%9F%E8%AE%B8%E6%98%AFwindows%E5%B9%B3%E5%8F%B0%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%EF%BC%88%E5%8C%85%EF%BC%89%E7%AE%A1%E7%90%86%E5%99%A8/"/>
    <url>/post/scoop%E2%80%94%E2%80%94%E4%B9%9F%E8%AE%B8%E6%98%AFwindows%E5%B9%B3%E5%8F%B0%E6%9C%80%E5%A5%BD%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%EF%BC%88%E5%8C%85%EF%BC%89%E7%AE%A1%E7%90%86%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>当我们谈论起Windows平台软件安装的话题，总是避免不了想起被各种流氓软件和捆绑安装支配的日子。这背后的原因，一方面是软件厂商的流氓，各种强行捆绑而且默认勾选；另一方面是搜索引擎的流氓，搜索软件出来的第一个永远是xx软件园而非官方平台，一个不留神就是各种全家桶伺候。</p><p>解决这一软件生态问题的故事自然离不开苹果的应用商店，无论是IOS的App Store还是macOS的Mac App Store。把各种软件的分发和下载规范化，让用户使用上安全稳定的软件，一方面满足用户对于软件的管理需求，一方面也为应用商店增加营收入口。</p><p>所谓平台概念，就是如此。当然这一应用商店模式，也拓展到各大操作系统，比如移动端另一大阵营安卓的Google Play及国内本地化的各大应用商城，Windows的Microsoft Store (曾用名Windows Store)，以及Linux许多发行版的应用商店等等。</p><h2 id="软件管理的需求"><a href="#软件管理的需求" class="headerlink" title="软件管理的需求"></a>软件管理的需求</h2><p>回顾一下软件管理的需求，然后判断当前的软件管理模式是否满足需求（不感兴趣的读者请直接跳过）。</p><h3 id="基本需求"><a href="#基本需求" class="headerlink" title="基本需求"></a>基本需求</h3><ul><li>查看已安装软件的名称、信息、状态等。</li><li>浏览与搜索想要的软件，这背后是足够丰富的软件生态链的支持，即我想要什么基本都可是找到。</li><li>安装目标软件。</li><li>了解已安装软件是否可更新，软件更新的主要功能说明，并可选择更新软件。</li><li>卸载不需要的软件。</li></ul><h3 id="高级需求"><a href="#高级需求" class="headerlink" title="高级需求"></a>高级需求</h3><ul><li>回滚版本或安装特定版本：某些软件更新后导致负体验的背景下产生该需求。</li><li>锁定版本：为维持软件及其他相关环境的稳定性，更新为非必要需求，或者纯粹不想更新某软件，需要锁定软件版本，防止更新。</li><li>用户数据的清理：强迫症患者需求，一般这个功能会交给各种清理软件，但是谁会比软件自己的开发者更了解产生并储存了哪些用户数据呢？更有一些软件因为卸载后的残留问题导致下次安装时的各种问题就属于软件本身的问题了，这里也不多探讨。</li><li>软件备份与迁移：当有多设备，或者某次重装系统，需要重新安装各种常用软件是一件头疼的事，所以当前设备软件的导出备份与迁移安装至新设备是一大需求，特别是对于某些装系统人员或者运维人员。</li></ul><h3 id="需求满足度"><a href="#需求满足度" class="headerlink" title="需求满足度"></a>需求满足度</h3><p>基本需求方面，大多数需求是满足了的，只不过并没有那么的切合。</p><ul><li>绝大多数应用商店的目的是盈利，所以什么推送、广告、排名等一系列手段玩得相当成熟。至于真正为用户推送「好」软件，那大概需要某些第三方非盈利平台了。还有如果整个应用商店的设计中心是在推广软件的话，其他方面的功能需求就被稀释或者淡化，甚至造成负体验。</li><li>对于已安装软件&#x2F;应用的管理（查看已安装与卸载），大部分应用商店并不支持，而是把相关需求移交给了系统层级的应用管理，或者直接在桌面&#x2F;开始菜单&#x2F;Launchpad里的图标上进行右键管理或者长按操作管理。</li><li>高级需求基本都没怎么实现，往往需要通过备份系统镜像的方式曲线救国。手机方面应用云同步相对做的好一些，只是用户数据备份方面还没到应用层（除开相册、日程、通讯录之类）。</li></ul><h2 id="Scoop的基本介绍"><a href="#Scoop的基本介绍" class="headerlink" title="Scoop的基本介绍"></a>Scoop的基本介绍</h2><p>Scoop是一款适用于Windows平台的命令行软件（包）管理工具，这里是<a href="https://github.com/ScoopInstaller/Scoop">GitHub介绍页</a>。简单来说，就是可以通过命令行工具（PowerShell、CMD等）实现软件（包）的安装管理等需求，<strong>通过简单的一行代码实现软件的下载、安装、卸载、更新等操作</strong>。其灵感来源于macOS的<a href="https://github.com/Homebrew/brew">Homebrew</a>，Mac用户可以去了解了解。</p><p>当然如果用过Linux系统，使用apt-get工具安装过软件，或者用过Python，知道pip工具用于管理Python各种依赖包，那么理解Scoop就比较容易，这些工具的设计理念与使用方法都非常类似。</p><p>Scoop一般用来管理绿色软件，即是一种通过解压压缩包即可就地使用的软件，对于比较专业软件（比如Office、Adobe等）支持不好（虽然有大神在自制这样的第三方仓库，不过好像一直没实现）。</p><h3 id="一些软件知识补充"><a href="#一些软件知识补充" class="headerlink" title="一些软件知识补充"></a>一些软件知识补充</h3><p>一般软件包含三种数据：</p><ol><li>软件本体数据，维持软件正常运行。</li><li>软件与用户交互的数据，为了让用户更好的使用软件，比如缓存文件、自定义配置文件、日志文件等。</li><li>用户通过软件创造的直接面向用户的数据，比如各类文档。</li></ol><p>用户在安装软件的时候，一般仅能自定义软件的安装目录（有一些甚至不能自定义），而无权管理软件与用户交互产生的数据的目录，至于第三类数据大家都很熟悉属于用户完全操纵。其中用户无法直接管理的第二类数据一般储存在「AppData」隐藏目录中，强迫症流泪。</p><h3 id="Scoop的软件管理逻辑"><a href="#Scoop的软件管理逻辑" class="headerlink" title="Scoop的软件管理逻辑"></a>Scoop的软件管理逻辑</h3><p>而对于Scoop来说，其数据存储逻辑是先划好一块地盘——「Scoop」根目录，然后软件本体一个「apps」目录，用户数据一个「persist」目录。当然实际使用过程中，其实有挺多第三方仓库中的软件没有实现这一逻辑，依然把用户数据藏在「AppData」目录中，这就是需要优化的后话了。</p><p>由于一眼就爱上了这么一种软件管理逻辑，所以就一直使用Scoop至今，已有两三年了吧，期间换过不少Windows机子也一直使用着，觉着甚是方便。所以，如今来写篇教程也不过分吧。</p><h2 id="Scoop基本使用教程"><a href="#Scoop基本使用教程" class="headerlink" title="Scoop基本使用教程"></a>Scoop基本使用教程</h2><p>下面就是正式的教程时间，我会从前置条件、Scoop的安装、常用的命令工具、推荐软件仓库四个方向介绍主要的用法。</p><h3 id="Scoop安装前置条件"><a href="#Scoop安装前置条件" class="headerlink" title="Scoop安装前置条件"></a>Scoop安装前置条件</h3><p>根据官方的条件要求，你需要：</p><ol><li>Windows 7 SP1+或Windows Server 2008+（当然你用主流的Windows 10或Windows 11更没有什么问题）。</li><li><a href="https://www.microsoft.com/en-us/download/details.aspx?id=54616">PowerShell 5</a>（及以上，包含<a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.2&viewFallbackFrom=powershell-6">PowerShell Core</a>）和<a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-on-windows?view=powershell-7.2&viewFallbackFrom=powershell-6">.NET Framework 4.5</a>（及以上）（当然我相信读者朋友们肯定都满足了，实在未满足可通过文本链接前去下载）。</li></ol><p>还有两个中国用户需要确认的额外的条件（当然我觉得你能看到这篇文章自然也都满足了）：</p><ol><li>由于众所周知的天朝网络原因，你需要能够正常访问GitHub并下载其资源。</li><li>由于环境变量中文路径的支持问题，你的Windows用户名或自定义的安装路径不得包含中文。</li></ol><h3 id="Scoop工具的安装"><a href="#Scoop工具的安装" class="headerlink" title="Scoop工具的安装"></a>Scoop工具的安装</h3><p>第一步，也是最重要的一步，就是先完成Scoop工具的安装。按照官方的教程，我们需要打开PowerShell（这个应该不用教了吧，当然我强烈建议使用新一代终端Windows Terminal，标签页、多种命令行工具多开、高颜值、更人性化的文本编辑等等太香了）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220130144340046.png" alt="Windows Terminal"></p><h4 id="设置PowerShell权限"><a href="#设置PowerShell权限" class="headerlink" title="设置PowerShell权限"></a>设置PowerShell权限</h4><p>为了让PowerShell可以执行脚本，首先需要设置PowerShell执行策略，通过输入以下命令<code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser</code>即可。（如果之前已开启，可忽略。）</p><h4 id="安装Scoop"><a href="#安装Scoop" class="headerlink" title="安装Scoop"></a>安装Scoop</h4><p>通过以下命令，可以将Scoop安装到默认目录（<code>C:\Users\&lt;username&gt;\scoop</code>）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">Invoke-Expression</span> (<span class="hljs-built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="hljs-string">&#x27;https://get.scoop.sh&#x27;</span>)<br></code></pre></td></tr></table></figure><p>或者另一条更短的命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">iwr</span> <span class="hljs-literal">-useb</span> get.scoop.sh | <span class="hljs-built_in">iex</span><br></code></pre></td></tr></table></figure><p>如果你需要更改默认的安装目录，则需要在执行以上命令前添加环境变量的定义，通过执行以下命令完成：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$env:SCOOP</span>=<span class="hljs-string">&#x27;D:\Applications\Scoop&#x27;</span><br>[<span class="hljs-type">Environment</span>]::SetEnvironmentVariable(<span class="hljs-string">&#x27;SCOOP&#x27;</span>, <span class="hljs-variable">$env:SCOOP</span>, <span class="hljs-string">&#x27;User&#x27;</span>)<br></code></pre></td></tr></table></figure><p>其中目录<code>D:\Applications\Scoop</code>可根据自己的情况修改。</p><p>完成之后，相应位置就会生成一个scoop文件夹，如图所示：</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220130151538522.png" alt="scoop文件夹示意"></p><p>简单解释下子目录中其他文件夹的含义：</p><ul><li>apps——所有通过scoop安装的软件都在里面。</li><li>buckets——管理软件的仓库，用于记录哪些软件可以安装、更新等信息，默认添加<code>main</code>仓库，主要包含无需GUI的软件，可手动添加其他仓库或自建仓库，具体在<a href="#%E6%8E%A8%E8%8D%90%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93">推荐软件仓库</a>中介绍。</li><li>cache——软件下载后安装包暂存目录。</li><li>persit——用于储存一些用户数据，不会随软件更新而替换。</li><li>shims——用于软链接应用，使应用之间不会互相干扰，实际使用过程中无用户操作不必细究。</li></ul><h4 id="中国用户专享"><a href="#中国用户专享" class="headerlink" title="中国用户专享"></a>中国用户专享</h4><p>如果你访问GitHub有问题，或下载其中的资源有问题，可尝试以下方法：</p><ol><li>设置Scoop代理。在命令行中输入（PowerShell或者CMD中都行）<code>scoop config proxy 127.0.0.1:7890</code>（一看就是clash用户）让scoop网络连接走代理，后面的ip地址和端口根据自己的代理设置。</li><li>使用<a href="https://gitee.com/squallliu/scoop">Gitee镜像源</a>。可能备份更新得不是那么勤快，以及实际下载软件包同样会有网络问题，所以不推荐。在命令行中输入<code>scoop config SCOOP_REPO https://gitee.com/squallliu/scoop</code>修改仓库源的地址。</li></ol><p>（或者更直接点，找到Scoop配置文件，路径<code>C:\Users\username\.config\scoop\config.json</code>，然后直接修改里面的配置，如下图：</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20220130155909588.png" alt="Scoop配置文件">)</p><h3 id="Scoop常用命令"><a href="#Scoop常用命令" class="headerlink" title="Scoop常用命令"></a>Scoop常用命令</h3><p>Scoop的操作命令十分简单，基本结构是<code>scoop + 动词 + 对象</code>，动词就是一个操作动作，如安装、卸载，对象一般就是软件名了（支持通配符*操作），当然这需要你先打开命令行工具。比如我想安装typora，通过输入<code>scoop install typora</code>即可自动完成软件的官网进入+下载+安装等操作。</p><p>以下是一些常用的命令说明：</p><ul><li>search——搜索仓库中是否有相应软件。</li><li>install——安装软件。</li><li>uninstall——卸载软件。</li><li>update——更新软件。可通过<code>scoop update *</code>更新所有已安装软件，或通过<code>scoop update</code>更新所有软件仓库资料及Scoop自身而不更新软件。</li><li>hold——锁定软件阻止其更新。</li><li>info——查询软件简要信息。</li><li>home——打开浏览器进入软件官网。</li></ul><p>如果忘记了，可通过输入<code>scoop help</code>来查询语法，以及更多不怎么常用的操作指导。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\skeathy&gt;scoop help<br>Usage: scoop &lt;command&gt; [&lt;<span class="hljs-type">args</span>&gt;]<br><br>Some useful commands are:<br><br>alias       Manage scoop aliases<br>bucket      Manage Scoop buckets<br>cache       Show or <span class="hljs-built_in">clear</span> the download cache<br><span class="hljs-built_in">cat</span>         Show content of specified manifest.<br>checkup     Check <span class="hljs-keyword">for</span> potential problems<br>cleanup     Cleanup apps by removing old versions<br>config      Get or <span class="hljs-built_in">set</span> configuration values<br>create      Create a custom app manifest<br>depends     List dependencies <span class="hljs-keyword">for</span> an app<br>export      Exports (an importable) list of installed apps<br>help        Show help <span class="hljs-keyword">for</span> a command<br>hold        Hold an app to disable updates<br>home        Opens the app homepage<br>info        Display information about an app<br>install     Install apps<br>list        List installed apps<br>prefix      Returns the path to the specified app<br>reset       Reset an app to resolve conflicts<br>search      Search available apps<br>status      Show status and check <span class="hljs-keyword">for</span> new app versions<br>unhold      Unhold an app to enable updates<br>uninstall   Uninstall an app<br>update      Update apps, or Scoop itself<br>virustotal  Look <span class="hljs-keyword">for</span> app<span class="hljs-string">&#x27;s hash on virustotal.com</span><br><span class="hljs-string">which       Locate a shim/executable (similar to &#x27;</span>which<span class="hljs-string">&#x27; on Linux)</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">Type &#x27;</span>scoop help &lt;command&gt;<span class="hljs-string">&#x27; to get help for a specific command.</span><br></code></pre></td></tr></table></figure><p>在实际使用过程中，我们可以先通过<code>search</code>命令查询一下是否有相应软件，软件名称是否正确，然后通过<code>install</code>命令完成软件的安装。另外，有两个必备的软件需要安装——git和7zip，建议完成Scoop安装后先执行以下命令：<code>scoop install git 7zip</code>（没错，Scoop支持多个软件同时依次安装），虽然后续操作中未安装这两个软件时也会提醒用户安装就是了。</p><h3 id="推荐软件仓库"><a href="#推荐软件仓库" class="headerlink" title="推荐软件仓库"></a>推荐软件仓库</h3><p>软件仓库是Scoop软件管理的重要基础，通过json文件记录仓库中每一个软件的信息，从而实现软件的管理等便捷命令行操作，并由仓库管理员（其实开源项目都是大家用爱发电）负责软件信息的更新。</p><p>前面提到，默认安装Scoop后仅有<code>main</code>仓库，其中主要是面向程序员的工具，对于一般用户而言并不是那么实用。好在Scoop本身考虑到了这一点，添加了面向一般用户的软件仓库<code>extras</code>，其中收录大量好用的小软件，足够日常的使用。</p><p>Scoop添加软件仓库的命令是<code>scoop bucket add bucketname (+ url可选)</code>。如添加<code>extras</code>的命令是<code>scoop bucket add extras</code>，执行此命令后会在scoop文件夹中的buckets子文件夹中添加extras文件夹。</p><p>此外，Scoop官方还有一些仓库可供使用，本人没有什么需求就不在此处介绍了，仅贴一下官方的介绍：</p><blockquote><ul><li><a href="https://github.com/ScoopInstaller/Main">main</a> - Default bucket for the most common (mostly CLI) apps</li><li><a href="https://github.com/ScoopInstaller/Extras">extras</a> - Apps that don’t fit the main bucket’s <a href="https://github.com/ScoopInstaller/Scoop/wiki/Criteria-for-including-apps-in-the-main-bucket">criteria</a></li><li><a href="https://github.com/Calinou/scoop-games">games</a> - Open source&#x2F;freeware games and game-related tools</li><li><a href="https://github.com/matthewjberger/scoop-nerd-fonts">nerd-fonts</a> - Nerd Fonts</li><li><a href="https://github.com/kodybrown/scoop-nirsoft">nirsoft</a> - Almost all of the <a href="https://rasa.github.io/scoop-directory/by-apps#kodybrown_scoop-nirsoft">250+</a> apps from <a href="https://nirsoft.net/">Nirsoft</a></li><li><a href="https://github.com/ScoopInstaller/Java">java</a> - A collection of Java development kits (JDKs), Java runtime engines (JREs), Java’s virtual machine debugging tools and Java based runtime engines.</li><li><a href="https://github.com/TheRandomLabs/scoop-nonportable">nonportable</a> - Non-portable apps (may require UAC)</li><li><a href="https://github.com/ScoopInstaller/PHP">php</a> - Installers for most versions of PHP</li><li><a href="https://github.com/ScoopInstaller/Versions">versions</a> - Alternative versions of apps found in other buckets</li></ul></blockquote><p>除了官方的软件仓库，Scoop也支持用户自建仓库并共享，于是又有很多大佬提供了许多好用的软件仓库。这里强推<a href="https://github.com/chawyehsu/dorado">dorado</a>仓库，里面有许多适合中国用户的软件，或者你有兴趣可以去看看仓库作者<a href="https://chawyehsu.com/blog/talk-about-scoop-the-package-manager-for-windows-again">关于Scoop更多技术方面的探讨</a>。添加<code>dorado</code>仓库的命令如下：<code>scoop bucket add dorado https://github.com/chawyehsu/dorado</code>。</p><p>此外，若多个仓库间的软件名称冲突，可以通过在软件名前添加仓库名的方式避免冲突，如<code>scoop install dorado/appname</code>。</p><p>最后，分享一下自己的软件列表：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs powershell">C:\Users\skeathy&gt;scoop list<br>Installed apps:<br><br>  <span class="hljs-number">7</span>zip <span class="hljs-number">21.07</span> [<span class="hljs-type">main</span>]<br>  aria2 <span class="hljs-number">1.36</span>.<span class="hljs-number">0</span><span class="hljs-literal">-1</span> [<span class="hljs-type">main</span>]<br>  captura <span class="hljs-number">8.0</span>.<span class="hljs-number">0</span> [<span class="hljs-type">extras</span>]<br>  ccleaner <span class="hljs-number">5.89</span>.<span class="hljs-number">9401</span> [<span class="hljs-type">extras</span>]<br>  clash<span class="hljs-literal">-for-windows</span> <span class="hljs-number">0.19</span>.<span class="hljs-number">7</span> [<span class="hljs-type">dorado</span>]<br>  dark <span class="hljs-number">3.11</span>.<span class="hljs-number">2</span> [<span class="hljs-type">main</span>]<br>  dingtalk <span class="hljs-number">6.3</span>.<span class="hljs-number">25.1219101</span> [<span class="hljs-type">dorado</span>]<br>  dismplusplus <span class="hljs-number">10.1</span>.<span class="hljs-number">1002.1</span> [<span class="hljs-type">extras</span>]<br>  draw.io <span class="hljs-number">16.5</span>.<span class="hljs-number">1</span> [<span class="hljs-type">extras</span>]<br>  ffmpeg <span class="hljs-number">5.0</span> [<span class="hljs-type">main</span>]<br>  git <span class="hljs-number">2.35</span>.<span class="hljs-number">0</span>.windows.<span class="hljs-number">1</span> [<span class="hljs-type">main</span>]<br>  github <span class="hljs-number">2.9</span>.<span class="hljs-number">6</span> [<span class="hljs-type">extras</span>]<br>  gridea <span class="hljs-number">0.9</span>.<span class="hljs-number">2</span> [<span class="hljs-type">extras</span>]<br>  innounp <span class="hljs-number">0.50</span> [<span class="hljs-type">main</span>]<br>  lessmsi <span class="hljs-number">1.10</span>.<span class="hljs-number">0</span> [<span class="hljs-type">main</span>]<br>  marktext <span class="hljs-number">0.16</span>.<span class="hljs-number">3</span> [<span class="hljs-type">extras</span>]<br>  neteasemusic <span class="hljs-number">2.9</span>.<span class="hljs-number">6.199543</span> [<span class="hljs-type">dorado</span>]<br>  nodejs <span class="hljs-number">17.4</span>.<span class="hljs-number">0</span> [<span class="hljs-type">main</span>]<br>  obs<span class="hljs-literal">-studio</span> <span class="hljs-number">27.1</span>.<span class="hljs-number">3</span> [<span class="hljs-type">extras</span>]<br>  pandoc <span class="hljs-number">2.17</span>.<span class="hljs-number">0.1</span> [<span class="hljs-type">main</span>]<br>  picgo <span class="hljs-number">2.3</span>.<span class="hljs-number">0</span> [<span class="hljs-type">dorado</span>]<br>  potplayer <span class="hljs-number">220106</span> [<span class="hljs-type">extras</span>]<br>  qbittorrent <span class="hljs-number">4.4</span>.<span class="hljs-number">0</span> [<span class="hljs-type">extras</span>]<br>  rufus <span class="hljs-number">3.17</span> [<span class="hljs-type">extras</span>]<br>  steam nightly<span class="hljs-literal">-20200720</span> [<span class="hljs-type">extras</span>]<br>  sublime<span class="hljs-literal">-text</span> <span class="hljs-number">4</span><span class="hljs-literal">-4126</span> [<span class="hljs-type">extras</span>]<br>  sumatrapdf <span class="hljs-number">3.3</span>.<span class="hljs-number">3</span> [<span class="hljs-type">extras</span>]<br>  trafficmonitor <span class="hljs-number">1.82</span> [<span class="hljs-type">extras</span>]<br>  typora <span class="hljs-number">0.11</span>.<span class="hljs-number">18</span> *hold* [<span class="hljs-type">extras</span>]<br>  utools <span class="hljs-number">2.5</span>.<span class="hljs-number">2</span> [<span class="hljs-type">dorado</span>]<br>  ventoy <span class="hljs-number">1.0</span>.<span class="hljs-number">64</span> [<span class="hljs-type">extras</span>]<br>  wechat nightly<span class="hljs-literal">-20201231</span> [<span class="hljs-type">dorado</span>]<br>  xmind8 <span class="hljs-number">3.7</span>.<span class="hljs-number">9</span> [<span class="hljs-type">extras</span>]<br></code></pre></td></tr></table></figure><h2 id="相关类似工具对比"><a href="#相关类似工具对比" class="headerlink" title="相关类似工具对比"></a>相关类似工具对比</h2><p>最好的教程肯定是官方文档，所以有需求的读者可以直接访问<a href="https://github.com/ScoopInstaller/Scoop">官方网站</a>。这篇文章也主要不是来写教程的，而是一种产品体验与思考。所以，在文章的最后，我想简单做个竞品分析，说说是什么让我最终一直在使用Scoop。</p><p>有关于同类产品，这里主要总结三个：</p><ol><li>Microsoft Store软件商店，含GUI的常规软件商店。</li><li>Chocolatey，另一个第三方命令行软件管理工具。</li><li>Winget，微软官方近两年的开源命令行软件管理工具。</li></ol><h3 id="竞品对比列表"><a href="#竞品对比列表" class="headerlink" title="竞品对比列表"></a>竞品对比列表</h3><table><thead><tr><th>评估指标</th><th>Microsoft Store</th><th>Chocolatey</th><th>Winget</th><th>Scoop</th></tr></thead><tbody><tr><td>GUI</td><td>✅</td><td>✅</td><td>❌</td><td>❌</td></tr><tr><td>开源</td><td>❌</td><td>❌</td><td>✅</td><td>✅</td></tr><tr><td>软件搜索、安装、更新</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>已安装软件查看与卸载</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>回滚版本与锁定版本</td><td>❌</td><td>✅</td><td>❌</td><td>✅</td></tr><tr><td>导出与备份</td><td>❌</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>数据管理与清理</td><td>❌</td><td>❌</td><td>❌</td><td>✅</td></tr></tbody></table><p>（以上表格为核心需求对比，可能有不准确的地方待修改。）</p><ul><li>GUI——Windows 11的Microsoft Store颜值非常高，Chocolatey有一个不怎么好看的GUI，Scoop有第三方GUI。不过实际使用下来发现命令行一行代码的体验也不差，反而清晰明了更加高效，GUI在用户体验方面也不一定是优势。</li><li>开源——我可太爱开源软件了，虽然开源软件一般不如商业软件稳定，但是我可以自己提需求甚至自己去改很是舒服。</li><li>软件搜索、安装、更新——需求中基础的基础，不能实现的话也别用了。为了更好地使用最新版的软件，体验稳定的新功能，我可是积极的更新派，但是让我去使用不稳定的beta版本当测试就不是那么愿意了。</li><li>回滚版本与锁定版本——并不是那么要紧的需求，但对于某些开发人员来说为了稳定就是非常重要的需求了。</li><li>导出与备份——并不是那么要紧的需求，但对于某些人员来说快速安装系统是非常重要的需求。</li><li>数据管理与清理——主要就是软件管理逻辑方面的需求了（强迫症需求），除了Scoop其他工具的数据管理一言难尽吧，虽然Scoop许多第三方仓库中的软件也没实现好。</li></ul><h3 id="对比总结"><a href="#对比总结" class="headerlink" title="对比总结"></a>对比总结</h3><p>综合而言，Scoop最能满足我的需求——软件生态链基本满足我的需求（大型软件我会另外安装），对于小软件的管理实在方便；理论上备份Scoop中的软件只需要复制整个根目录，然后新系统上安装好Scoop再覆盖掉初始文件即可；有一些小bug，比如安装的软件在控制面板找不着，固定到任务栏有奇怪的双开bug，不过这些实际上对于用户体验影响不大，完全可以接受；另外就算有一些严重影响使用的问题，GitHub上提交个issue马上就有大佬解决了。</p><p>Chocolatey各方面都与Scoop类似，在软件生态和稳定性方面更优。在开源和数据管理方面略输一筹，不能设定安装目录（高级版似乎可以），使用默认安装包逻辑安装稍微有一些劝退。</p><p>Winget是一个还没怎么完善的产品，可以肯定Winget启发于Chocolatey或Scoop。但是目前似乎bug还挺多，更新软件后依旧显示未更新的版本是我忍受不了的一个bug，所以虽然系统已经自带，不过我还是没怎么使用。Winget也使用软件默认安装包的逻辑进行安装，对于小众开源软件支持不佳，此外据说甚至会有捆绑安装的现象，属实劝退。当然，winget也有其最大的优势，可以和常规安装的方式共存，通过命令行操作扫描所有已安装软件，且对大众软件的支持最佳。期待后续版本可以做得更好。</p><p>Microsoft Store挺好用的，有很多软件我也一直在应用商店下载更新。只是软件生态太差了，好多软件不支持或者更新远比不上同一桌面端软件，期待后续软件生态可以更好，做到类似Mac App Store的程度。</p><p>*<em>那么有没有大佬想要构建一个基于Scoop的GUI工具呢？之前找到的那个<a href="https://github.com/prezesp/scoop-viewer">GUI工具</a>似乎不是那么好用。。。毕竟不是所有人都喜欢使用命令行工具的。</em></p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>软件</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>从二次元人设到三次元人设——人设的商业价值</title>
    <link href="/post/%E4%BB%8E%E4%BA%8C%E6%AC%A1%E5%85%83%E4%BA%BA%E8%AE%BE%E5%88%B0%E4%B8%89%E6%AC%A1%E5%85%83%E4%BA%BA%E8%AE%BE%E2%80%94%E2%80%94%E4%BA%BA%E8%AE%BE%E7%9A%84%E5%95%86%E4%B8%9A%E4%BB%B7%E5%80%BC/"/>
    <url>/post/%E4%BB%8E%E4%BA%8C%E6%AC%A1%E5%85%83%E4%BA%BA%E8%AE%BE%E5%88%B0%E4%B8%89%E6%AC%A1%E5%85%83%E4%BA%BA%E8%AE%BE%E2%80%94%E2%80%94%E4%BA%BA%E8%AE%BE%E7%9A%84%E5%95%86%E4%B8%9A%E4%BB%B7%E5%80%BC/</url>
    
    <content type="html"><![CDATA[<p>随着动画作品接触越来越多，从一开始的剧情党，到越来越重视作品对于人物的塑造。也许大多数剧情套路都渐渐掌握，剧情的波澜起伏带来的吸引力反而不如如何讲好一个故事和如何塑造一个角色。作为一名老“二刺螈”在职PM，偶尔也想来聊一聊人设的魅力。</p><blockquote><p>人设——人物形象设计，简称人设，或称为角色设计、人物设定（日语：キャラクターデザイン），是指设计动画、小说、游戏、电影等媒体中角色造型，包括外表、服装、表情等细节。</p></blockquote><p>从这段摘自维基的人设的定义来看（吐槽一下人设的日语是character design的舶来语），人设是视觉层面的，是赋予一个抽象角色的具象形象。当然，我并不完全赞同人设只是外表的设计，人物性格、背景、经历等抽象设定，我也认为算在人设范围之内，当然这些抽象概念的设定不会像外表那样显而易见就是了。此外，正所谓“万物皆可娘化”，人设自然也非仅限于人物，通过拟人化处理，动物、物品等皆可有「人设」。</p><p>从定义上来看，人设是作品的重要组成部分，且为作品服务。但是随着人设的发展，一些人设已经开始脱离传统意义上的作品，我将花两个篇幅给出一些作品内外人设的说明及案例，帮助理解人设及其发展（顺便这就是本文的核心内容啊）。</p><h2 id="作品内的人设"><a href="#作品内的人设" class="headerlink" title="作品内的人设"></a>作品内的人设</h2><p>根据作品内人设的属性，这里按照二次元人设、一次元人设和三次元人设分别举例阐述。</p><h3 id="二次元人设"><a href="#二次元人设" class="headerlink" title="二次元人设"></a>二次元人设</h3><p>人设这一概念自然发展于「二次元」，可以是动画作品的人物，小说中的人物插画，游戏中的人物立绘、模型。通过一些艺术手法的加工，绘画等艺术作品可以比真实的人物形象更具辨识度、视觉冲击力和「美」。</p><p>要说二次元人设的经典案例，自然少不了EVA中的双女主——明日香和绫波丽，可谓是二次元傲娇人设和三无人设的鼻祖。（说起来我并没完整看过EVA，最多看了一些剪辑视频，对作品世界观稍有一些了解，是不是该开除二籍了？）甚至在很长一段时间内，傲娇和无口人设的热度一直很高，比如钉宫四萌的傲娇，长门有希的三无，以至于我的印象里十年之前的日漫总感觉少不了一个傲娇的主角加一个三无的配角。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/HTB1nXL6IVXXXXX0aXXXq6xXFXXXj.jpg" alt="明日香和凌波丽"></p><p>当然傲娇和三无仅是动画作品内的两个经典人物性格，其他性格的人物也非常多样，而且性格也不完全代表人设。萌娘百科对人物性格等其他属性（诸如年龄性别特征、外表特征、身份与人际关系、服饰、道具、语言动作、喜好、体质等等）有非常详细的清单列表，每一个名词都会有具体的解释和对应人物参考。这些属性都是二次元人设，或者说任何一个待创造的纸片人都需要考虑的（路人考虑的点可能会有所删减）。在此也非常感谢萌娘百科能够记录并总结如此庞大的人设相关条目信息，想必也为业内人设创作留下了不少素材和灵感。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/20211129013551.png" alt="萌娘百科——萌属性词条列表"></p><p>随着日漫的发展和二次元文化在国内的泛传播，动画及衍生作品也越发重视其中的人设，甚至人设直接作为主要卖点。随便列几部以人设作为卖点的动漫&#x2F;游戏：</p><ul><li><p>《约会大作战》——非常标准的宅系卖人设的动画，里面的妹子不仅人设各异，而且一个比一个可爱；且融合奇幻、战斗、超能力等要素，妹子包含不同的服饰形态，可谓把各种爆火人设（及其他设定）都玩透了。（但是制作公司一个接一个破产了😂。）<br><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/%E7%BA%A6%E4%BC%9A%E5%A4%A7%E4%BD%9C%E6%88%98" alt="约会大作战"></p></li><li><p>《我的青春恋爱物语果然有问题》——与后宫类似的党争类动画，围绕大老师身边风格各异的妹子们展开的物语，以及越来越卷的人设（温柔贤惠天然呆的团子，冷娇的雪乃，小恶魔一色，甚至男主大老师的高情商现充人设也意外地吸引人）。当然党争类动画除了讨喜的人设，还有另外一个非常有趣的看点——炒股，这里就不细致展开了。<br><img src="https://images5.alphacoders.com/110/1104032.jpg" alt="我的青春恋爱物语果然有问题"></p></li><li><p>《阴阳师》——第一款现象级出圈二次元手游。尽管我早已退坑，但还是不得不承认阴阳师在国产（泛）二次元手游上的地位。虽然回合制rpg和抽卡氪金的模式很老套且后期完全失去回合制策略的乐趣性（毕竟大部分新玩家就是没见过所以也不觉得老套），但其凭借优秀的人设和3d建模真正打开了二次元手游的市场，身边无数没怎么玩过游戏的女同学也都纷纷氪金抽式神。不过还是要吐槽一下阴阳师的人设还是停留在表（外观和强度），并没有典型二次元人设的内核（不知最近出的角色表现如何）。<br><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/5c7f469f73401.jpg" alt="阴阳师"></p></li><li><p>《原神》——打破阴阳师营收第一垄断的二次元手游&#x2F;网游，也是近年来最热门的二次元游戏。当其他二次元游戏还在复刻立绘+抽卡+数值的玩法的时候，原神以开放世界的「新奇玩法」对其他手游降维打击。当然这里主要讨论人设，其他方面就不展开了。在人设方面，原神确实拥有典型二次元人设的内核了（二次元公司实锤），很有galgame甚至超越galgame的感觉（特别是邀约任务）。游戏的主要的盈利方式为「pay to love」，即为爱买单的模式，游戏本身不包含pvp数值竞争模式，所以这种为爱买单的模式更加纯粹（不会因为其他的强度压迫与竞争被迫充钱,但是也会被pve压迫）。游戏的人设是最为直接收入的指向，角色的外型、玩法、背景设定、与玩家的互动（主支线剧情、角色传说任务、邀约任务）、养成都成了游戏重点设计的内容。也正是因为这些围绕角色的设计，整个游戏的人设&amp;人物塑造也是好过一张立绘+文字说明的形式（非常优秀），每一个角色都会受到玩家的喜爱与讨论（每个角色pv是游戏的一大流量）。<br><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/673a75f0bb3a56cfe5d305d1e29c7e13_8533553168981297737.png" alt="原神"></p></li></ul><h3 id="一次元人设"><a href="#一次元人设" class="headerlink" title="一次元人设"></a>一次元人设</h3><p>一次元人设这个名称略显怪异，这里指的是相对于图片的二维属性（二次元纸片人）而言的不具备可视状态的相对抽象的但可以被用户交流的人设。因为存在于想法中的人设没有交流性而不具备讨论价值，而语言的线性逻辑与一维对应，所以一次元人设指的就是语言&#x2F;文字&#x2F;文学中的人设。</p><p>故事对人一直就有很高的吸引力，在语言还停留在口口相传的时代就有了故事，那时的人们围着篝火传播着一个又一个古老的故事与经历。我们在小学语文中就学到故事的六要素——时间、地点、人物、起因、经过、结果。其中时间地点是背景，起因经过结果是叙事的主体，也是一个故事最值得关注的地方，人物则算是叙事的载体&#x2F;依托。人是共情的生物，会对故事中的人物产生情感共鸣，所以，人物的表现和塑造也会对一个故事产生非常大的影响。</p><p>一次元人设的表现力是相对薄弱的，但并不代表文学作品不重视人设。语文考试中让我们评价人物塑造的题目多不胜数；我们同样可以使用「栩栩如生」这个词像形容绘画作品一样去形容抽象的文字人设。以及，一次元人设也是其他各类人设的初始原型——比如动画、影视作品最基础的剧本中的人物塑造，游戏中人设图完成之前的从模糊到准确的设定文案与文字描述等等。文字&#x2F;语言作为交流的基本载体，其高效性也是一次元人设先于其他人设的重要原因。</p><p>虽然加了这么一个一次元人设的小标题，但并没有把这个概念放到大标题上，就当是额外补充的一个章节吧（毕竟一次元人设才是根源，虽然二次元将人设这个词发扬广大，但其实人设这一概念早就存在了）。当然具体作品的话，就更加列不出究竟有多少了。比如四大名著中师徒四人、梁山好汉、三国英雄、红楼佳人，再比如三体中的硬汉、圣母，再比如轻小说中十分套路的主角等等，哪一个不是跃然纸上，给读者们留下深刻印象。顺便随着现代化影视技术的发展，优秀的一次元人设也在不断地向更加丰富的二三次元人设发展着，比如上面提及的一次元人设似乎都被升维发展了。</p><h3 id="三次元人设"><a href="#三次元人设" class="headerlink" title="三次元人设"></a>三次元人设</h3><p>所谓三次元人设就相对更好理解了，即是与二次元纸片人相对应的现实世界的包含三个维度的人设了，最典型的代表就是非动画类影视作品内的人设。这里有一个基本概念的混淆，虽然真人演出的影视类作品最终表现的维度依然是2D（各类屏幕、荧幕，除去3D电影），且二次元人设中也不乏使用3D技术实现的三维人设（3D游戏、3D动画），所以二次元人设和三次元人设根本上的差异并不是表现形式的二维或三维，而是在于是否使用了真人（作为直接演员，非动捕演员），也即人物的真实性和创作性的差异。</p><p>相对应于二次元人设的作画，三次元人设最重要的就是演员了。从外貌、妆容、服饰到性格、气质，演员是观众对于三次元人设的第一印象，演员的演出即为人设。优秀的导演会从海量试镜中选择合适的演员，优秀的演员也会清楚地理解剧本中的一次元人设并演好三次元人设。</p><p>让一个二次元宅举三次元人设的例子实乃不易，特别是近年来的演员更加一言难尽，不过好在还有一些老底可以揭揭。比如胡歌是古装男主角的代表，由于在一众古装仙侠剧中作为男主角且人设类似（帅气、小调皮、重情义等）加上胡歌本人出色的表演，让我一度将这么一种虚构的三次元人设直接投射到胡歌老师身上，即胡歌就是这样的人。再比如仙女姐姐刘亦菲，无论是作品内外都透露出仙气的人设。还有一些影视类作品外的人设，比如舞台剧、小品等现场表演类，比如陈佩斯、朱时茂老师的经典小品《主角与配角》，在短短几分钟之内就将人设表现得淋漓尽致。</p><p><img src="http://p2.itc.cn/images01/20210108/c40dc8d1fdc24788a99e9f0bd6b43c49.jpeg" alt="仙剑奇侠传"></p><h2 id="作品外的人设"><a href="#作品外的人设" class="headerlink" title="作品外的人设"></a>作品外的人设</h2><p>也许是看到了人设的价值，但是构建一部作品远比构建一个人设花费更多的成本和精力，所以一些独立于作品外的人设也逐渐发展起来。最典型的作品外的人设就是「偶像」这一概念，既包含虚拟偶像（二次元属性），也包含真人偶像（三次元属性）。</p><h3 id="虚拟偶像-x2F-主播"><a href="#虚拟偶像-x2F-主播" class="headerlink" title="虚拟偶像&#x2F;主播"></a>虚拟偶像&#x2F;主播</h3><p>虚拟偶像可以追溯到虚拟歌姬的时代，说的就是初音未来等一众歌姬。当然虚拟歌姬并未完全脱离作品，其出名依然高度依赖于音乐作品（虽然作品的来源非虚拟歌姬本身，且歌姬的出名程度远高于作品实际作者）。虚拟偶像自身与音乐的相关性也一直很高，很难想象人们在讨论虚拟歌姬的时候完全不提及其代表音乐作品。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/cj.jfif" alt="初音未来"></p><p>但有一个问题，虚拟歌姬是否是其音乐作品的人设？如此思考的话，会发现虚拟歌姬似乎又与传统作品内的人设有一定差异，TA不是作品内某一个人物的形象化，而是作品的表演者&#x2F;呈现者（虽然是各位音乐人调教出来的）。硬要说的话，应该是虚拟歌姬构成了作品本身，而不是像其他人设一样是作品的组成部分。但虚拟歌姬也确实以人设的形象单独而存在，为作品的推广等一系列后续服务，且基本符合人设的创作过程。所谓艺术来源于生活，如果我们把作品这一概念推广到「生活」，那么虚拟歌姬就是在作品「生活」中的常规人设了。</p><p>然后随着直播行业的兴起，虚拟偶像随着绊爱的诞生而大火（但是绊爱也要毕业了），而且偶像这一概念逐渐平民化，与其称之为虚拟偶像，不如叫做虚拟主播。得益于越来越成熟的动捕技术，虚拟主播可以通过套上二次元人设皮，吸引受众的观看。正经一点的虚拟偶像&#x2F;主播诞生的时候还是比较符合人设的创建过程的，比如需要背景设定、形象（live2d或3d皮）、兴趣爱好等等，出道视频即是一个虚拟偶像&#x2F;主播的人设说明。</p><p><img src="https://pbs.twimg.com/media/E4cBMlPXoAIPljT?format=jpg&name=4096x4096" alt="绊爱"></p><p>至于虚拟偶像&#x2F;主播的作品，大都是娱乐形式的表演，唱个歌或者整个活。虽然茫茫虚拟直播界中不乏多才多艺的主播，但这些表演的产出与我们往常了解的作品还是有很大的差异，哪怕是与之最为相近的相声小品都有一些差距。我们在讨论某个虚拟主播时，也不会讨论其有什么什么作品，更多的是人设相关的内容，比如怎么怎么有趣，什么什么梗反复嚼来嚼去；以及更多时候，TA的皮还挺好看&#x2F;涩的。</p><h3 id="真人偶像"><a href="#真人偶像" class="headerlink" title="真人偶像"></a>真人偶像</h3><p>真人偶像和虚拟偶像大无二致，只不过存在时间更长，受众更广，毕竟对美好人物的向往是一种没什么争议的情感。抛开远古时期就存在的对于「他人」的崇拜情感，近年来的偶像养成、选秀、追星等相关话题都在说明着真人偶像的魅力。</p><p>不过人物与人设还是有一定差异的——人物是真实存在的，而人设是为了满足人的幻想而虚构美化的。就如同恋爱中我们往往喜欢的是想象中的对方，真人偶像也大多是这么一种人设。人设的构建过程对于真人偶像而言，是化妆造型、故事包装以及各种综艺影视娱乐作品内化。如果说作品内的人设是用来服务作品的，则这些综艺影视娱乐「作品」则是用来服务作品外的人设的。</p><p>其实真人偶像和前面提到的三次元人设非常类似，甚至同为一体，唯一的差异性就是是否存在拿得出手的作品了。当资本尝到这种人设的甜头之后，真人偶像人设的构建也愈发变得容易。早一辈的偶像们大都还有能够拿得出手的「作品」，有值得被主流价值观称赞的魅力；而新一辈的偶像们就愈发寒碜，往往一副皮囊就足够了，等热度一过换一副皮囊就又是一波新的老的受众。（这里没有贬低真人偶像的意思，虚拟偶像这一现象也同样存在甚至更严重，只不过虚拟偶像的体量有限，所以现象严重的案例都被真人偶像拉走了。）为了避免争议，这里就不点名具体的案例了。更为可怕的是，当资本强奸了我们的审美，持续突破我们的底线时，一些被我们疯狂吐糟的偶像们如今看来也似乎有了值得称赞的地方了。</p><h3 id="品牌形象"><a href="#品牌形象" class="headerlink" title="品牌形象"></a>品牌形象</h3><p>本来品牌形象并不打算单开一节细讲的，因为无论是形式还是内容，品牌形象人设和虚拟偶像都太类似了。甚至因为虚拟偶像的火热很多企业品牌都有了完全意义上的虚拟偶像人设，比如紫米的「小紫」（小米的vup人设被吐槽惨了😂）、微星的「美星メイ」。</p><p>然后脱离企业概念，以官方号为代表的虚拟偶像企划就更多了，比如央视的「新科娘」（凉了），各大高校（社团组织）的校V，乐元素的「战斗吧，歌姬」（倒了），乐华娱乐和字节跳动的「A-SOUL」（如日中天）……</p><p>再然后拓宽虚拟偶像的概念，将人设拓宽为看板娘&#x2F;吉祥物之类，如B站的2233，钉钉的沙雕「小鸟」形象（其实是雨燕哒）到人设形象（因为疫情的流量爆红到现在基本过气），还有二次元游戏公司没个看板娘都不好意思叫自己是二次元游戏，人设的概念已经渗透到品牌的方方面面。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/a5cfd2589d5e3d7d389dd355877c2821b5a80034.jpg" alt="钉钉爆火的时候"></p><blockquote><p>品牌的建立只有一条路径，就是拟人化。</p><p>品牌平时的一切作为、声音，都会在公众认知中留下印象，一点一滴积累，慢慢完成拟人化的过程，让品牌在大家心中有一个比较清晰而稳定的人格。</p><p>如果把品牌当作一个人，一个有着独特风格和姿态的人，那他就得有自己的衣服、有自己说话的声音、有自己外在的姿态跟内在的腔调。——《文案的基本修养》</p></blockquote><p>以上品牌人设形象的案例，大概走的都是这么一条拟人化道路。品牌过于抽象，需要形象化因素辅助人们的理解与记忆，加入一个人设或者吉祥物形象能比较直观地加深人们的印象。不过虚拟偶像、吉祥物这条路径大都走的是亲民、沙雕的路线，更多的是面向新一代的潮流人群，是否与品牌想要建立的人设相匹配还得好好思考一番。</p><h2 id="人设的商业价值与发展前景"><a href="#人设的商业价值与发展前景" class="headerlink" title="人设的商业价值与发展前景"></a>人设的商业价值与发展前景</h2><p>在各种人设案例的介绍中，也多多少少提及了一些商业要素，特别是<a href="#%E5%93%81%E7%89%8C%E5%BD%A2%E8%B1%A1">品牌形象</a>中完完全全的品牌推广与商业行为的案例。要说人设的商业价值，大体也可分为作品内外两个方向。这里就做个总结，简单而言，人设因为被人喜欢而有价值。</p><p>作品内的人设为作品服务。如果是商业形式的作品，则必须考虑其商业属性（要赚钱）。无论是动画、电影、电视剧还是游戏，人设都是一个逃不开的话题，人设在这些作品中的价值比重没有第一也可以排个第二（视情况第一让位给剧情或者玩法）。至于具体的作品商业模式，直接购买、会员制度、皮肤、周边等等，各式各样，这里就不细说了。一个不懂得风险控制的人设必然影响其商业成功，这里就要点名批评最近争议比较大的《雄师少年》了。一个不懂风险在人设上翻了车，还要标榜自己的「艺术创新」和「文化自信」的商业团队，不是蠢就是坏了。</p><p>至于作品外人设的商业模式，那基本就是向人设（背后的真人或团队）直接或间接打钱了。无论是打赏还是代言推广，都是甲方打钱的形式。打钱这事真没什么行业标准，其中的商业利益不是我能想象的。不过，也正是因为这种没什么底线的商业行为，中央一系列的铁拳砸了下来，什么选秀节目禁止，什么打榜取消，以及一系列明星垮台，这种模式的风险似乎也越来越大。<strong>控制风险，促进产业合理发展才是未来的发展方向。</strong>另外品牌形象塑造这条路，企业势的vup似乎并比不过个人势，其商业价值并没有那么直接，而是仅作为一种品牌推广的方式。也许之后的热点变化又会诞生出新的品牌形象的模式（考虑一下元宇宙）。</p><p>最后，作为一名产品人，天然还是对产品抱有好感的。所以如何做好人设，如何做好一个作品，让好的人设服务更好的作品，然后让用户真正为爱买单，才是我们真正追求的目标。</p>]]></content>
    
    
    <categories>
      
      <category>产品</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品</tag>
      
      <tag>动漫</tag>
      
      <tag>游戏</tag>
      
      <tag>商业</tag>
      
      <tag>设计</tag>
      
      <tag>影视</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>产品经理面试记录（校招篇）</title>
    <link href="/post/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95%EF%BC%88%E6%A0%A1%E6%8B%9B%E7%AF%87%EF%BC%89/"/>
    <url>/post/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95%EF%BC%88%E6%A0%A1%E6%8B%9B%E7%AF%87%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>意外翻到了之前校招的时候整理的面试笔记，如今从业近三年，感慨颇多，分享一下。感觉没有大厂产品的实习经历有点地域难度。</p><h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><h3 id="30s"><a href="#30s" class="headerlink" title="30s"></a>30s</h3><p>大家好，我是 xxx，来自浙江大学设计学专业。我非常喜欢自己的专业，整个培养过程有比较系统的产品方法的训练，学习和实习过程中也有许多产品从 0 到 1 方面的经历，比如设计与开发 App，在 Kickstarter 上发布自己的产品 demo。希望今天的讨论能够和大家合作愉快。</p><h3 id="1min"><a href="#1min" class="headerlink" title="1min"></a>1min</h3><p>老师&#x2F;前辈你好，我是 xxx，来自浙江大学工业设计专业。虽然听上去有点艺术生的感觉，但实际上是交叉学科背景下的一名工科生，比如艺术设计、计算机、商业、管理、心理学等等。整个培养过程有经过比较系统的产品设计方法的训练，比如需求分析、产品定义、产品设计、项目管理、产品测试与迭代等。在学习和实习过程中也有许多产品从 0 到 1 方面的经历，具体的比如设计与开发 App，进行产品 demo 的路演。除了产品方面的基本功，我平时也会注重多方面能力的培养，比如接触心理学、经济学方面的书籍，另外学习一些数据分析、机器学习和技术实现的技能，比如我最近的研究是通过自然语言处理和大数据的方法去做需求分析，这也是我相对于同专业的其他同学的优势。另外，在研究生阶段我担任我们班的班长职务，完成同学和学校学院间信息交流的工作，也给了我在各方面能力上很大的提升。</p><h2 id="产品经理的技能要求理解"><a href="#产品经理的技能要求理解" class="headerlink" title="产品经理的技能要求理解"></a>产品经理的技能要求理解</h2><p>首先是一些基本概念。</p><p><img src="https://image.woshipm.com/wp-files/2016/09/qUwYhultjbRwpLdqRGwm.png" alt="技能树"></p><p><img src="https://picx.zhimg.com/v2-1a67f5c492b88a740f73790257aa4dcb_r.jpg" alt="产品专属名词"></p><h3 id="产品"><a href="#产品" class="headerlink" title="产品"></a>产品</h3><p>（包括非商业性质）满足某种需求或解决某种问题的人造物或服务。</p><p>（商业性质）满足需求并与人<strong>产生价值交换</strong>的人造物或服务。——俞军老师</p><p>所以在产品方面的技能要求就是<strong>需求的理解&#x2F;获取</strong>和<strong>商业价值的创造</strong>。</p><ol><li>需求。通过市场调研、用户调研、数据分析等了解发现用户需求，决定需求的优先级，可能有市场、用研的细分职位来辅助需求调研。同理心、逻辑性、洞察力，能够发现潜在的本质的需求，比如在马车时代用户的潜在需求是更高效的出行方式，所以汽车诞生了。</li><li>价值。将需求转化成具体可交换价值的产品的流程，即把需求转化为产品功能，具体的产品生产过程。写文档、画原型、策略优化、功能演进、业务形态和组织关系的方案梳理。这一步会涉及更专业的人士——产品设计师（造型、交互、视觉）和技术开发人员（前端、后端）。</li></ol><h3 id="经理"><a href="#经理" class="headerlink" title="经理"></a>经理</h3><p>Manager，经营管理职责。</p><ol><li>经营与销售。互联网产品的销售更多的是指让用户去使用产品，具体由运营团队负责。产品经理的职责是要在产品的生产过程中让更多人去使用（提高用户体验、优化流程）和增加付费的比率，根据运营团队的数据结果优化产品。</li><li>管理与协调。项目管理&amp;人员管理。不仅需要负责产品的协调（时间规划，进程安排，周期管理），也要处理不同职能人员之间的协调，虽然这一部分更正规一点会由项目经理负责。另外，需要了解可以调动的资源，无论是基础的技术实现相关，还是团队成员的能力等等。</li></ol><h2 id="我的优势"><a href="#我的优势" class="headerlink" title="我的优势"></a>我的优势</h2><p>首先要解释一下我们这个工业设计专业，可能在外界看来我们会做一些机械设计，比如汽车设计之类。不过实际上因为在计算机学院，我们会更多的接触软件、算法，有更多智能产品或者 App 制作的经历。虽然有基础的造型、建模课程，但我们也会接触交互设计、服务设计、商业分析。整个教学的核心有艺术、人本、文化、技术、商业五大要素，这也是我在刚才的自我介绍中把专业称作设计学专业的原因。</p><p>然后从毕业去向来看，历届前辈大部分都从事产品相关行业，无论是用研、用户体验设计师、视觉设计师还是产品经理。如果说产品经理的最终目标是产出一个产品，那么产出的过程我可以认为是设计，这正是我这么多年来一直在学习的内容。</p><p>一方面，专业背景让我有很多接触产品的经历，也折腾过很多好的坏的产品，所以对我对产品创作，或者说对于整个创造性活动都培养了比较高的兴趣。从一个 idea，到用户需求的验证，到具体产品的实现过程，能够给我带来非常大的成就感。我希望今后也能从事类似的工作，做出更多真正落地的、用户范围更广的、满足用户需求的产品。</p><p>另一方面，许多产品相关的学习与项目经历锻炼了我与这一岗位相匹配的文档能力、表达能力、逻辑能力、团队协作能力等，我相信自己能够适任这个职位。</p><p>对于原型图——因为我有一些美术类课程的基础，了解版式设计的原理等，所以通过作图来表达自己的想法这一方面具备一定的优势，具体的包括如何把图做的精简明了，符合视觉上的审美等。另外在原型图的逻辑呈现上，我在这方面的也许是由比较高的天赋的，团队里的成员一般对我出的图的评价一般也是比较高的。</p><h2 id="简历项目描述"><a href="#简历项目描述" class="headerlink" title="简历项目描述"></a>简历项目描述</h2><h3 id="电子货币储蓄罐"><a href="#电子货币储蓄罐" class="headerlink" title="电子货币储蓄罐"></a>电子货币储蓄罐</h3><p>项目背景：需要设计一款增强用户感受的信息产品。这是一项赛马机制的项目，一开始由每个人独立提出一个想法，通过一定的方法（比如制作一些 MVP）去展现想法的魅力，淘汰末尾的项目，人员加入到其他存活项目中。我的想法保留到了最后。</p><p>产品核心目标：设计一款面向电子货币的存钱罐，培养儿童量入为出的金钱观和消费观。</p><p>用户：幼儿园和小学阶段的儿童（初步有了金钱的概念并有消费的经历），以及对应的家长，对应到传统储蓄罐的用户。</p><p>需求：随着电子货币（支付宝、微信支付）的流行，如今的儿童已经很难接触到实体的货币，儿童对于金钱的认知度下降，只保留了一串屏幕上的数字这样高度抽象的概念。因此也频发各种儿童高额虚拟消费的事件（游戏、主播打赏），引发社会的关注。但是在需求方面，儿童实际上是不存在显性需求的，因为对于电子货币的认知不足也不存在培养消费观的需求，反而是家长存在对应的需求，担心孩子乱花钱，希望在无实体货币的背景下培养孩子的金钱观和消费观。</p><p>主要功能：分为两个主要部分：储蓄端和消费端。储蓄端实现虚拟货币的储存与数量的直观化显示，消费端可以用于实际的消费过程。储蓄计划，通过设定购买目标与额度，目标达成后提示可以购买。</p><p>主要职责：</p><ul><li>产品架构——一开始有了一个大致的想法，然后通过用户、市场研究的结果验证想法，定义产品的核心功能模块，确定每一个功能模块的主要表现形式。主要产出有产品用户、需求、功能、流程等组成的文档。</li><li>项目管理——规划与安排项目进度，通过各类文档与技术组、设计组确认与交流具体功能实现方法，根据人员对应的技能分配具体的实现工作，检验与测试完成度，向上汇报每周的完成情况。</li></ul><h3 id="零售店地理位置挑选"><a href="#零售店地理位置挑选" class="headerlink" title="零售店地理位置挑选"></a>零售店地理位置挑选</h3><p>实习原因：一方面这是我在新加坡交换期间学校和公司之间的一个合作项目，有实习机会的话肯定是要把握住的，更何况本身也是一家很优秀的公司。另一方面，我们专业本身有很多接触产品的机会，但这样深入接触数据分析业务的机会并不多，而作为产品的一个重要组成成分，我去接触学习肯定是有很大帮助的，事实也是如此，我的很多数据思维的来源都是这次实习带来的。</p><p>背景：传统模式下，为一家新开的零售店挑选位置往往会由有经验的专家进行估计与判断。但在大数据的时代背景下，我们可以通过收集现有数据，来预测目标地理位置的营收情况。</p><p>目标：商家想要新开一家零售店，如何在备选的几个地点中选择最合适的一个，可以获得最高的未来营收。</p><p>行为与结果：1.数据收集。我主要负责其中一种零售店——星巴克的相关信息的收集，主要包括商家本身的信息，比如地理位置、营业时间、租金、是否在商场内部、顾客流量等，以及商家周边的信息，比如周围的公共交通站点、旅游景区、学校、住宅等。具体的收集方法主要是调用一些地图、商家平台（Foursquare）的 API，还有人工的补充等。2.可视化分析。通过 GIS 可视化相关数据，看看能否得到一些直观的结论。3.建模分析。通过各种数据（包括数据库里的其他数据，不同时间段的人群移动数据）去建立营收额的预测模型，主要分为回归分析和分类预测两种。</p><h2 id="高频问题"><a href="#高频问题" class="headerlink" title="高频问题"></a>高频问题</h2><h3 id="兴趣爱好"><a href="#兴趣爱好" class="headerlink" title="兴趣爱好"></a>兴趣爱好</h3><p>不知道爱看排行榜算不算？我对影视类作品比较感兴趣，不过因为要求比较高，不是随便拿出一部就可以消磨的那种，我平时也会记录一些看法，做做影评之类。</p><p>但是现在这个时代信息量冗余，如何能够在成千上万的作品中找到自己感兴趣的作品，看排行榜就是一种选择，缺点就是容易错过一些冷门佳作。</p><p>另外，排行榜可以说是拓宽到生活的方方面面了，一般排行榜会结合多种数据进行考量，比如播放量、评分、点赞、评论等一系列用户行为，除去买热搜热榜，排行榜还是能比较客观地反应一些因素。通过排行榜也可以快速了解周围的热点，定位用户喜好的变化，对于我了解用户的需求也能提供一定的帮助。</p><p>排行榜的类型：微博热搜，各类视频网站排行榜，大学排行榜，影视、书籍、音乐排行榜，购物类的热销产品，搜索引擎排序。。。</p><p>其他的兴趣爱好：除去和学习工作相关的一些知识获取类的自我提升类兴趣爱好，其实我觉得这些不能算作兴趣爱好来着。我主要还是会玩一些游戏吧，平常也会关注一些新游戏的发布，看看别人怎么玩游戏。主要喜欢的类型是策略解谜类，稍稍要动点脑子，但也不局限于此。</p><h3 id="App-产品评价"><a href="#App-产品评价" class="headerlink" title="App 产品评价"></a>App 产品评价</h3><h4 id="（大众）微信。"><a href="#（大众）微信。" class="headerlink" title="（大众）微信。"></a>（大众）微信。</h4><p>作为即时通讯 App，微信从第一代版本开始就一直把通讯录作为一个核心的功能，直到现在通讯录依然作为底部标签栏之一，虽然可能稳定下来后这一功能的使用频率不是很高。但我觉得这一功能这样保留是有逻辑上的合理性的，通讯录是整个即时通讯 App 的核心部分，所有人与人的连接——好友添加&#x2F;清理，分组，群聊都是在通讯录的基础上的，可以说通讯录是微信的初心也并不过分。</p><p>当然微信有很多可以优化的功能，就好像张小龙说的那样“每天有 1 亿人教我怎么做微信”，比如删除消息为什么就删除了所有的聊天记录，一直被诟病的文件系统，桌面端登录必须手机确认，朋友圈不能删评论等等。微信还在一直改版，比如近期上线的拍一拍，还有朋友圈测试过的回到上次查看的地方，不断优化的看一看。</p><p>我想说的是，其实作为国民级的产品，每一个微小的改动都会引起巨大的话题，若非必须，没有必要进行大功能的改进。</p><p>一方面因为大家都已经习惯了，吐槽的一些功能和可能在其他软件里已经实现了，并不需要微信去完善，或者说按照用户体验五要素的战略层来讲，这并不是核心的需求；另一方面，不断添加功能，也只会让微信越来越花里胡哨，反而牺牲了微信原生用户群的体验。</p><h4 id="（冷门）xxx"><a href="#（冷门）xxx" class="headerlink" title="（冷门）xxx"></a>（冷门）xxx</h4><p>居然没有准备过冷门 App，估计随机应变了。</p><h3 id="如何应对团队中的矛盾冲突"><a href="#如何应对团队中的矛盾冲突" class="headerlink" title="如何应对团队中的矛盾冲突"></a>如何应对团队中的矛盾冲突</h3><p>首先大部分情况下团队的氛围还是比较好的，不会有那种完全不能交流的人，所以大多数的矛盾可以通过深入交流与沟通解决。在博弈论中有一个理论叫做公共知识，矛盾的主要来源是对于某些公共知识的误解，进行充分的交流可以找到误解的根源，矛盾也就可以解决。</p><p>其中最主要的交流方式为列数据做对比，用实质性的结果来互相说服，比如在评价需求优先级的时候通过问卷&#x2F;反馈的数据作为支撑，并公开数据分析的方法和算法。</p><p>如果实在时间有限，未能在可允许时间内得出一致的结论，则会做一次双方对峙，让组内的其他成员投票表决。</p><h3 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h3><p>在设计方法中有一种叫做 5whys，就是通过不断问为什么的方式去深挖用户需求，然后找到对应的产品需求，以实现具体的产品功能。比如对于储蓄罐这个项目——为什么小孩子会巨额消费在游戏上？因为游戏会诱导消费。为什么诱导消费就会付费？因为小孩子只看到了买的按钮，而不知道买的意义是什么，花费是什么概念。为什么不知道？电子货币的感知度低。为什么低？只是一串抽象的数字。所以我们需要做什么？强化电子货币的感知感，让儿童去理解电子货币，理解消费。</p><h3 id="需求优先级"><a href="#需求优先级" class="headerlink" title="需求优先级"></a>需求优先级</h3><p>按照重要程度和紧急程度两个维度对需求进行四个象限的划分。重要紧急（影响用户主要使用流程的 bug）、紧急不重要（边缘性 bug）、重要不紧急（战略性改进需求）、不重要不紧急（待测试的新想法）。</p><p>对于不好区分重要、紧急程度的需求，可以评估需求的性价比——综合考量需求能够带来的效益和预计需要投入的时间，优先满足高性价比的需求。</p><p>用于需求分析的 Kano 模型，根据是否满足某种需求给用户带来的体验的差异，将需求划分为魅力需求、期望需求、基本需求、无差异需求、反向需求。优先考虑期望需求和基本需求，因为这两种需求如果不被满足会造成用户体验的大大下降。魅力需求可以在以上两种需求实现的基础上再考虑；反向需求尽量减少，不去实现；无差别需求因为带来的价值忽略不计可以不用考虑投入过多成本。</p><p>另外我最近的一项研究也是专注于需求优先级的，通过数据思维来解决优先级的问题。首先从用户反馈中提取各种需求，同时标注需求的各种特征（频率、满意度等），然后通过机器学习的算法去预测需求优先级的高低。研究的主要成果一是和相同类型的研究相比取得了更好的准确率的结果，二是制作了一个可视化系统去反应从评论中提取的需求。</p><h3 id="最近看的书"><a href="#最近看的书" class="headerlink" title="最近看的书"></a>最近看的书</h3><p>俞军老师的《产品方法论》。全书的三大核心概念——企业、用户 、产品，然后通过交易模型连接起来，这是其他书中不怎么提到，但却实实在在是商业类产品最为核心的一点，让仍为学生的我有了非常大的思维的突破。有很多人评价这本书太过于理论而不实用，不过我的评价还是蛮高的，特别是对于收益成本的公式在经济学角度补充了不少产品方面的思考空白。另外几个对于滴滴的实际案例的分析也让我对业务有了一些了解，比如拼车方案、溢价系统的本地化处理、失物寻回的思路。</p><h3 id="心理学和经济学"><a href="#心理学和经济学" class="headerlink" title="心理学和经济学"></a>心理学和经济学</h3><p>这个问题有点太大了，有点介绍整个学科的意思。。。</p><p>我是我们班的心理委员兼职班长。心理学我接触学习过社会心理学、动机心理学、认知心理学、设计心理学。会了解一些基本的心理学现象或者规律，比如首因近因效应、归因理论、从众心理等等。但是这样的规律实在太多太多了，我是记不下那么多的，一时间我可能也说不上几种，心理学家就是喜欢提出一种理论，然后通过实验的方法去验证这种理论的可行性。我在心理学方面的最大收获也许并不是各种揭露人类社会学本质的规律，而是一种社会科学的研究方法的渗透。当然这种对于规律的认知也会在日常生活中给我一些思路，比如为什么用户会这么想，好像和 xxx 效应有点类似，这对于我培养同理心也是非常重要的。</p><p>经济学里也有各种高大上的效应，但我接触的不如心理学那么多，选修过博弈论的课程，主要的理解还是在成本和收益组成的价值交易系统中。不过经济学中一般都把人作为一个理性人来分析，有点失去了心理学中一般人的趣味性，然后主要通过各种复杂的计算来获取平衡状态或者利益的最大化。经济学给我提供的最大帮助是一种性价比、优先级之类的计算思路，引入的很多价值（实际价值、使用价值）、成本（使用成本、沉没成本、转移成本）等也能拓宽产品的分析思路。</p><h3 id="用户调研与问卷"><a href="#用户调研与问卷" class="headerlink" title="用户调研与问卷"></a>用户调研与问卷</h3><p>戴力农老师写过一本《设计调研》，还是比较系统地分析了用户研究的主要方法，包括数据收集、数据分析，还有一些应用的案例。问卷是数据收集过程中比较常用的一种方法，当然也是非常初始而浅显的一种。我可能记不清整体的流程和所有的细节注意，只能结合自己的一些经历大概讲一讲一些印象深刻的点。</p><ul><li>问卷结构合理性。整个问卷的问题顺序需要层层递进，一些会根据回答跳转的逻辑性问卷需要特别注意别出错。</li><li>问卷长度的合理性，避免用户直接放弃或者中途放弃。</li><li>更多地去问客观性质的问题，而非意愿类带有强烈引导性的问题，用户会因为问题做出一些非实际的迎合性质的回答。</li><li>一个小技巧。不要在问卷的开头就让用户填写隐私性质的回答，保留到最后。</li></ul><h2 id="提问"><a href="#提问" class="headerlink" title="提问"></a>提问</h2><ul><li>可以介绍一下您负责的是哪一个产品&#x2F;部门吗，主要负责的业务是什么？</li><li>请问您觉得 xx 对比于 xx 的优势在于哪里？</li><li>关于刚才提到的那个问题（某个具体问题），不知道您是怎么认为的？</li><li>对技术能力的要求？</li><li>关于产品经理的职业发展道路，不知道您有没有什么好的建议？</li><li>这一岗位具体会归属于哪一个部门？有哪些成员？具体的业务？</li><li>针对具体业务的问题，根据 JD 描述问一个强相关的？</li><li>有很多战略规划性质的职责，对于阅历的要求会相对很高，为什么会选择对应届生开放这样的职位？应届生往往会负责一个产品末端的一小部分，而战略性部署往往由公司的高层来决定，是对这一岗位的应届生有独特的培养方式吗？</li></ul><h2 id="话术"><a href="#话术" class="headerlink" title="话术"></a>话术</h2><p>请让我回忆一下&#x2F;能给我 30s 整理一下思路吗？</p>]]></content>
    
    
    <categories>
      
      <category>工作</category>
      
    </categories>
    
    
    <tags>
      
      <tag>产品经理</tag>
      
      <tag>面试</tag>
      
      <tag>工作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何评价《原神》1.6 版本新地图金苹果群岛的关卡设计</title>
    <link href="/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B1-6-%E7%89%88%E6%9C%AC%E6%96%B0%E5%9C%B0%E5%9B%BE%E9%87%91%E8%8B%B9%E6%9E%9C%E7%BE%A4%E5%B2%9B%E7%9A%84%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/"/>
    <url>/post/%E5%A6%82%E4%BD%95%E8%AF%84%E4%BB%B7%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B1-6-%E7%89%88%E6%9C%AC%E6%96%B0%E5%9C%B0%E5%9B%BE%E9%87%91%E8%8B%B9%E6%9E%9C%E7%BE%A4%E5%B2%9B%E7%9A%84%E5%85%B3%E5%8D%A1%E8%AE%BE%E8%AE%A1/</url>
    
    <content type="html"><![CDATA[<p>（此为知乎回答补档。）</p><p>逛了一圈大家的回答，简单谈谈本次海岛地图受到大家喜爱的原因。它和之前的地图解谜相比有什么差异？又有哪些发展空间？（背景补充，本人海岛升起后的第一天就高强度无攻略探索并解开了大部分谜题，后续又对着攻略多捞了几个宝箱）</p><h2 id="解谜式地图设计"><a href="#解谜式地图设计" class="headerlink" title="解谜式地图设计"></a>解谜式地图设计</h2><p>首先，整个海岛地图分区域相对独立，每个区域面积不大且藏着一两个解谜。除了壁画那个解谜需要全地图收集，其余基本在一个区域内就可以完成。</p><p>这种解谜模式就是告诉玩家，这个区域就是用来解谜的。这就好比《旷野之息》进入一个神庙，整个区域的任务就是解谜，这种解谜模式自然比那种不知道地图哪个点才是解谜点的模式更让玩家专注在解谜中。</p><p>当然问题也有，地图纯粹为了解谜而设计，会失去大世界场景的多样性，比如只看外观，我经常分不清自己在哪个岛。不过，如果只是在限时神秘海岛中设计这样的地图，并没有什么大问题。</p><p>所以说，比起大世界连续的地图场景，海岛的地图确实非常适合解谜式的设计，带来更高的解谜体验也是应该的。</p><h2 id="解谜要素的多样化"><a href="#解谜要素的多样化" class="headerlink" title="解谜要素的多样化"></a>解谜要素的多样化</h2><p>或者说环境交互的多样化。</p><p>先来细数一下之前有哪些解谜手段——元素视野、元素反应、时间限制、跑图、引路（仙灵）、交互物件（压力板、风车草、蓬蓬果等）。</p><p>受限于交互物件（其实是物理引擎），很多解谜其实非常弱化，要么简单地跟着提示走就完事了，要么就是各种跑图收集要素。哪怕是广受好评的龙脊雪山解谜，也逃不开这两种类型。</p><p>所以，解谜的设计就主要在于如何把地点藏起来，以及如何给予适当的提示。比如我非常喜欢“宝藏归离”任务最后地点的提示——四处地点的交汇处（这真的不是在模仿初始台地四座神庙交汇处的提示？）；还有“古云有螭”任务清策庄至高点的指引，按照提示点亮各方向的雕像；还有庆云顶解锁三个方位的仙鹤，直接通过地图进行了指引。以上这些解谜的设计着实比单纯的跑图有趣得多。</p><p>讲回海岛解谜，藏地点和给提示已经运用得很出色了，比如天文台的漩涡、山洞，还有各种派蒙的语音文字提醒。在此之上，许多地点不是只要找到就完事，需要进行一些轻微的交互，比如打碎石头让水进入调音水位池，踩动石块调节正确的水位线，海上迷雾和时间有关的设定也很有趣。</p><p>当然，这里面的不足之处是解谜要素多样化基本是按照加法设计的，这对于所有解谜设计的整合，以及后续解谜的设计，玩家对于解谜的认知都有一定的障碍。这种加法式的解谜就比不上《纪念碑谷》单一的视错觉、《旷野之息》的四种基本能力的无限应用。</p><h2 id="解谜方法的多样性"><a href="#解谜方法的多样性" class="headerlink" title="解谜方法的多样性"></a>解谜方法的多样性</h2><p>如果解谜只有一种标准答案，其本身的乐趣以及玩家之间的交流也会单一化。本次海岛解谜还是有了一些逃课式的解谜方法（不是指利用 bug 类），比如羽球机关岩创造物逃课，倒置的元素方碑用弓箭角色逃课。希望能继续保持这种解谜的自由度。</p><p>总结，现在就是非常期待稻妻大地图的设计，mhy 又会给我带来哪些惊喜。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>关卡设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>真心提问，《明日方舟》和《原神》的质量哪个高</title>
    <link href="/post/%E7%9C%9F%E5%BF%83%E6%8F%90%E9%97%AE%EF%BC%8C%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8B%E5%92%8C%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E7%9A%84%E8%B4%A8%E9%87%8F%E5%93%AA%E4%B8%AA%E9%AB%98/"/>
    <url>/post/%E7%9C%9F%E5%BF%83%E6%8F%90%E9%97%AE%EF%BC%8C%E3%80%8A%E6%98%8E%E6%97%A5%E6%96%B9%E8%88%9F%E3%80%8B%E5%92%8C%E3%80%8A%E5%8E%9F%E7%A5%9E%E3%80%8B%E7%9A%84%E8%B4%A8%E9%87%8F%E5%93%AA%E4%B8%AA%E9%AB%98/</url>
    
    <content type="html"><![CDATA[<p>作为目前主要在玩的两款手游（虽然《原神》PC 端体验比手游好太多，但是公平起见还是以手游为标准进行对比），一直有比较两款游戏的想法。前段时间刚好做过一次两个游戏游戏的对比，先放个表格。后续可能还会加入一些两者共性的分析，另外写篇文章。</p><table><thead><tr><th>游戏</th><th>剧情（故事）</th><th>叙事（演出）</th><th>美术</th><th>音乐（配音）</th><th>游戏交互</th><th>玩法</th><th>技术力</th><th>总分</th></tr></thead><tbody><tr><td>《明日方舟》</td><td>4</td><td>3</td><td>5</td><td>4</td><td>4</td><td>5</td><td>3</td><td>28</td></tr><tr><td>《原神》</td><td>4</td><td>5</td><td>5</td><td>5</td><td>2</td><td>4</td><td>5</td><td>30</td></tr></tbody></table><p>评分的标准根据游戏的四大要素（故事、美术、玩法、技术）稍微细分了一下，每一个维度 5 点量表打分，只是个人的打分。</p><p>稍微解释一些打分：</p><ol><li>剧情——《明日方舟》和《原神》都构建了比较大的世界观，故事有模有样，如果能顺利讲完完整的故事，5 分可以给出，但是目前后续剧情不明，且不同篇章剧情水准有高有低，保留 1 分。</li><li>叙事——《原神》探索+对白+CG 的叙事比较戳我；《明日方舟》立绘+对白的方式和传统 GalGame 差别不大（甚至在演出上被 GalGame 薄纱），比较起来还是单调了一些（第八章主线加了 CG 动画，希望能再多一点），另外前几章剧情和战斗割裂也是一个扣分点。</li><li>美术和音乐比较主观，两者美术风格各有特色，都在第一眼就吸引到我；《原神》剧情有 cv+即时战斗的沉浸感，音乐&#x2F;配乐方面略胜一筹。</li><li>游戏交互——《明日方舟》的交互设计在一众手游之中可谓相当亮眼，无论是主界面还是战斗部署方便都有考虑过特别适合手机屏幕的交互形式（为了酷炫好看的陀螺仪界面调整、拖动部署），但在手机上仍然存在大量误操作还是要扣一分；《原神》动作冒险形式用手机界面交互真的是为难手机了，虽然比起传统手游一堆图标已经有很多优化，但本质上交互媒介的局限性无法避免，若是给 PC 端的交互评分我估计也能给个 4 分。</li><li>玩法——很难将两个没啥联系的游戏玩法统一比较，只能参考类似的游戏给个大致分数。《明日方舟》在塔防届一姐应该没啥问题，地图、机制、解法的多样性（整活）都可以吹。《原神》核心的策略战斗玩法（阵容操作等）挺好，在开放世界上模仿了《塞尔达：旷野之息》，但是真的比不上，扣分。（补充：后续《原神》在开放世界地图设计上不断突破新的高度，就地图设计而言个人感觉已经青出于蓝而胜于蓝了，但在底层世界交互上还是缺了点火候。）</li><li>技术力——《明日方舟》和《原神》的技术力差距还是挺大的，《明日方舟》勉强给个中位分，《原神》肯定能拿满分了。</li></ol><p>以上评分都是个人评分，如果大家有兴趣，可以自己也打一下分数，看看综合下来的平均评分会如何。</p><p>最后，并不想明确回答这个颇有引战味道的问题，最好的方法就是自己去体验，如果有时间的话。何况每一位玩家对于质量的定义也没有那么多标准，作为一名普通玩家，玩得开心就好。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
      <tag>评价</tag>
      
      <tag>明日方舟</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>原神活动玩法评析</title>
    <link href="/post/%E5%8E%9F%E7%A5%9E%E6%B4%BB%E5%8A%A8%E7%8E%A9%E6%B3%95%E8%AF%84%E6%9E%90/"/>
    <url>/post/%E5%8E%9F%E7%A5%9E%E6%B4%BB%E5%8A%A8%E7%8E%A9%E6%B3%95%E8%AF%84%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<p>经历了两个大版本的节日活动，又在1.5版本前瞻中了解到原神下一版本似乎有没有大地图的更新后，各位旅行者又要继续在漫长的长草期中靠着活动玩法和玩家整活保持游戏的热度。当然本旅行者也是如此，所以在这么一个长草期中总结一下游戏中活动玩法，分析一下活动玩法的模式类型、个人体验等，顺便提出一些活动玩法的个人建议。</p><p><em>特别注意：本次评析的活动玩法仅包含游戏内部的限时活动玩法，不包含游戏内常驻玩法及轮替常驻玩法（渊月螺旋、纪行、签到、祈愿抽卡、角色试玩等）、其他运营平台活动（h5小游戏）、线下活动、同人创作活动等。活动玩法整理来源于个人回忆和<a href="https://bbs.mihoyo.com/ys/obc/channel/map/105?bbs_presentation_style=no_header">米游社观测·wiki</a>，可能会有遗漏与错误。</em></p><h2 id="活动记录"><a href="#活动记录" class="headerlink" title="活动记录"></a>活动记录</h2><p>本节主要对先版本中出现过的限时活动进行梳理和记录，并做简要介绍，以便于后续的分析和评价。</p><h3 id="1-0版本"><a href="#1-0版本" class="headerlink" title="1.0版本"></a>1.0版本</h3><ul><li><strong>元素烘炉</strong>：联机怪物挑战，收集场地元素凝块获取角色升级资源。</li><li><strong>百货奇货</strong>：采集物商品交易，简单粗暴的奖励兑换，多次复刻与优化。</li></ul><h3 id="1-1版本"><a href="#1-1版本" class="headerlink" title="1.1版本"></a>1.1版本</h3><ul><li><strong>未归的熄星</strong>：天降奇异陨石，收集线索和陨石残骸，解决陨石引起的怪物暴动，解开陨石的真相，商店兑换奖励，送角色。</li><li><strong>飞行挑战</strong>：借助加速风场在规定时间内到达终点，根据途中“吃”到的金币和所需时间计算奖励分数。</li><li><strong>佳肴尚温</strong>：跑图任务，在规定时间内为NPC送外卖，有角色能力限制。</li></ul><h3 id="1-2版本"><a href="#1-2版本" class="headerlink" title="1.2版本"></a>1.2版本</h3><ul><li><strong>白垩与黑龙</strong>：解开雪山与神秘长剑（腐殖之剑）的秘密，雪山怪物限时特殊掉落，两种特殊形式的怪物挑战，Boss战，商店兑换奖励，送武器。</li><li><strong>秘宝迷踪</strong>：通过寻宝仙灵的特殊提醒，或者藏宝图的提醒在大世界中寻宝，有概率遇到困难任务，可通过联机摇人帮忙解决，商店兑换奖励。</li><li><strong>无相交响诗</strong>：自选标签高难boss战斗（类似隔壁危机合约），根据累计积分兑换奖励。</li></ul><h3 id="1-3版本"><a href="#1-3版本" class="headerlink" title="1.3版本"></a>1.3版本</h3><ul><li><p><strong>福至五彩</strong>：拍照集不同颜色的卡片，游戏中的集五福活动。</p></li><li><p><strong>海灯节</strong>：邀请魈参加海灯节的主线剧情，同时体验璃月的海灯节节日场景和大杂烩活动，送角色。</p><ul><li><strong>海灯节轶事</strong>：解决璃月居民的各种请求，跑图、解谜、打怪、微剧情。</li><li><strong>机关奇谭</strong>：塔防小游戏，商店兑换奖励。</li></ul></li><li><p><strong>地脉移涌</strong>：角色经验、基础货币（摩拉）资源双倍掉落福利。</p></li><li><p><strong>龙蜥寻踪</strong>：弱解谜的地图新怪物讨伐。</p></li></ul><h3 id="1-4版本"><a href="#1-4版本" class="headerlink" title="1.4版本"></a>1.4版本</h3><ul><li><strong>风花的邀约</strong>：体验蒙德风花节的大杂烩活动，主线剧情是探索蒙德的风之花究竟为何，商店兑换奖励，送武器。<ul><li><strong>节日逸闻</strong>：解决蒙德居民的跑图任务，与海灯节轶事类似，数量大大减少。</li><li><strong>百发百中</strong>：射气球小游戏。</li><li><strong>风中之花</strong>：新类型的飞行挑战，从高处降落收集物品。</li><li><strong>风物之歌</strong>：音游小游戏。</li><li><strong>奇趣秘园</strong>：结合boss怪物挑战的糖豆人闯关小游戏。</li></ul></li><li><strong>争斗潮流</strong>：带buff的限时怪物擂台挑战。</li><li><strong>纯水之愿</strong>：新的宠物小精灵——嫣朵拉，通过水泡攻击捕捉怪物；限时新boss挑战，获取角色升级资源。</li></ul><p><em>注意：公测第一个限时活动，当时还沉浸在世界探索和主线剧情上，完全没怎么在意这个活动，甚至体力都不知道去清。加上对于游戏机制了解的欠缺，也完全没体会到搬运元素的各种玩法设计，只知道是个刷刷打打奖励还不错的活动。其余活动都是深度体验领完奖励。</em></p><h2 id="活动分析"><a href="#活动分析" class="headerlink" title="活动分析"></a>活动分析</h2><p>主要从活动的类型、属性、奖励、是否消耗体力等多方面分析各活动，详见表格。（由于所有活动的奖励都包含各类资源，若不做特殊说明，则默认是此类奖励。）</p><table><thead><tr><th align="center">活动名称</th><th align="center">类型定义</th><th align="center">活动场景</th><th align="center">体力消耗</th><th align="center">奖励类型</th><th align="center">是否联机</th><th align="center">可选难度</th></tr></thead><tbody><tr><td align="center">元素烘炉</td><td align="center">战斗刷素材</td><td align="center">大世界</td><td align="center">是</td><td align="center">角色升级经验资源</td><td align="center">必须联机</td><td align="center">否</td></tr><tr><td align="center">百货奇货</td><td align="center">商品交易</td><td align="center">大世界NPC</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">可选联机</td><td align="center">无</td></tr><tr><td align="center">未归的熄星</td><td align="center">剧情探索收集战斗</td><td align="center">大世界</td><td align="center">是</td><td align="center">商店兑换</td><td align="center">可选联机</td><td align="center">是</td></tr><tr><td align="center">飞行挑战</td><td align="center">小游戏</td><td align="center">大世界</td><td align="center">否</td><td align="center">记分</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">佳肴尚温</td><td align="center">跑图小游戏</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">白垩与黑龙</td><td align="center">剧情探索战斗</td><td align="center">大世界</td><td align="center">否</td><td align="center">商店兑换</td><td align="center">可选联机</td><td align="center">否</td></tr><tr><td align="center">秘宝迷踪</td><td align="center">探索战斗</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">可选联机</td><td align="center">否</td></tr><tr><td align="center">无相交响诗</td><td align="center">战斗</td><td align="center">秘境</td><td align="center">否</td><td align="center">记分</td><td align="center">可选联机</td><td align="center">是</td></tr><tr><td align="center">福至五彩</td><td align="center">探索社交</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">海灯节</td><td align="center">剧情</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">海灯节轶事</td><td align="center">微剧情跑图战斗解谜</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">机关奇谭</td><td align="center">塔防小游戏</td><td align="center">秘境</td><td align="center">否</td><td align="center">记分、商店兑换</td><td align="center">可选联机</td><td align="center">是</td></tr><tr><td align="center">地脉移涌</td><td align="center">战斗</td><td align="center">大世界</td><td align="center">是</td><td align="center">双倍奖励</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">龙蜥寻踪</td><td align="center">解谜战斗</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">风花的邀约</td><td align="center">剧情</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">节日逸闻</td><td align="center">微剧情跑图</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">百发百中</td><td align="center">射击小游戏</td><td align="center">大世界</td><td align="center">否</td><td align="center">记分，商店兑换</td><td align="center">可选联机</td><td align="center">否</td></tr><tr><td align="center">风中之花</td><td align="center">飞行小游戏</td><td align="center">大世界</td><td align="center">否</td><td align="center">记分，商店兑换</td><td align="center">否</td><td align="center">否</td></tr><tr><td align="center">风物之歌</td><td align="center">音游小游戏</td><td align="center">大世界</td><td align="center">否</td><td align="center">记分，商店兑换</td><td align="center">否</td><td align="center">是</td></tr><tr><td align="center">奇趣秘园</td><td align="center">闯关战斗小游戏</td><td align="center">秘境</td><td align="center">否</td><td align="center">成就</td><td align="center">可选联机</td><td align="center">否</td></tr><tr><td align="center">争斗潮流</td><td align="center">战斗</td><td align="center">大世界</td><td align="center">否</td><td align="center">&#x2F;</td><td align="center">可选联机</td><td align="center">是</td></tr><tr><td align="center">纯水之愿</td><td align="center">剧情探索收集战斗</td><td align="center">大世界</td><td align="center">可用体力</td><td align="center">角色升级经验资源</td><td align="center">可选联机</td><td align="center">否</td></tr></tbody></table><p><em>以上表格的整理也许并不完全准确，比如是否联机这一块，大多活动任务（除剧情外），基本都可以在日常的联机匹配中和好友或陌生好友一起完成。由于我本人基本都是单机玩家，除非一个人过不了或者角色联机的体验显著大于单机，才会尝试联机。基本只有联机过的活动才会贴上（可选）联机的标签。</em></p><p>那么从以上表格的结果中，可以获得那些信息呢？</p><ol><li>活动的六维属性的信息。当然这个信息维度空间是离散的，每个维度空间大多包含2-3个可选值。就算是最复杂的活动类型这一属性，也可大致氛围战斗、剧情、解谜、小游戏四个可选值。通过属性空间的定义，可以在空间中搜索未尝试过的新类型游戏，抑或是拓展维度空间，为玩家提供活动的新内容新体验。</li><li>时间信息。活动按照发布的时间进行排序，可以探索活动的维度属性随时间的变化趋势。虽然数据量很少，但总能得出一些规律。比如，强制联机改成了可选联机，体力使用从一开始受到诟病到很长一段时间都不再消耗体力，到现版本又得到了回归（照顾爱肝的玩家）。活动的类型，每一个大版本有一个核心的大活动，包含剧情解谜战斗多类型要素，其他各种类型也保持相对平衡，避免在同质化的内容上让玩家觉得疲惫。</li><li>如果可以得到玩家的反馈信息（官方的问卷应该完全可以得到这些数据），则可以借助单个或多个维度的属性对活动的效果进行评价，评估什么类型的活动哪种属性更讨玩家喜欢。由于个人无法获得准确的玩家信息（实际上我可以爬一些每个活动下的用户评论进行一定的分析得到一些结果，后续有时间可以尝试），就不细分析了，在文章最后的个人评价中结合观测到的一些用户反馈随便谈谈感想就好。</li></ol><h2 id="个人评价"><a href="#个人评价" class="headerlink" title="个人评价"></a>个人评价</h2><p>有时候会想，也许活动玩法的设计真不比核心玩法的设计简单。核心玩法可以慢慢打磨，没做好就硬拖，但是每个版本一定要推出各种各样的活动玩法，维持游戏的热度和玩家日活，面临KPI和玩家讨伐的双重压力。加上活动玩法一经敲定与实现，很难也没时间从底层大改，直接砍掉基本不可能，没有什么试错机会，所以基本在方案策划初期就需要考虑到后期的各种风险，对策划的预判、leader的资源掌握、团队的执行力都有不小的考验。听说佳肴尚温这一活动就受到某策划的强力反对，但最后还是实装上线，最后也似乎受到了不少玩家的吐槽。</p><p>最后结合自己的体验提几条活动设计的原则吧：</p><ol><li>活动玩法的核心目的。目前，原神的活动玩法没有任何氪金点，所以提供玩法多样性，提升玩家游戏体验是最为核心的目的。在完成这一核心目标的基础上，才能完成企业方向的目标（日活与热度）。</li><li>尽量不脱离核心玩法。在<a href="https://skeathytomas.github.io/post/%E5%8E%9F%E7%A5%9E%E7%8E%A9%E6%B3%95%E6%80%BB%E7%BB%93/">原神玩法总结</a>中，我就总结了三大核心玩法——大世界、战斗和养成，活动玩法需要尽量多和核心玩法有关，避免游戏的割裂感。能在大世界中完成的就不要设置独立的秘境（话说主线中设置的各种秘境只能玩一次，仿佛不存在于大世界中，这已经非常割裂了，如果是线性流程的RPG一遍过也就认了），设置必要的战斗，提供高于日常的养成资源供给。这里日常diss塔防秘境和原豆人秘境，脱离大世界的秘境，本身玩法的乐趣也和正统的塔防、闯关有较大差距。</li><li>给予玩家自主选择的权力。由于玩家练度、操作的差异，难度自选、记分都是比较合适的解决方案。设置合理的奖励上限，保证领取奖励的条件对大部分玩家而言并不苛刻，也不限制玩家凹分，提供玩家创作的动力。同时，在奖励方面也最好提供多方面的选择，避免同一种养成资源，说的就是最近的纯水，刷得好无聊，刷完发现资源并用不出去（其他资源欠缺）。</li><li>给予玩家试错的机会。作为一款非血压游戏，就不要在活动中加入像i wanna系列、getting over it 之类让人血压飙升的玩法了，特别是长流程一部出错就要重新开始的那种。点明送外卖玩法，虽然限定角色能力会让玩家觉得不爽，但途中突然出现的怪物、湿地让人猝不及防，并且直接重新开始才是整个活动受到诟病的主要原因。如果是我，我会设计记分系统，比如不使用某能力可以加分、时间剩余可以加分之类，最终根据记分（客户满意度）领取对应奖励。<del>当然，如果是让我给刻晴送外卖那就更好了。</del></li><li>随机性与确定性。随机性可以提供玩法的多样性，塔防、原豆人里都融入了随机因素，但是随机建立在玩法本身的乐趣上。当所有玩法都遍历了，随机性就失去了随机的意义，当这时候还融入随机性，为了刷个关卡成就死活刷不出来的时候，就要破口大骂随机性了（点名原豆人）。</li></ol><p>最后，千言万语，希望原神1.6能出新地图。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《冰菓》中的恋爱小故事——折木x千反田</title>
    <link href="/post/%E3%80%8A%E5%86%B0%E8%8F%93%E3%80%8B%E4%B8%AD%E7%9A%84%E6%81%8B%E7%88%B1%E5%B0%8F%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E6%8A%98%E6%9C%A8x%E5%8D%83%E5%8F%8D%E7%94%B0/"/>
    <url>/post/%E3%80%8A%E5%86%B0%E8%8F%93%E3%80%8B%E4%B8%AD%E7%9A%84%E6%81%8B%E7%88%B1%E5%B0%8F%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E6%8A%98%E6%9C%A8x%E5%8D%83%E5%8F%8D%E7%94%B0/</url>
    
    <content type="html"><![CDATA[<p>距离上一篇写福部和伊原的文章都快过去一年了，这篇讲述折木和千反田的恋爱物语也终于填上了坑。要说这么慢的原因的话，就是男女主的情感线写起来比男二女二难多了，以及——一直鸽一直爽。</p><p>比起男二女二从一开始就互相喜欢的设定，男女主是<strong>从相识到相处到互有好感到恋爱（大概）</strong>，所有的情感线都埋在推理日常的剧情中以及人物的成长之下。所有的细节都需要一点点回顾二人的日常，所以又去N刷了动画。尽管如此，作为暗线的暗线，动画对于男女主情感的描述隐晦而含蓄，完全没有男二女二那样清晰，所以<strong>大多解读仍然是个人解读</strong>，欢迎大家补充。这里，就由我带领大家来回顾一下《冰菓》中的男女主的情愫是如何发展起来的吧。</p><h2 id="相识"><a href="#相识" class="headerlink" title="相识"></a>相识</h2><p>哪怕是没看过《冰菓》的人，恐怕也会对男女主的相识名场景有些印象——作为AMV的热门素材。少年走进社团教室，看到了窗边的少女，少女的镜头马上切换为少年的第一视角，并随着走动上下轻微晃动。随着少年越走越近，少女的背影越来越清晰，少女也听到逐渐靠近的脚步声回过头来。少年停下了脚步，少年和少女互相注视着对方，瞳孔里映射出对方的倒影（顺便这一手法之后也多次使用了）。少女冲少年微微一笑，少年则愣在了原地。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200322091018156.png" alt="少女眼中的少年"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200322091040613.png" alt="少年眼中的少女"></p><p>折木在老姐的安排下加入古典部，没想到在锁着的社团教室里发现了野生的千反田，于是玫瑰色的高中生活开始了（这一切都是老姐的入赘豪门计划）。动画将这一场景安排在首集op前，不可谓不吸引人。<strong>动画极力表现少男少女“一见钟情”的场景，脚步声也类似扑通扑通的心动的声音。</strong>但是，尽管动画表现得十分暧昧，甚至还特意安排了福部调侃二人的“幽会”，却很难得出男女主真正一眼就爱上了对方，只能说<strong>存在一瞬间心动的可能性</strong>（要是我的话肯定就爱了爱了，馋身子警告）。从二人对于福部调侃的回应也说明了这一点——千反田才开始脸红害羞（天然属性暴露——你们京都人贴人脸上都不脸红，被人调侃才会），而折木一脸冷漠早已看穿。</p><p>然而，官方的暧昧在这一集中继续升华。对于千反田为何被锁教室这一问题，好奇宝宝第一次展现出自己的“超能力”，拦住想要回去的折木，于是又出现了一处名场景——<strong>抓手手，贴脸脸，面红耳赤加上blingbling的大眼睛，以及标志性的一句『私、気になります』（我很好奇）</strong>。这一折木想象中的场景可以说是当初第一次看《冰菓》时最吸引我的一幕了，少女的长发将少年捆绑，头发上长出好奇心之花（银边翠，在日本被称为初雪草，花语好奇心），诱导（强迫）好好思考前面的问题。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200324003738611.png" alt="好奇心之花名场面"></p><p>这一幕糖分充足，这还不是恋爱吗？可惜还真不是——千反田只是单纯的好奇，一好奇起来根本不知道怎么把控人与人之间合适的距离，当然<strong>天然属性</strong>的她日常中也不是很懂人与人之间关系的处理；而折木更多的是<strong>蔷薇色的生活闯入他灰色生活带来的震撼</strong>，以及之后的在两种生活方式之间的抉择。当然，一瞬间的心动也是存在的，所以折木才会回过神来看了看被摸的手（OS：这手不洗了）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200325003106037.png" alt="这手不洗了"></p><p>总结，二人的相识被动画表现得相当浪漫而暧昧，会让人一眼以为是恋爱番的错觉。（插句话，我个人对于《冰菓》的定位是<strong>略带苦涩的青春日常推理番</strong>，恋爱这是青春中的一段小插曲。）<strong>二人的相识或许有些微的心动讯号，或者说留下了一个好印象，但离所谓的恋爱还差得远呢。</strong></p><h2 id="表白"><a href="#表白" class="headerlink" title="表白"></a>表白</h2><p>表白来得太突然，再加上之前的种种暗示，我真的有被骗到。无所事事的古典部，千反田商议起制作部刊的事情，又强行把折木拉到了图书馆，强迫他思考图书馆神奇的借书事件。这一话给了二人非常多的互动，随便截个同框都可以用作情头，给结尾的表白疯狂暗示。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200414225225226.png" alt="图书馆互动"></p><p>在经历了两三起日常推理事件之后，折木的推理能力逐渐被大家认识到，千反田对此似乎很感兴趣。在一个恬静的星期日，千反田打电话到折木家，把折木约到了一家咖啡店。（提问：这里的折木怎么就答应了一件多余的事呢？）千反田姗姗来迟，折木虽然抱怨着怎么还不来，却对便服的千反田看呆了眼。千反田支支吾吾，不知道怎么开口，折木有些生气，难得的礼拜天就这么被折腾了，差点就回家去了。千反田连忙制止，忙说着抱歉。</p><blockquote><p>千反田：我很紧张。</p><p>折木：…紧张啊，难不成你打算向我告白吗？</p><p>千反田：说不定倒也可以算表白。</p></blockquote><p>折木不经意的调侃反而得到了意外的回答，又愣住了，千反田则稍稍别过视线，二人的眼里都在期待着些什么。表白的氛围被渲染到了极点，可是这一话戛然而止，观众们又被吊足了胃口。</p><p>第三话开头继续着这一场景，而且加了一层恋爱滤镜，画面变粉，墙上的钟摆变成了心形，桌上的粉色康乃馨也在滤镜的作用下变成了红色（红色康乃馨的花语是迷恋热爱，象征着热恋；粉色康乃馨花语是我不会忘了你，象征着千反田对舅舅的思念，对应着古典部往事的剧情），千反田抓着裙摆显得更加紧张，折木也面对突如其来的表白紧张得流汗。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200330201745674.png" alt="恋爱滤镜"></p><p>就当大家都盼望着表白的时候，千反田又不按套路出牌，说出了不情之请的真相（古典部的历史真相）。一瞬间，滤镜消了，钟摆变回了圆形，康乃馨也变回粉色，<strong>折木的脸上似乎除了震惊，还有一丝的失落</strong>。这短短的几分钟，很可能是<strong>全动画中最直白的描述男女主恋爱的场景</strong>了（虽然是刻意营造的虚假的表白），相信一个清纯少年无论如何也会沦陷吧。</p><p>所以，我的结论是，<strong>在这一刻，折木也真正沦陷了，少年的恋爱真正开始了</strong>。在前几次千反田的请求中，还可以看到折木的各种不情愿，能不去做就不去，甚至可以大费周章策划其余事件也要避免去音乐教室。这之前折木依然处于自我的灰色生活中，虽然千反田的蔷薇色照入了他的眼里，但并不想走出自己的舒适区。而这之后，折木主动选择了踏入蔷薇色的生活中，所以也就答应了千反田的个人请求，而且确实尽自己所能在寻找着线索。当然这里面也有折木一直以来为人的原因——<strong>折木式的温柔</strong>，这一次的请求正式得多，远不是之前各种小打小闹，倾注了千反田好奇心之外的情感。然而，<strong>千反田一边的话，除了有对于折木的依赖（崇拜），其他的感情基本看不出来</strong>，甚至有利用自己的美色把折木当工具人的婊里婊气的感觉，不过这依然是千反田的天然罢了，她没有恶意，也不会平白接受他人的帮助，只是一个什么事都直来直去的憨憨。</p><h2 id="相处与发展——日常中的发糖"><a href="#相处与发展——日常中的发糖" class="headerlink" title="相处与发展——日常中的发糖"></a>相处与发展——日常中的发糖</h2><p>在经历了惊艳的相识和假表白事件后，动画中也处处在日常中悄悄地给二人发糖，折木和千反田也在久而久之的相处和互动中产生更强的情感与关联，特别是千反田对于折木。这一节就按照动画的顺序随便发发二人的糖吧。</p><h3 id="犯下大罪"><a href="#犯下大罪" class="headerlink" title="犯下大罪"></a>犯下大罪</h3><p>在古典部往事的第一篇章结束之后，动画安排了一些短篇日常。第一个短篇围绕大家在日常生活中可能犯下的“七大罪”而展开讨论，尤为关注“愤怒”。折木隔着教室就注意到了隔壁教室生气的千反田，后来主动提到了这件事让千反田回忆起好奇的事情（主动挖坑），再后来也主动思考起千反田会生气的理由，揣测千反田的内心，吐槽“<strong>这一天为千反田的无数次意外之举所震惊</strong>” 。折木花在千反田上的心思不知不觉就多了很多，虽然就在刚才还企图逃避好奇的千反田，但毕竟“<strong>虽然懒但是听老婆话</strong>”，真香还是要真香的。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200404233020766.png" alt="我很好奇"></p><p>特别注意，在千反田了解到事情真相后，意识到老师犯错也在所难免，自己对老师说得太过火了，折木的眼里闪过一丝光芒，才有了折木后面对于千反田内心&#x2F;为人的揣测。<strong>折木在这一刻意识到千反田有着和自己类似的观念，这是两人感情的重要伏笔，至于是怎样的伏笔，就等伏笔揭晓的时候详细来说。</strong>总之，这一话也进一步说明了折木沦陷的观点，<strong>潜意识里也会不自觉的关注喜欢的人</strong>。当然，表白是不可能表白的，折木性格使然，另一方面千反田还是依然未表现出对折木的喜欢。</p><h3 id="看穿真身"><a href="#看穿真身" class="headerlink" title="看穿真身"></a>看穿真身</h3><p>第二个短篇讲述了古典部四人来到乡下温泉旅行的故事以及期间发生的“幽灵”事件。自古七八出福利，温泉日常回自然也少不了福利镜头，当然了，这福利恰巧和二人的情感相联系。折木这回接受了来自千反田的“游玩”邀约，也算是突破了仅在好奇心之下的妥协了（<del>听老婆话已经拓宽到休闲娱乐的业务</del>）。折木去温泉时刚好遇到了同行的千反田，一路上聊起了兄弟姐妹的话题（也是本话的隐藏主题），到了门口时，千反田一句“这里不是混浴的吧”把折木吓得一哆嗦（少女你在期待一些什么呢），也激起了少年骚动的内心。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200412165417195.png" alt="少女你在期待什么"></p><p>折木在泡温泉的时候居然注意到了隔壁千反田的声音，然后开始了羞耻的yy，然后还羞耻地在温泉里泡晕了。之后千反田听闻折木的情况来折木房间探望，孤男寡女，光线昏暗，气氛十分暧昧。千反田出乎意料的一记摸脸杀又让折木慌了神，本就发烫的他因为脸红害羞就更烫了，眼神不自觉地瞟到了千反田的领口，然后一个侧身缩成一团（男孩子们都懂的，坏笑）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200412231733549.png" alt="男孩子们都懂的"></p><p>本来只是如此的话折木也不至于羞愧成这副模样，关键是之前在温泉里yy了千反田。所以折木对千反田的喜欢已经从不自觉地投入更多的关注到涉及色欲的方面；千反田一方的话，尽管做出了很多会让小男生心动不已的骚操作，但我觉得依旧是没有感情升温的变现，依然是那个民风淳朴的千反田。第二天，二人又相约去泡温泉，还约好了一起出来，也算再发了一次糖。</p><h3 id="愚者的片尾"><a href="#愚者的片尾" class="headerlink" title="愚者的片尾"></a>愚者的片尾</h3><p>两个短篇结束之后，动画的讲述了一个长篇。这一章的故事是为拙劣的自制电影竞选优秀的结尾，出场一位颇有领袖水平的学姐女帝，隐藏主题是关于天才和普通人的思考，很容易想到《樱花庄的宠物女孩》这部作品，详细的就不介绍了，有机会可以另开一文，这里依然重点在于男女主情感交流的介绍（虽然只有一点点）。</p><p>炎炎夏日，古典部答应了女帝学姐的请求，前往学校解开电影的结局真相。折木刚出门感受到夏天的热度就缩回了家（<del>俺也一样</del>），却听到了门铃声，开门看到了前来接自己的千反田，然后就乖乖地去学校了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200413225513381.png" alt="千反田来接折木"></p><p>折木注意到讨论过程中千反田不知不觉吃了太多酒心巧克力，提醒她不要再吃了，而千反田明显是上头了，根本停不下来（<del>这个女人的作用纯粹就是卖萌</del>），第二天折木也主动关心起宿醉后千反田的情况。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200414224331951.png" alt="老婆你别卖萌了"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200426205241146.png" alt="折木询问千反田状况"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200426211606839.png" alt="宿醉的少女"></p><p>故事的结尾，折木发现自己被利用的真相后有点心力憔悴，意外的是千反田也注意到这一点了，对折木有着一点点的担忧。所以尽管她非常好奇原剧本的真相是什么，但也考虑到了折木的心情，没有像以往一样缠着折木问出真相。这也是动画第一次表现出来的千反田对于折木的<strong>个人向的非礼节性的担忧</strong>（加了这么一长串描述是为了和之前对于折木的关心做出区别，比如温泉回虽然也关心了，但是仔细体会两次关心的性质还是有很大的区别，前者大体为寒暄，后者有关注并留意的情感），在二人的情感发展上迈出了重要一步，尽管有一部分原因是千反田把折木卷进了这一事件中的内疚，或者权当过度解读也没什么问题。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200415000618808.png" alt="老婆的关心"></p><p>故事结束后的补充话，11.5话——应持之物，折木依然没有从电影事件被女帝利用后否认自我价值的阴影中走出来，表现得异常消沉，更加不愿讲话，甚至不愿思考（小说中提到折木因此还病了一场，千反田特意来家中探访，因为动画里没有就不多做介绍）。消沉的折木在姐姐的安排下去游泳池打工（振作精神），好友们听闻此事也纷纷前往泳池看望折木（为折木打气），没错又是泳装福利回。</p><p>折木看到前来的三位好友，唯独对泳装的千反田上下打量，之后千反田发动好奇之术时也忍不住瞟向千反田的胸部（老色批了）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200426171604177.png" alt="lsp了"></p><p>千反田输了游戏接受惩罚给折木泼水，之后一个劲地道歉。饭间，福部和伊原嘲笑折木的时候，千反田维护起了折木——“你们不要对折木太过分了”。饭后，千反田以千反田的方式安慰着消沉的折木，不经意地提到了才能的话题，并鼓励到折木在她眼里是特别的存在。之后也重复声明折木的才能却有其事，非常感谢折木是可以依靠的“好友”，而折木也终于在三位好友（主要是千反田）的帮助下重新拾回了自我价值，走出了阴影。最后，当千反田问起折木如何发现泳池事件真相的原因时，折木说到“泳池中白色的物体只有冰淇淋了，不，还有一个”（看向了千反田，指她的泳衣），千反田也难得地害羞了，一边脸红，一边用手遮挡，毕竟对人的心态变化了，你看人家伊原就不会害羞。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200425160416090.png" alt="千反田也害羞了"></p><p>果然只有日常话才能发更多的糖，这集发的糖可比上一整章都多了，男二女二也是发了不少糖。正如上一章结尾提到的千反田对折木心态的变化，这一话更多地表现出来了。千反田认为折木仅有出众的能力，也值得信赖和依靠，是一个特别的存在（虽然补充了其他人也同样是特别的存在），因此也倾注了更多的关注，也真正意义上表现出了指向性的害羞情感（人家折木已经经历过很多回了）。但要说恋爱情感，还是有些早，最多算是恋爱的萌芽吧。而折木这一边，除了更明显的馋身子外，也体验到了千反田对于自己的认可，从她身上获得了动力，想必对于千反田的爱意又添加了几分。</p><h3 id="库特莉亚芙卡的排序"><a href="#库特莉亚芙卡的排序" class="headerlink" title="库特莉亚芙卡的排序"></a>库特莉亚芙卡的排序</h3><p>这一篇章是我个人在动画里最喜欢的一章了，不仅整体剧情足够吸引我，背后三条暗线的叙述也足够发人深思，表达的主题是上一个篇章主题的进一步探讨，苦涩的青春也在此表现得淋漓尽致。</p><p>文化祭，古典部的目标是卖文集：福部打着宣传古典部的名号四处玩耍，伊原非常想要提供实质性帮助却在漫研遇上了大麻烦，千反田四处求助交涉却各种分心加上完全不擅长交涉实质上是在卖萌，只有折木在一心一意卖文集，顺便破案的同时也不忘多卖上几本。玩笑归玩笑，这一篇章因为千反田一直来回奔波，男女主的发糖机会还是比较少的。</p><p>折木在安慰伊原的时候，特意指出了千反田，说是伊原如果一直耿耿于怀的话会让千反田也在意起来（<strong>明里安慰着伊原，暗里护着老婆</strong>）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200426171400915.png" alt="明里安慰伊原，暗里护着老婆"></p><p>对于千反田的贴近更为敏感（脸红ing）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200426172356123.png" alt="少年的脸红"></p><p>在福部提出千反田进行交涉时，折木注意到了千反田的犹豫，实际上千反田是一点都不懂交涉了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200426172445253.png" alt="少年越发关注少女"></p><p>短短几分钟的社团教室时间，折木已经多次注意到千反田了，就如往常一样时时刻刻关注与“暗恋”着她。</p><p>另一边，千反田因为四处被诱惑，办事效率低，偷偷被拐走拍了写真集，抱着一堆收获的战利品回到了社办，而折木也是眼尖地从一堆物品中立刻就发现了写真（不愧是你），本就无聊的他自然是会偷看的。但是偷看归偷看，被不相关人发现时不要表现得那么慌张啊，也要记得好好放回原位。所以偷看的事情也是肯定会被发现的，气氛突然变得尴尬了起来（配合BGM食用更佳）。千反田害羞的场景都是值得记下的，虽然粗神经的她肯定是发现不了偷看背后的原因的（那个男人喜欢你啊），不过女孩子的害羞都是恋爱的征兆，一次次害羞之下是对折木逐渐累积起的好感。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427103217806.png" alt="偷看cos照片被发现了"></p><p>料理大赛中千反田在嘈杂的人声中听到了折木的呼喊声，也算是对于折木的特别关注吧，之后也特意向社办方向鞠了一躬对折木提供的帮助表示感谢。</p><p>折木在和伊原闲谈时提到了无法抗拒千反田的好奇心之力，所以才会在千反田还未强迫时就主动探寻起了十文字事件的真相，真是越来越听话了。真如伊原所说，无视掉明明是最佳策略，而折木选择了主动出击，引来了伊原的嘲笑，想必聪慧的伊原在这时候也发现了一些什么猫腻。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427113222947.png" alt="伊原发现了折木对千反田的好感"></p><p>折木在和千反田抢书的时候又看到了领口，然后就乖乖就范把书给了千反田，你们怎么都那么熟练。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427120630257.png" alt="福利时间"></p><p>虽然整章没什么发糖机会，动画组也是能安排上的都安排上了，社办里的氛围还是那么轻松愉快（虽然整个文化祭可谓一团糟了）。其他的诸如折木会刻意关心来回奔波的千反田是否过于劳累了，千反田对折木的死缠烂打等等就不多说了。作为最后动画一个长篇，二人情感的发展也差不多积累的差不多了，折木的宠爱，千反田的依赖，这些都已成既定现实（辉夜大小姐教我新词汇），所以是时候真正拉开恋爱的序幕了。</p><h2 id="突破性进展"><a href="#突破性进展" class="headerlink" title="突破性进展"></a>突破性进展</h2><p>动画最后的几集，回到了短篇日常，也的确应该为这一青春校园故事画上完满的结局了，所以这一部分对于男女主，以及男二女二都加入了更直接的情感戏。</p><p>峰峦是否放晴这一话是男女主情感发展上的重要阶段，硬要说的话千反田是在这时喜欢上折木的也并不过分。因为突然的契机回忆起了一些陈年旧事，小伙伴们之间的谈话却发现了一些矛盾之处，折木因此想要去图书馆查明真相。故事发展到这里，折木在大家的影响下，也是越发充满了活力，会去做一些看上去就很麻烦的事情了。千反田因为好奇折木在在意一些什么，也一同前往（<del>重要的是又有了独处时间呢</del>）。当千反田提出可以一起骑车时，折木脑补了一下画面，又是丘比特又是玫瑰花的，爱意相当明显，可人家只是想想。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427151214758.png" alt="少年美好的幻想"></p><p>解开矛盾的真相时，千反田又进一步问道折木行动的理由。与其他小伙伴想的不同，千反田对于折木充满干劲并不好奇，在意的是明明折木会帮助其他人做各种各样的事情，却对自己的事情不怎么在意，而今天又为何会对自己的事情如此在意。折木解答到不应该不知轻重地谈论其他人，应该站在别人的立场上想想，所以折木看似为了自己行动，实质上还是为了别人。而这一瞬间，千反田感慨万千，甚至不知道如何去表达自己的想法，我的解答是“<strong>少女你恋爱了</strong>”。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427153343328.png" alt="少女你恋爱了"></p><p>这里正好回收了犯下大罪那一话的伏笔——彼时千反田为自己的动怒而反省，此时折木为自己的言辞反省。两人对于对方的反应又是那么类似，都是眼里泛起光芒，加上反省的本质是一致的，都是应该更体贴别人，多站在别人的角度想想，所谓的共鸣就是如此。逐渐积累的好感，加上强烈的共鸣，只是千反田暂时还未弄清这究竟是一种怎样的情感，所以也没表达出来。</p><p>此事件后，千反田对于折木的情感表现得更为明显了（当然折木的明显就不用多做解释了），比如在相关人员这一话（最精彩的推理），千反田邀请折木为自己的舅舅上一炷香，这已经完全是家事范围了（所以两人都脸红了），而折木也爽快地答应了。之后在推理过程中两人多次因为靠的太近而互相脸红，你们脸红的频率是不是有点太高了，而千反田也在以往无数次贴脸后才终于感到害羞了，至于什么原因也不用多做解释了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427155845672.png" alt="少男少女的暧昧1"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427160055236.png" alt="少男少女的暧昧2"></p><p>再比如开门大吉这一话中，折木欣然接受了和千反田一起去神社进行参拜的提议（<del>因为可以看到老婆穿和服</del>），更重要的是千反田想要向折木展示自己的和服。之后折木主动为千反田拿东西，和千反田一起去仓库拿东西，在被困储藏室时二人也互相为对方着想。千反田谈及可能会被其他人误会时，实际上心里也确实有了真实的想法，才会有所顾虑，所谓身正不怕影子斜，喜欢一个人并不是那么好藏起来的。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427161241445.png" alt="老婆的和服真好看"></p><p>再比如手工巧克力事件一话中（虽然是男二女二的主场），千反田和伊原在商店谈论起喜欢的人的话题时，千反田又害羞了，欲言又止，表现得不要太过明显。上学路上，千反田也暗示了家里的习惯并不会对真正亲密的人送礼物，所以情人节也是如此，言下之意就是折木是真正亲密的人，可惜聪明的折木却偏偏在感情上迟钝了一些。之后巧克力事件发生了，折木明明知道事情的真相还配合千反田演戏，就为了给福部一个台阶下。但是没想到却意外地伤害到了千反田，千反田的善良让她对此十分自责，非常对不起伊原。宠妻的折木一方面将事情完美解决（什么叫做情商），一方面也要求福部对此次事件解释缘由（突然很man），就是因为伤害到了千反田。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427215137748.png" alt="女生谈话聊到喜欢的人时少女慌张了"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427215625541.png" alt="所以折木是真正熟络的人了"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427220925019.png" alt="名场面"></p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427221911354.png" alt="折木好man哦"></p><h2 id="最文艺的告白"><a href="#最文艺的告白" class="headerlink" title="最文艺的告白"></a>最文艺的告白</h2><p>在男二女二感情线完美收尾之后，最后一集绕远路的雏人偶终于也为男女主的感情写下了一个完美的浪漫式结尾。折木这次又答应了千反田的为人偶撑伞的“奇怪要求”，离千反田的生活越来越近，而千反田也是越来越信任与依赖折木了。撑伞过程中，折木突破了自己的节能主义，而且对于千反田的爱意也是达到了顶峰。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427224736049.png" alt="少年你的节能去哪里了"></p><p>委托结束之后的黄昏，二人散步在绽放的樱花树下，连天色也变得粉里透红，于是全动画最美的片段发生了，这就是史上最文艺的告白。</p><blockquote><p>千反田：我还是想。。。把这里介绍给折木同学。</p><p>折木（幻想）：话说回来，关于你放弃了的经营性的战略眼光，由我去学怎么样？</p><p>折木（现实）：天气变冷了呢。</p><p>千反田： 不，春天已经到了。</p></blockquote><p>翻译一下的话，就是（相信大家也在评论区有所耳闻了）：</p><blockquote><p>千反田：我想和折木同学在一起呢，一起经营家乡。</p><p>折木（幻想）：好啊，我负责学习经营性的战略。</p><p>折木（现实）：已经要文理分科了，还是不了吧。</p><p>千反田：不，我们才刚刚开始。</p></blockquote><p>硬要说过度解读的话，千反田一方的话还是有待商榷，古有“月色真美”，今有“不，春天已经到了”，结尾的这句台词的完全诠释了东方的含蓄与浪漫，引人无限遐想。也许千反田只是字面上回复了折木的“天冷了”，前面的介绍家乡也只是字面上的意思，不过千反田的心意就是如此，解读成告白也并不过分，何不让结尾更甜一点呢。</p><p>折木一方的话，就更坐实了。那个经营性战略来自千反田提出的两个治理家乡方针：一是生产商品价值更高的作物，让大家都变得富裕，二是以经营性的战略眼光让生产更具效率。折木理解千反田在第二个方针上能力的缺失，所以提出了自己接手这一方针，意思就是和千反田一起经营家乡，而折木的交涉和经营能力的也是有目共睹的（文化祭让“凶手”帮忙卖文集，被年长者夸成熟稳重），可谓非常适合了。而他回到现实，欲表白又止的行为和福部对待伊原的犹豫完全一致，加上文理分科，两人在现实中可能越走越远，责任感和对现实的未知的消极态度让折木放弃了表白。好在千反田的回答从乐观角度对待未知，不然所有的情感累积就这么白费了，折木你届到了吗？</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/image-20200427230006775.png" alt="春天已经到了"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>不知不觉已经写了那么长了，快要突破万字了，大概大量的篇幅都浪费在了日常发糖的流水账上了，而且实质上两人的糖远远多余我提到的部分，带着吃糖的心情看所有的互动都是在发糖。原谅我的不才只能按照动画顺序luo’lie二人的情感发展，如果大家只是对发糖感兴趣的话，可以搜一些MAD剪辑快速吃狗粮。</p><p>其实最后的表白，在我一刷的时候也是完全没有注意到，直至看到了大佬们的解读，觉得甚有道理。如今完全把《冰菓》作为一部恋爱番，更多地去关注恋爱和发糖的细节，确也收获良多。各种意义上，动画的结局都是最完美的结局，原小说作者这么多年也想不出一个比动画结局更好的结尾了，所以什么天国的第二季之类的虽然之前有所期待，如今看来还是喜欢这样的结局。</p><p><strong>折木和千反田的恋爱过于完美而浪漫，相信每一个人都会羡慕这样的恋爱；而福部和伊原的恋爱充满了苦涩，就好比我们的现实。</strong>如此看来，两条恋爱线的交织让这部不怎么像恋爱番的作品的立意又高了不少，希望大家既能遇到浪漫的爱情，也能处理恋爱中必定会遇到的苦涩。</p><p>最后，借这篇文章表白现实中遇到过的千反田吧。</p>]]></content>
    
    
    <categories>
      
      <category>动漫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动漫</tag>
      
      <tag>冰菓</tag>
      
      <tag>京阿尼</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《冰菓》中的恋爱小故事——福部x伊原</title>
    <link href="/post/%E3%80%8A%E5%86%B0%E8%8F%93%E3%80%8B%E4%B8%AD%E7%9A%84%E6%81%8B%E7%88%B1%E5%B0%8F%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E7%A6%8F%E9%83%A8x%E4%BC%8A%E5%8E%9F/"/>
    <url>/post/%E3%80%8A%E5%86%B0%E8%8F%93%E3%80%8B%E4%B8%AD%E7%9A%84%E6%81%8B%E7%88%B1%E5%B0%8F%E6%95%85%E4%BA%8B%E2%80%94%E2%80%94%E7%A6%8F%E9%83%A8x%E4%BC%8A%E5%8E%9F/</url>
    
    <content type="html"><![CDATA[<p>要说《冰菓》是一部什么类型的番，那当时是恐怖悬疑啦（滑稽）。高中、社团、古典部，虽然是非常常见的日常校园番的配置，也有很多人觉得《冰菓》挺无聊的；但是无论是米泽穗信的小说还是京阿尼的动画制作，都让我特别享受这样轻松散漫的氛围，虽波澜不惊，却意味深长。也许这就是</p><blockquote><p>我们每天度过的日常,也许就是不断发生的奇迹！——《日常》</p></blockquote><p>我可能羡慕他们丰富多彩的高中生活，可能羡慕折木超乎常人的推理天赋，更可能羡慕少男少女之间蔷薇色的爱恋。虽然《冰菓》的主题并不是恋爱，但是却有在一起逐渐发展起来的好感与情愫，以及隐藏在日常之下的淡淡甜味。这里，就让我们先来了解一下男二和女二之间的恋爱小故事吧。</p><hr><p>关于男二和女二的开端，动漫在伊原刚登场的时候就说明了。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2019-05-14_16-48-23.png" alt="伊原抱怨福部明明知道自己喜欢她"></p><blockquote><p>伊原从初中时就迷恋里志了。——折木给出了二人关系的解释</p></blockquote><p>简单来说，就是伊原从最开始之前就喜欢上了福部；而福部因为一些原因既没有接受这份喜欢，也没有明确拒绝（或者说给出一个合理的拒绝理由）。这种不怎么愉悦的节奏就这么一直推了一年多，从去年的情人节巧克力，直到今年的手工巧克力事件。</p><p>好在作者（指动画）还是很温柔的，两人的关系以及周围的氛围并在有因此而变得尴尬而诡异，反而是意外的让人舒适。在大多数的时间里，二人无论怎么看都表现为绝对的好友，而且是带着互相的喜欢与欣赏的好友的感觉，仿佛之前并没有发生什么难堪的事情。<strong>也许，作者也知道——只是喜欢的话，那就当作喜欢处理就好，不要混入其他杂质。</strong></p><hr><p>当然，这也和巧克力事件的处理方式有关。去年，福部以</p><blockquote><p>仅仅放在模具里冷却凝固的巧克力算不上手制</p></blockquote><p>的借口拒绝收下伊原的情人节巧克力。而伊原也因此“暴走”立下flag</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2019-05-14_23-19-08.png" alt="伊原立下flag"></p><p>连拒绝与生气的样子都可以感受到其中的糖分，这段关系又怎会因为这样的小矛盾而变化呢？这么一个flag既让伊原的坚持有了充足的理由，也让福部有了更长的思考与准备时间。怎么说呢，这一拒绝可能反向拉近了两人间的距离。</p><p>但是新的一年的情人节终于还是到来了，这次伊原大制作的巧克力福部终于没有任何理由拒绝了。但是过了一年，福部依然没有准备好。伊原因为其他社团还有活动，就把巧克力留在古典部让千反田看管。当福部看到社团准备室中的巧克力后，趁千反田不在时偷偷拿走了巧克力。因为自己准备的袋子不够大，还狠下心来掰断了巧克力。（顺便这个分镜转换是真的赞）</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/bili_v_1557848907441.gif" alt="福部狠心掰断巧克力"></p><p>当然这一切还是轻易地被折木看透了，并且也算落下了一个挺好的结局。福部向折木解释了其中的缘由，女生们之间也用女生的方式解决了其中不爽。最后，福部在路灯下给伊原打了电话，终于走出了那重要的一步（注意这里是动画原创剧情）。</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2019-05-15_00-00-54.png" alt="福部给伊原打电话说明"></p><hr><p>讲完了事件的起因经过与结果，也是时候分析背后的缘由了。伊原喜欢福部吗？必然是喜欢的，只是喜欢的原因就无从得知了。伊原的个性是率真毒舌，对自己熟悉的人更是如此。<strong>喜欢即是喜欢，讨厌即是讨厌，不需要有什么隐瞒与欺骗。</strong>她对于福部的喜欢可谓是表现在方方面面：</p><ul><li><p>对福部的称呼，亲切地称为“xx酱”（译为阿福小福）；反观对于折木的称呼，就只是普通的“折木”</p></li><li><p>因为福部加入了古典部，自己和福部又不同班，所以在自己还在漫研会的背景下继续加入了古典部，也经常因为身兼多职两边都挺忙的</p></li><li><p>明明被拒绝了还是不放弃，依然在来年的情人节送上更豪华的手工巧克力；当然在日常中应该还不断向福部表达过心意，只是每每都被福部用开玩笑的方式糊弄过去；但即使这样，依旧是坚定的喜欢</p></li><li><p>日常中宠溺的眼神以及数不清的小细节，时时刻刻透露着喜欢一个人的样子。比如在学园祭结束时福部因为又一次没比过折木透露失望时幻想自己伸出手拉了下福部表示心疼（因为下一个镜头影子中并没有拉）</p></li></ul><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2019-05-15_14-05-34.png" alt="伊原拉住福部以示安慰"></p><p>在巧克力事件中，伊原也是很快就知道只有福部才干得出这种事情。在回家路上也和千反田表达了自己的想法，达成了福部这样做好过分的共识，并化悲愤为食欲，相约去吃蛋糕。在整个过程中，让伊原难受的是福部的犹豫，自己难以理解福部想法的不安，还有尽管如此依然喜欢福部的矛盾。这也是其中略显虐的一点点苦涩吧。当然这一年中，伊原也是有所成长的，至少不会对着福部大发脾气了，这么说来，其实伊原也在一点点理解了福部。</p><hr><p>另一方面，福部喜欢伊原吗？答案当然也是肯定的。</p><ul><li><p>从称呼上来说，福部称呼伊原名字“摩耶花”，对于千反田则是姓氏“千反田”</p></li><li><p>虽然喜欢开玩笑，但面对伊原时，无论是形式还是内在，表现出来的独特的温柔也是只可意会不可言传</p></li></ul><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2019-05-15_15-02-20.png" alt="福部对伊原日常中流露的好感"></p><ul><li>在巧克力事件中向折木坦白时，也直说伊原是个好女孩，也梦想着能够和她在一起</li></ul><p>但是，福部一直在犹豫与害怕。他觉得自己配不上这么好的伊原。他觉得自己好不容易放弃了“执着”的这一想法，放弃成为“第一人”，转而去体验过程中的乐趣，这样的生活方式带给了他很多前所未有的快乐。“不执着”成为了福部的信条，直至遇到了喜欢的伊原，矛盾又再次不可避免——自己可以执着于喜欢伊原吗？很多事情确实可以随心所欲，但是感情却不一样，因为它被赋予了很大的责任，接受即意味着责任，福部觉得自己目前并不能承担这样的责任。执着于感情的话，就违背了自己的信条，他害怕自己因此回归到原来那个事事执着的讨厌的自己。可是他又无法回馈伊原的感情，害怕伤害伊原，接受也不是，拒绝也不是，所以只能一味地逃避，尽管这个做法依旧避免不了带给伊原伤害。福部思来想去，一直找不到一个可以不伤害伊原的答案。</p><p>也许福部的这种想法看上去会比较奇怪与难以理解，但这实际上却非常常见。<strong>当我们遇上自己喜欢的人时，多多少少会表现出犹豫与害怕，这背后的原因可能不是执着与不执着，却可以替换为任何一种逃避的想法。</strong></p><hr><p>好在我们的男主还是意外地点醒了福部</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/Snipaste_2019-05-15_16-01-05.png" alt="你还好意思说别人"></p><p>执着或是不执着，有时候并不是那么重要，这更多的只是喜不喜欢的问题，而两者并不矛盾。<strong>喜欢一个人就意味着需要执着于这个人而放弃其他吗？不，喜欢仅仅是喜欢，这意味着生活中多了一件喜欢的人&#x2F;事&#x2F;物。</strong>故事的最后，也借伊原之口传达了二人关系的进一步发展，也算是一个圆满的结局。</p><hr><p>至此，关于《冰菓》中男二女二的感情线解读完毕，注意这里主要还是参考了动画中的细节，原作中并没有这样的发糖情节（京阿尼的善意）。本文也夹杂了我生活或是情感的私货与理解，至于为什么会先讲男二女二的感情线，大概是这条线更意味深长贴近现实，也有更多的思考价值。</p>]]></content>
    
    
    <categories>
      
      <category>动漫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动漫</tag>
      
      <tag>冰菓</tag>
      
      <tag>京阿尼</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>梦境物语</title>
    <link href="/post/%E6%A2%A6%E5%A2%83%E7%89%A9%E8%AF%AD/"/>
    <url>/post/%E6%A2%A6%E5%A2%83%E7%89%A9%E8%AF%AD/</url>
    
    <content type="html"><![CDATA[<p>附游戏demo项目地址：<a href="https://github.com/SkeathyTomas/Processing-Game">点击</a></p><h2 id="1-故事背景"><a href="#1-故事背景" class="headerlink" title="1-故事背景"></a>1-故事背景</h2><p>在某一天你陷入沉睡之时来到了一个特殊的地方——梦境工厂，工厂的负责人告诉你：你正在长大，你的梦境也随之发生了一些变化，在梦境中隐藏着关于未来的一个秘密。为了发现这隐藏的秘密，所以在沉睡时邀请你来参与梦境的制造。</p><p>当你刚想要问一些什么的时候，负责人消失了，随之出现了一个奇奇怪怪的门，虽然你有点犹豫， 但是非常好奇，所以进入了这个奇怪的梦境之门。</p><p><strong>（*每当你完成这梦境建造公司&#x2F;工厂里的一个任务&#x2F;订单，你就会获得一个未来碎片。）</strong></p><hr><h2 id="2-材料设定"><a href="#2-材料设定" class="headerlink" title="2-材料设定"></a>2-材料设定</h2><table><thead><tr><th align="center">原料</th><th align="center">云团</th><th align="center">雨水</th><th align="center">糖果</th><th align="center">火焰</th></tr></thead><tbody><tr><td align="center">基层</td><td align="center">3云团-&gt;云朵基层</td><td align="center">3个雨水-&gt;雨水基层</td><td align="center">3个糖果-&gt;糖果基层</td><td align="center">3个火焰-&gt;火焰基层</td></tr><tr><td align="center">对应梦境</td><td align="center">柔软梦境</td><td align="center">清新梦境</td><td align="center">甜美梦境</td><td align="center">炫酷梦境</td></tr><tr><td align="center">构造梦境所需材料</td><td align="center">10个云基&amp;2个雨基&amp;1个糖基&amp;5个火焰</td><td align="center">10个雨基&amp;2个云基&amp;1个火基&amp;5个糖果</td><td align="center">10个糖基&amp;2个火基&amp;1个云基&amp;5个雨水</td><td align="center">10个火基&amp;2个糖基&amp;1个雨基&amp;5个云团</td></tr></tbody></table><p><strong>未来碎片*N(N为关卡数)，每个关卡拥有独立故事</strong></p><hr><h2 id="3-故事关卡"><a href="#3-故事关卡" class="headerlink" title="3-故事关卡"></a>3-故事关卡</h2><h3 id="3-1-梦的云团"><a href="#3-1-梦的云团" class="headerlink" title="3-1 梦的云团"></a>3-1 梦的云团</h3><p>云朵小姐（NPC）：嘿，很高兴见到你！你是新来的吗？</p><p>我：啊…我不是…（刚想要解释的时候被打断）</p><p>云朵小姐（NPC）：我知道了，你一定是来帮我的吧！那就不多说了，最近的订单&#x2F;任务非常多呢！</p><p>我：……（丝毫找不到解释的时间）</p><p>云朵小姐（NPC）：嘿，你可以帮我把 <strong>3</strong> 个云团垒在一起吗？这样就有建造<strong>柔软</strong> 梦境的<strong>云团基层</strong> 啦！做完的话我可以告诉你一些事情哦！</p><p>我：（思考了一下然后同意了）那好吧，如果有什么不对的地方请告诉我。</p><p><strong>【制作过程&amp;报错提示】</strong></p><p>云朵小姐（NPC）：太棒了！你做的很好！可以再帮我做一个 <strong>糖果基层</strong> 吗？这是建造 <strong>甜美</strong> 梦境的必需品之一哦！方法就和刚才一样。</p><p><strong>【制作中】</strong></p><p>云朵小姐（NPC）：非常感谢你！按照约定，我来告诉你关于这里一些事情，请把这个（未来碎片）收好。</p><p>我：谢谢你！（拿着碎片感到不知所措）</p><p>云朵小姐（NPC）：（突然小声）不用谢，不过我听说，这里的梦境设计师已经不见了。快去找白鸽小姐吧，她在二楼，我这里要赶紧把这些基层给送过去呢！再见啦！</p><p><strong>（*获得关于未来的一枚碎片）</strong></p><p><strong>【自动存档，并且进入了关卡选择页面&#x2F;直接故事推进？关卡选择考虑像RUSTY LAKE的FAMILY TREE一样， 完成了关卡后出现后续内容。】</strong></p><h3 id="3-2-雨水的烦恼"><a href="#3-2-雨水的烦恼" class="headerlink" title="3-2 雨水的烦恼"></a>3-2 雨水的烦恼</h3><p>白鸽小姐（NPC）：你就是从云朵小姐那边过来的吧？ </p><p>我：是的，您好啊白鸽小姐！</p><p>白鸽小姐（NPC）：你好啊，真是个有礼貌的孩子呢。来帮我做些事情吧，最近来干活的人真是太少啦~</p><p>白鸽小姐（NPC）：这个订单&#x2F;任务需要 <strong>10</strong> 个 <strong>雨水基层</strong> 哦，你在云朵小姐那边已经学会了制造方法吧。</p><p>我： <strong>10</strong> 个？这也太多了吧…</p><p>白鸽小姐（NPC）：啊嘞啊嘞，太多了吗？明明是很轻松的嘛。</p><p><strong>【制作过程中白鸽小姐提示我使用循环】</strong></p><p>白鸽小姐（NPC）：你看，是不是很简单。（得意地笑） </p><p>我：的确变得轻松很多呢…（若有所思）</p><p>白鸽小姐（NPC）：谢谢你~这是你该获得的奖励，最近不知道为什么这里的员工变少了呢，或许兔子先生会知道一些事情呢，他就在楼上。祝你好运~</p><p><strong>（*获得关于未来的一枚碎片）</strong></p><p><strong>【自动存档，并且进入了关卡选择页面&#x2F;直接故事推进？收集到的未来碎片考虑做成拼图收集的样式？】</strong></p><h3 id="3-3-选择的烦恼"><a href="#3-3-选择的烦恼" class="headerlink" title="3-3 选择的烦恼"></a>3-3 选择的烦恼</h3><p>兔子先生（NPC）：…… （眉头紧锁好像非常苦恼的样子）</p><p>我：您好… 请问是兔子先生吗？</p><p>兔子先生（NPC）：你好，我是管理梦境材料的兔子。（说完又检查起了建造梦境的材料。） </p><p>我：请问有什么可以帮到您的吗？白鸽小姐说最近这里的员工变少了。</p><p>兔子先生（NPC）：哦哦！快别提她们两个了，交过来的东西都不合格！嘿，你来的正好，我有些活来安排你做。（不由分说地推搡着我去干活）</p><p>兔子先生（NPC）：看到这些五颜六色的糖果了吗？不同的颜色代表了不同品质，我需要你制造 <strong>2</strong>个 <strong>最高品质</strong> 的糖果基层。真不知道她们是怎么办事的。（苦恼的摇了摇头）</p><p>我：原来糖果基层还有区别，但是这里的糖果也太多了吧，我该怎么找呢？</p><p>兔子先生（NPC）：你原来还不会这个技能啊，那我勉为其难地教你一次吧，不过作为回报，你还得帮我制造 <strong>1</strong> 个 <strong>中等品质</strong> 的云朵基层。</p><p>我：好的，谢谢您。</p><p><strong>【制作中】</strong></p><p>兔子先生（NPC）：做的还行吧，暂时勉强够用了。我：我还以为做得不错呢（苦恼的表情）</p><p>我：那有什么东西要交给我吗？之前云朵、白鸽小姐都给了我一个非常神秘的东西。</p><p>兔子先生（NPC）：哎呀，如果想要拿到那个东西的话，光做这些可不够哦！期待你后面的表现。</p><p><strong>【自动存档，并且进入了关卡选择页面&#x2F;直接故事推进？】</strong></p><h3 id="3-4-选择的烦恼（2）"><a href="#3-4-选择的烦恼（2）" class="headerlink" title="3-4 选择的烦恼（2）"></a>3-4 选择的烦恼（2）</h3><p>兔子先生（NPC）：嘿，又见到你了，过得好吗？</p><p>我：兔子先生！我又来到这里了，请问我还能做些什么吗？我想要那个未来的碎片。</p><p>兔子先生（NPC）：哎呀哎呀，你这么说我非常开心，我现在有很多事情需要人来做呢。</p><p>兔子先生（NPC）：你还记得白鸽小姐教给你的东西吗？现在来试一试吧！这次的梦境制造需要 <strong>10</strong>个 <strong>高品质</strong> 的 <strong>云朵基层</strong> 以及 <strong>5</strong> 个 <strong>中等品质</strong> 的 <strong>糖果基层</strong>，另外还有 <strong>15</strong> 个 <strong>低品质</strong> 的 <strong>火焰基层</strong> <strong>。</strong>记清楚了吧，还需要我在念一遍吗？</p><p>我：虽然好像很困难的样子，但还是先试试吧！</p><p><strong>【制作中，发现效率非常低】</strong></p><p>兔子先生（NPC）：你的速度也太慢了吧，这样子怎么能够来得及做完呢。我：非常抱歉，但是白鸽小姐只教给了我这样一个方法。（苦恼的摸摸头）</p><p>兔子先生（NPC）：嗯哼，我这里有个 <strong>梦境装置</strong> 可以帮助你提高效率，不过，我可不是白教你的。</p><p>我：知道了，我会多做一些工作的，兔子先生请教我使用这个 <strong>梦境装置</strong> 吧。 </p><p><strong>【兔子先生教我使用”封装“的方式来制作】</strong></p><p>我：终于做完了！谢谢兔子先生！这个梦境装置真是了不起啊！</p><p>兔子先生（NPC）：看你做的还不错，这个东西就给你啦，我看你在制造梦境这方面很有潜力呢！ 去顶楼找太阳先生吧，他好像有事情和你说。</p><p><strong>（*获得关于未来的一枚碎片）</strong></p><p> <strong>【自动存档，并且进入了关卡选择页面&#x2F;直接故事推进？】</strong></p><h3 id="3-5-完整的梦境"><a href="#3-5-完整的梦境" class="headerlink" title="3-5 完整的梦境"></a>3-5 完整的梦境</h3><p>我：请问太阳先生在吗？（敲门）</p><p>太阳先生（NPC）：嘿，你好，终于见到你了。</p><p>我：你好，太阳先生，你在等我吗？有什么我能做的吗？ </p><p>太阳先生（NPC）：你通过之前的考验，真是非常棒呢。</p><p>我：考验？（恍然大悟的样子）原来之前的任务都是考验吗？</p><p>太阳先生（NPC）：是的，但是在接近这个秘密的真相之前，还有最后一个任务。你需要制造一个<strong>柔软的梦境</strong> 。</p><p>我：我…我大概可以吧。</p><p><strong>【制作中，手忙脚乱地不知道先后顺序】</strong></p><p>太阳先生（NPC）：这样子可不行啊，是不知道从什么地方开始吗？（摇了摇头）用一下这个小家伙吧，它会帮助你的。（拿出 <strong>梦境解析仪</strong> ） </p><p><strong>【在梦境解析仪上输入“柔软梦境”，界面显示：需要10个云团基层、2个雨水基层、1个糖果基层和5个火焰原料。】</strong></p><p> 太阳先生（NPC）：这样就明白了吧，柔软梦境分为好几个部分，每个部分的原料详情也写清楚了，快去准备吧！</p><p>我：谢谢太阳先生！</p><p><strong>【制作柔软梦境】</strong></p><p>我：终于做完了！太阳先生你快来看！</p><p>太阳先生（NPC）：恩，很不错，刚才的只是练手，接下来，再帮我制造 <strong>2</strong>个<strong>甜美梦境</strong> 和 <strong>1</strong>个<strong>炫酷梦境</strong> 吧。记得利用兔子先生交给你的 <strong>梦境装置</strong> 哦。</p><p><strong>【制作中】</strong></p><p>我：啊…真的好累啊…感觉非常累呢。</p><p>太阳先生（NPC）：真是个聪明又勤劳的孩子呢，来，这是你所需要的东西。再会啦！</p><p><strong>（*获得最后关于未来的一枚碎片）</strong></p><hr><h2 id="4-故事结尾"><a href="#4-故事结尾" class="headerlink" title="4-故事结尾"></a>4-故事结尾</h2><p><strong>（播放完未来碎片的故事片段）</strong></p><p>太阳先生（NPC）：很好，孩子，我想你已经知道你为什么会在这里了吧。</p><p>我：是的，太阳先生……</p><p>太阳先生（NPC）：非常好，你还有很多事情要去学习，还有很远的路要走。</p><p>太阳先生（NPC）：不用担心，我和云朵小姐他们都会在这里陪你，现在，我要给你一样东西。这样东西能够帮你继续你的旅程。</p><p>我：我… 真的可以吗？（颤颤巍巍地发问，不敢相信自己被授予了这样的使命）</p><p>太阳先生（NPC）：哦亲爱的，不要害怕，你一定能够唤醒造梦之神的。</p><p>我被太阳先生授予了造梦之神的手杖&#x2F;控制台，我离开太阳先生的房间后走向了更远的未来……</p><p><strong>（未来的故事待续….. ）</strong></p><hr><h2 id="5-未来碎片"><a href="#5-未来碎片" class="headerlink" title="5-未来碎片"></a>5-未来碎片</h2><p><strong>（使用未来碎片拼成了一副完整的壁画，画从抽象逐渐开始生动变化起来……我感到了惊奇）</strong></p><p>很久很久以前便存在着造梦的神，他守护着千千万万个孩子的梦境，让他们在梦境中获得快乐、勇敢、镇静、安宁的记忆来筑造他们美好的童年……（参考守护者联盟-沙沙）</p><p>然而人越来越多，人类的文明也越来越发达，造梦之神也向万物之主学习了新的造（bian）梦（cheng）方法来生产梦境给孩子们。</p><p>可是孩子们的天真烂漫日渐消弭，越来越少的孩子相信有造梦之神的存在，造梦之神的神力逐渐削弱并且开始厌倦了重复批量的造梦工作，造梦之神的力量逐渐被梦魇之魔所侵蚀。</p><p>为了守护梦境世界，为了唤醒造梦之神，我——最富有创造的小孩被选中。</p><p>只有当我相信着造梦之神的力量，学习<strong>造梦之力</strong>并且能够造出<strong>“新”的梦境</strong>才能唤醒造梦之神。</p><p>如果造梦之神在XX之前没有被唤醒，那么整个地球的孩子的梦境都会陷入梦魇之魔的手爪之中，再也不会获得幸福、快乐、勇敢、安宁的回忆。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>设计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谈谈我的游戏史</title>
    <link href="/post/%E8%B0%88%E8%B0%88%E6%88%91%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8F%B2/"/>
    <url>/post/%E8%B0%88%E8%B0%88%E6%88%91%E7%9A%84%E6%B8%B8%E6%88%8F%E5%8F%B2/</url>
    
    <content type="html"><![CDATA[<h2 id="2022-03更新"><a href="#2022-03更新" class="headerlink" title="2022.03更新"></a>2022.03更新</h2><p>由于每年会玩些新游戏，但记录游戏又不像影视作品那样容易，很多只是简单玩一玩然后云通关（社畜之后玩游戏的时间和精力更少了），去steam下留评论总感觉不合适，于是就在这篇文章里更新一下「游戏史」吧。当然这里只是简单回顾并总结一下，值得单开文章的自然会单开。</p><p>这一年还在持续玩的网游：</p><ul><li>原神：2.0之后（以及之前一版本的海岛），更图速度太快了，单机跑图玩家很快乐。</li><li>明日方舟：正常的活动与推图，还有新增的常驻肉鸽模式。</li><li>雀魂：原来雀魂也是魂系游戏，第四届CC98杯雀魂挑战赛由于懒得肝海选，初赛就淘汰了。</li><li>DotA 2: TI 10又PTSD了，后来的The Internet倒是挺快乐的。新版本炸弹人重做，以及MOBA类游戏确实有些力不从心了。</li></ul><p>一些新游戏：</p><ul><li>塞尔达：旷野之息，塞尔达是天。新手村的极致体验，原来游戏还能这样；后期确实有些厌倦换皮和数值替换，然后持续吃灰，至今还有大半地图未探索。</li><li>宫崎英高的黑暗之魂3和新出的艾尔登法环, 稍微玩了一会儿，看来开放世界确实是潮流了呢。</li><li>幻塔：披着开发世界皮的MMORPG，被PC游玩麻烦、手感细碎、重度刮痧、恶行bug等一种劝退，但是玩法真的多，把旷野之息抄得有模有样的。</li><li>主播女孩重度依赖：每一个关注Vup的玩家都会被这款养成类文字冒险游戏刷屏吧，不能简单用游戏性来评价的游戏。</li><li>崩坏3：想不到5年前的ACT手游放在现在还是蛮有竞争力的（全靠同行衬托），就更不用说后崩里的新技术测验了。米忽悠究竟能在一个游戏里塞进多少新游戏？因为UI稀烂被各种关不完的弹窗劝退。</li><li>英雄联盟：被周围的人带着简单玩了一下，不好评价。</li></ul><h2 id="2021-03首次整理并发布"><a href="#2021-03首次整理并发布" class="headerlink" title="2021.03首次整理并发布"></a>2021.03首次整理并发布</h2><p>作为一名95后，童年除了学习之外，自然也少不了电视里的动画和动漫，以及各种电子的游戏。</p><p>最早接触的游戏，自然是老式电视上自带的游戏——<strong>俄罗斯方块</strong>和<strong>推箱子</strong>，以及信息课上偷偷玩耍的单机游戏——比如<strong>扫雷</strong>、<strong>蜘蛛纸牌</strong>、<strong>潜艇大战</strong>、<strong>三维弹球</strong>、<strong>打雪仗</strong>等等。如今看来，这些游戏虽然体量小，但每个游戏都有完整且互相完全不同的玩法机制，本身的乐趣性也比较高（尤其是在偷偷玩的背景下），因此被誉为一个时代的经典也并不过分。</p><p>之后，浏览器和flash的结合，创生了一系列高质量的网页flash游戏及游戏网站门户（4399，7k7k等）。自然也是花了不少的时间在这些网站中，寻找一些有趣的游戏并和小伙伴们分享。具体的游戏可能并不能记全，但总有一些经典留下了深刻的印象。这里面类型最多的自然是横版闯关类游戏——<strong>合金弹头系列</strong>、<strong>三国志系列</strong>、<strong>冒险王系列</strong>，其他还有解谜类游戏——<strong>森林冰火人</strong>、<strong>Stanley博士的家</strong>、<strong>高楼爆破</strong>，对战类游戏——<strong>拳皇</strong>、<strong>死神vs火影</strong>，休闲类游戏——<strong>黄金矿工</strong>、<strong>连连看</strong>，塔防游戏——<strong>皇家守卫军</strong>。如果说最早接触的小游戏是一种启蒙，那么flash游戏则是拓宽了小游戏的认知。</p><p>再之后就是腾讯的天下了，基于社交体系的各式各类的页游网游模式，比如QQ游戏大厅中各种<strong>玩家对战式棋牌类游戏</strong>，QQ空间的各种游戏——模拟经营类的<strong>农场</strong>、<strong>餐厅</strong>、<strong>商场</strong>等，回合制卡牌养成与战斗的<strong>Q宠大乐斗</strong>，塔防类的<strong>家园守卫战</strong>、<strong>保卫羊村</strong>，还有<strong>QQ飞车</strong>、<strong>QQ炫舞</strong>……腾讯游戏打开了另一种游戏的形式（准确的说是我接触的游戏），借助社交和长线的登陆养成以及pvp模式，让人持续的想去玩一款游戏（上瘾），也做到了商业上的成功。如今看来对于腾讯游戏也是一言难尽——你要说他不好，但确实很多游戏都是童年回忆和经典，是年度爆款，起码良好水准还是有的；你要说他好，似乎也很难说出究竟好在哪里，并没有那么惊艳。真要说的话，只是商业味儿太重了吧。</p><hr><p>终于度过了童年阶段，自身的思维更加成熟，视野也更加开阔，玩游戏也不仅仅只是玩游戏那么简单了，挺多接触的游戏真正有了第九艺术的感觉。由于自身专业的关系，大类中隔壁专业就是数字媒体，身边多了更多的同好，顺便也简单入了个宅，ACG的世界也真正打开了。</p><p>这个时候所玩的游戏更加多样化，了解了更多的游戏公司，和独立游戏。受到童年时期所玩游戏的影响，对于游戏类型还是有点喜好差异的。比如小时候印象深刻的<strong>塔防</strong>和<strong>解谜</strong>，如今依然是最为喜爱的游戏类型，受到QQ飞车影响一度对<strong>赛车类游戏</strong>抱有好感。当然，对游戏的喜好并不受制于游戏类型，这些年也接触了很多全新模式的游戏，只要这个游戏足够优秀。</p><p>然后就是游戏平台和方式也都有了很大的变化——随着移动互联网和智能手机的兴起，手机游戏反而变成了一种主流的形式；被朋友拉入了steam大坑；而直播形式，让云游戏云玩家的新游戏形式也都随处可见。</p><p>由于实在不好以线性文字的形式整理这一阶段尝试和接触的游戏（不完全记录），就以表格形式整理一下吧（分类并不完全准确，每个游戏都可能有多种类型标签，一些非常通用的标签比如rpg就直接略过了）：</p><table><thead><tr><th>游戏类型</th><th>深度体验</th><th>接触与了解</th></tr></thead><tbody><tr><td>音游</td><td>Deemo，Cytus系列（Rayark，yyds），东方红魔乡，东方妖妖梦等东方游戏（弹幕游戏附赠优秀音乐和同人奇迹，算个音乐游戏也不过分，其实是不知道还可以放哪边）</td><td>节奏大师，别踩白块</td></tr><tr><td>塔防</td><td>植物大战僵尸（初代及二代手游），明日方舟</td><td>保卫萝卜，东方梦符祭</td></tr><tr><td>解谜&amp;冒险</td><td>纪念碑谷，人力资源机器，返校，还愿（政治私货可惜了），烟火</td><td>机械迷城，Limbo，Sally Face，光遇</td></tr><tr><td>赛车</td><td>极品飞车9（经典中的经典）及系列其他，狂野飙车</td><td>GTA5</td></tr><tr><td>恐怖游戏</td><td>P.T.，生化危机</td><td>面容，港诡实录</td></tr><tr><td>二次元</td><td>阴阳师、原神</td><td>FGO，碧蓝航线，崩坏3</td></tr><tr><td>MOBA</td><td>Dota 2</td><td>英雄联盟、王者荣耀</td></tr><tr><td>恋爱游戏</td><td>Air，未定事件簿，Helltaker，以及不可描述</td><td>Clannad，恋与制作人</td></tr><tr><td>休闲娱乐</td><td>BombSquad，雀魂，旅行青蛙</td><td>Fall Guys，OverCooked，Among us</td></tr><tr><td>交互式电影</td><td>底特律：变人</td><td>隐形守护者</td></tr><tr><td>ACT</td><td>手残党落泪</td><td>对马岛之魂、黑暗之魂、只狼</td></tr><tr><td>其他</td><td>我的世界，心跳文学社</td><td>There is no game</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>原神玩法总结</title>
    <link href="/post/%E5%8E%9F%E7%A5%9E%E7%8E%A9%E6%B3%95%E6%80%BB%E7%BB%93/"/>
    <url>/post/%E5%8E%9F%E7%A5%9E%E7%8E%A9%E6%B3%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p>作为一款<strong>二次元开放世界抽卡rpg</strong>游戏，原神在氪金换皮手游领域实现了突破，不仅在”全平台”登录，更是荣获ios、google play两大手机App平台2020年度游戏。众所周知，游戏有四个核心要素——美术、机制（玩法）、故事和技术，作为一名准公测开服玩家，想要从玩家角度来谈谈这一款跨时代游戏的玩法。</p><p>一图流：</p><p><img src="https://raw.githubusercontent.com/SkeathyTomas/img/main/img/%E5%8E%9F%E7%A5%9E%E7%8E%A9%E6%B3%95.svg" alt="玩法总结一图流"></p><h2 id="核心玩法"><a href="#核心玩法" class="headerlink" title="核心玩法"></a>核心玩法</h2><p>一度被称为“大杂烩缝合怪”的原神，我对于这款游戏的第一串定语就又臭又长——<strong>二次元开放世界抽卡rpg</strong>，甚至还可以添加多种游戏标签，比如ACT、文字冒险、解谜、收集等等。但谈到原神的核心玩法，我会总结以下三点：<strong>探索</strong>、<strong>战斗</strong>、<strong>养成</strong>。</p><h3 id="探索"><a href="#探索" class="headerlink" title="探索"></a>探索</h3><p>用探索这个词来形容一个游戏的核心玩法未免有些不讲道理，因为探索就算被写进游戏的定义也不足为怪，几乎所有的游戏都少不了探索这一玩法，也许是探索游戏世界、故事、机制、解法……</p><p>这里就简单介绍以下原神以大世界为背景的探索玩法。在游戏pv中，原神就介绍了以7个国家为背景的提瓦特大陆，整个游戏的世界观和所有发生的事件都在这个大世界中。目前只开放了其中两个国家——蒙德和璃月，璃月还有层岩巨渊未开放。在整个大世界中，玩家可以操纵角色（旅行者）以<strong>第三人称视角自由冒险和探索</strong>（除非因为等级和剧情原因被限制区域），以了解和掌握整个地图，也比较契合旅行者这一角色身份。在探索过程中，通过解锁<strong>七天神像点亮地图</strong>，方便地图认知和熟悉；也可以解锁<strong>传送锚点</strong>，实现地区之间的方便传送；另外，大地图中存在各种不连续的<strong>秘境空间</strong>，也可进行解锁和探索。</p><p><strong>比较遗憾的是，虽然世界是一个整体，但并不是所有的空间都是连续的</strong>，比如秘境和大多数室内空间，都无法直接从大世界中顺畅进入（望舒客栈：我不配叫室内空间？），需要独立的载入。而且大多数室内都无法进入，目前已知可进入的室内空间只有蒙德骑士团（部分）、蒙德大教堂（地下室剧情过后就无法进入了）、璃月两个非常简陋的“高档”餐厅、<del>立刻就炸了的</del>群玉阁。考虑到室内室外空间比例设计的差异以及技术层面的画面渲染，这也无可厚非。</p><p>因为一切的故事都发生在整个大世界中，所以一切剧情、任务都需要与大世界中的地点、人物进行交互（除了纪行中非常特殊的登录、抽卡这类任务）。<strong>主线任务（魔神任务），角色任务（传说任务），支线任务（世界任务），大世界的突发任务，还有日常周常任务，都建立在大世界的探索基础上。</strong>另外，npc除了对话交互外，还有受到攻击躲避和看到角色整活鼓掌两种基础交互逻辑。</p><h4 id="基础行为"><a href="#基础行为" class="headerlink" title="基础行为"></a>基础行为</h4><p>在大世界探索的过程中，旅行者的行为包括最为基础的<strong>行走、奔跑&#x2F;冲刺、跳跃、攀爬、游泳和滑翔</strong>，还有某些位置可让角色<strong>坐下</strong>，比如板凳、大世界中的石块、树枝等。通过这些基础行为，旅行者可实现陆水空三个层面的探索，所以与大世界的交互就包括<strong>在陆地奔跑&#x2F;行走，在水中游泳，爬山&#x2F;楼，以及从高处滑翔至低处</strong>。</p><p>值得注意的是，旅行者有体力条的限制，奔跑、游泳、攀爬、飞行需要消耗一定的体力。而在飞行、攀爬、游泳时耗尽体力将会面临跌落致死&#x2F;溺水的风险，所以在前期体力条不足时需要特别注意探索时的路径和体力规划。体力条主要通过收集神瞳并供奉七天神像获得上限提升。</p><h4 id="采集与收集"><a href="#采集与收集" class="headerlink" title="采集与收集"></a>采集与收集</h4><p>此外，除了这些最基础的交互行为，旅行者还可以<strong>采集&#x2F;收集大世界中的物品</strong>，包括但不限于植物（甜甜花等），矿物（含奥藏山的琥珀盲盒，雪山地区独特的深赤之石），动物（鸟类、猪等需要攻击，蜥蜴、青蛙等直接采集，鱼可以直接抓也可以攻击后采集鱼肉），以及其他各类掉落物（星螺，击碎木箱子掉落的食材，带闪光提示的各类圣遗物狗粮、基础货币摩拉等）。</p><p>除去这些会刷新的采集物外，大地图中也有<strong>一次性的收集物品</strong>，主要包括神瞳（含雪山地区的绯红玉髓）和宝箱，另外还有观景点、书籍等。这一类收集物品具备最基础的解谜性质，比如各种位置的神瞳可能需要思考一下收集的方法；而策划们费劲心思藏起来的各类宝箱，比如仙灵指引的宝箱、藏在碎石和各种机关中的宝箱等找起来也并不容易。</p><p>这些收集与采集行为，除去直接捡起或开启（宝箱）的物品外，大多需要配合角色的<strong>攻击&#x2F;技能交互</strong>。由于角色武器类型的差异，不同武器的角色也具备独特的交互，比如双手剑角色适合挖矿，弓箭类角色适合打猎或射穿空中的气球（风史莱姆和蓬蓬果）。</p><p>还有一种特殊的采集，需要通过击败大世界中各类怪物获得。不同的怪物会掉落不同类型的养成材料，或是装备。而战斗和养成部分则放在之后两个部分详细介绍。</p><h4 id="环境交互"><a href="#环境交互" class="headerlink" title="环境交互"></a>环境交互</h4><p>在介绍大世界环境交互之前，首先需要了解游戏的一个基本机制——元素力。在提瓦特世界中，存在七种元素力——<strong>风岩水火冰雷草</strong>，元素之间可以相互反应，基本和常识一致，比如火可以点燃草，融化冰，水可灭火，冰可以冻结水；再加上无属性，大世界的环境都由这7+1种基本属性组成，而环境交互也都建立在这一属性机制之上。</p><p>具体的：</p><ul><li>无属性的角色攻击可以破坏草属性的小灌木（有概率掉落松茸鸟蛋蜥蜴）；可以破坏无法获得击杀奖励的小动物，比较特殊的猫和狗会自动闪避攻击；攻击树木有打击感，果树会掉落果子，雪山地区的树木还会掉落雪。</li><li>高处坠落可致伤、致死，河湖可溺死，这一机制同样适用于应对怪物，暂未发现会游泳的怪物。</li><li>具备时间和天气系统，不同时间和不同的天气光照、景色会有差异，天气状态也会对角色产生一些状态影响。</li><li>存在“火炬”、元素方碑等需要特定类型的元素力点亮（解谜要素）。</li><li>风场提供上身气流供起飞，风环提供飞行加速，风种子和冰种子都可以造出风场，风史莱姆死亡后也可产生短暂风场，岩种子有独特的解谜机制。</li><li>角色和怪物都可附着元素，而附着方式主要包括角色&#x2F;怪物技能和环境中的水火冰雷元素接触（河流湖泊水体、火源、冰&#x2F;火雾花，下雨天气，被落雷击中等，破坏炸药桶、水汽石）。环境中除了水元素附着，大部分元素附着过程都伴随环境伤害。各类元素附着可能会带来角色&#x2F;怪物属性的变化，比如冰属性附着使角色速度减缓。</li><li>火元素可以点燃草地、小灌木和多种木制品（箱子、怪物木遁），并造成环境伤害（敌我无差别伤害）。</li><li>冰元素和水元素接触产生冻结，可以通过此方式冻结角色和怪物，或者冻结水面，实现长距离跨越水面环境（凝冰渡海真君）。</li><li>水、冰可以灭火。</li><li>雷元素可使水体感电，造成范围环境伤害。</li><li>风元素将元素扩散到更大范围，比如草地上的火，水面的冰。</li><li>岩元素与其他元素反应产生对应的结晶护盾。</li><li>龙脊雪山独有寒冷机制，暴露于雪山环境会积累寒冷值，达到上限后对角色造成伤害，可以通过火源、火仙灵、传送点、深赤之石等减缓或消除寒冷值。</li></ul><h3 id="战斗"><a href="#战斗" class="headerlink" title="战斗"></a>战斗</h3><p>原神的战斗是以<strong>上限为四人的冒险小队</strong>（存在包括试玩的五人小队）为基础的第三人称视角即时类战斗。虽然是四人小队，但是角色并不能同时出场（除了联机模式），而是以快速切换角色的形式每次控制一名角色，毕竟非上帝视角的多操并不符合交互规则。在战斗类型方面，主要包括大世界怪物、精英怪，秘境，大世界boss和深境螺旋，版本活动也多会提供一些高难限时怪物。</p><h4 id="进攻"><a href="#进攻" class="headerlink" title="进攻"></a>进攻</h4><p>角色的进攻形式包括主要三个模组——基础攻击、小技能（元素战技）和大招（元素爆发）。</p><ul><li><strong>基础攻击</strong>又包括普通攻击、重击和下落攻击，按照角色所使用的武器，基础攻击会有略微的差异，比如攻速、攻击范围和伤害。此外，虽然武器相同，不同角色的基础攻击也略有差异。目前角色可使用的武器类型有5种——单手剑、双手剑、弓箭、长柄武器和法器。其中弓箭和法器一般有较大的攻击距离，双手剑攻速较低但压制力和破盾能力比较强，法器的攻击自带法球伤害，单手剑和长柄武器有较快的攻速。<ul><li>普通攻击包含连续的多段攻击（3-6段），每一段攻击之后有短暂后摇，一套完成之后有一段较大的攻击后摇。可以通过跳跃、闪避、重击等多种方法打断连续的攻击及后摇，刷新多段攻击。</li><li>重击一般需要消耗一定的体力，造成略高的伤害。弓箭类角色的重击较为特殊——进入瞄准模式，蓄力一定时间后造成较高法术伤害。</li><li>下落攻击（跳劈），指从高处下落时进行攻击操作，下落过程和落地时造成较高的范围伤害。</li></ul></li><li><strong>技能</strong>方面，角色各有一个小技能和大招，技能一般造成元素伤害。小技能有cd，有长按和短按的不同释放方式（某些角色可能只有短按的方式）；大招不仅有cd，也有能量条的限制，需要通过小技能击中怪物或打击击杀怪物恢复能量。由于非攻略向的文章，不具体讨论角色技能，只大致介绍技能类型，当然也可进行组合。<ul><li>伤害型技能。对一定范围内怪物或单体怪物造成伤害。</li><li>控制型技能。提供怪物的牵引、嘲讽、位移、石化等控制效果，阻止&#x2F;打断怪物移动、攻击等行为。</li><li>保护型技能。恢复队伍内角色生命或者创造可吸收伤害的护盾。</li><li>位移型技能。提供角色短暂位移，用户躲避上海，追踪怪物等。</li><li>召唤类技能。后台召唤物技能，可在角色切换后依然在场，提供多种作用。</li><li>buff类技能。提供角色伤害加成、攻速加成、减短技能cd、怪物易伤等效果。</li></ul></li></ul><h4 id="防御"><a href="#防御" class="headerlink" title="防御"></a>防御</h4><p>除了进攻之外的战斗方式，防御也是战斗的另一个重要方面。基础的生命、抗性、防御属性和保护型技能可以减少或抵消承受伤害，增加战斗容错率。而在规避伤害方面，机制比较简单，只有<strong>闪避、位移型技能和大招的无敌帧</strong>。怪物的攻击有前摇和范围，可通过位移和闪避离开范围规避伤害，或在正确的时机利用闪避动作、切换角色的无敌帧以及大招前摇的无敌帧规避伤害。</p><h4 id="战斗技巧"><a href="#战斗技巧" class="headerlink" title="战斗技巧"></a>战斗技巧</h4><p>在战斗中存在一些通用的技巧，既可以用于应对怪物，也能被怪物使用。</p><ul><li><strong>打断&amp;压制</strong>。无论是怪物或是角色，收到伤害会被打断，进入硬直状态，除非具备高抗打断能力（护盾、各类技能提供的效果等），不同怪物抗打断能力不同并且随怪物状态（特性）也会改变；重击、普通攻击最后一段对于怪物有更强的打断能力，甚至击飞效果。</li><li><strong>弱点打击</strong>。怪物存在弱点（一般为头部），命中弱点必定暴击，造成更高伤害，并具备强打断效果，甚至让怪物进入瘫痪状态。</li></ul><h4 id="元素反应"><a href="#元素反应" class="headerlink" title="元素反应"></a>元素反应</h4><p>准确而言，元素反应也属于战斗技巧，但这一技巧过于特殊，是整个战斗的核心模块，所以单独介绍。前文提及的存在于大世界中的七大元素，也同样适用于战斗之中。拥有神之眼或神之心的角色可以<strong>操纵对应属性的元素</strong>，主角更可以操纵多种属性的元素力（<strong>选择切换属性</strong>）。</p><p><strong>使用不同类的元素攻击或技能攻击带元素的怪物（自带元素或附着了元素）可以触发元素反应。</strong>元素反应可以带来<strong>额外的元素伤害</strong>（雷火超载，雷冰超导，雷水超载，火草点燃），或是<strong>按照倍率提升伤害</strong>（火水蒸发，火冰融化），或是<strong>控制效果</strong>（水冰冻结）。元素反应与四人战斗小队的模式相契合，合理运用元素反应将大大加快战斗进程。四人小队还可以根据元素的类型和数量提供不同的元素共鸣效果，为全队角色提供独特的队伍buff。</p><p>一些怪物存在元素护盾，护盾存在期间伤害减免或免疫，并提供怪物特殊能力。主要通过<strong>元素反应破盾</strong>，合理利用<strong>元素克制关系</strong>可快速破盾，比如火克冰，冰克水，水克火，破盾之后怪物进入虚弱状态，是一轮输出的机会。</p><h3 id="养成"><a href="#养成" class="headerlink" title="养成"></a>养成</h3><p>作为第三个核心玩法，原神的养成和其他养成类手游基本类似，都是通过刷刷刷的模式提升角色等级和伤害，并不是通过游戏的探索和玩家的熟练而成长起来的模式。可养成的对象包括角色人物、武器、天赋（技能）和圣遗物，养成材料包含无需树脂（时间体力系统）的大世界怪物击杀奖励，大世界各种捡垃圾和需要消耗树脂的各种世界boss和副本秘境，以及基础货币摩拉。</p><p>当然最主要的养成对象是角色，其他各种都建立在角色之上，毕竟rpg这一游戏属性就注定了角色成长的重要性。角色的获得方式是抽卡，可惜往往会歪出武器。不同的角色可以搭配不同的武器、圣遗物，以及四人小队可以自由搭配。加上养成素材的限制，合理使用资源，探索阵容和各种装备之间的搭配，是玩家之间讨论最为充分的一个话题，也是整个养成玩法的核心。</p><h2 id="其他玩法-x2F-活动玩法"><a href="#其他玩法-x2F-活动玩法" class="headerlink" title="其他玩法&#x2F;活动玩法"></a>其他玩法&#x2F;活动玩法</h2><p>这一部分主要对一些特殊&#x2F;活动的玩法做一些整理，主要以小游戏形式出现，丰富整个游戏的探索和战斗玩法，或提供养成资源。当然官方也知道自己的主线制作进度更不上玩家游玩的速度，所以也通过制作各类小游戏性质的活动玩法，撑起没有什么实质内容的小版本，帮助玩家度过长草期。</p><ol><li>联机系统。玩家可以加入其他人的世界，组成一个真·冒险小队进行世界探索、打怪或一起刷副本，最多可以有四名玩家一起联机。</li><li>料理系统。游戏中可制作料理，为角色提供复活、回血以及团队buff效果。</li><li>成就系统。探索结果的展示系统，含不直接显示的隐藏成就。</li><li>探索派遣。使用角色花费时间获取资源。</li><li>拍照系统。提供高级截屏功能——拍照系统，可调节镜头景深、角色姿态表情等，用于分享提瓦特美丽的背景和角色。后续也提供了快捷照相机和滤镜照相机功能。春节前活动集五福玩法——通过特殊照相机拍取大世界中特定颜色的物品，可获得不同颜色的卡片。</li><li>潜行。目前只在剧情任务中出现三次（偷琴、抓猫、逃出请仙现场），透过翻滚、下蹲潜行、投掷干扰物&#x2F;吸引物引起目标注意，以此基础达成前往目的地的目标。</li><li>飞行挑战&#x2F;赶路挑战。按照指定路线，限时通过飞行（加速环）&#x2F;跑步（击杀怪物）到达终点。</li><li>空战。剧情打风魔龙专属玩法。</li><li>讨价还价。璃月花钱雇人特殊玩法。</li><li>寻宝。通过寻宝罗盘&#x2F;小精灵等指引宝藏方向进行寻宝活动。</li><li>外卖&#x2F;快递。（限时、限方式）跑图任务。</li><li>塔防模式。海灯节特殊玩法，3D含元素反应模块的塔防。</li><li>保护&#x2F;护送&#x2F;破坏。守护目标不被怪物破坏（货物气球、遗迹），阻止目标到达终点（史莱姆气球）。</li></ol><p>这些日常玩法也在不断丰富中，比如1.4版本前瞻透露的糖豆人模式、galgame模式、音游模式等等。</p><h2 id="非官方玩法"><a href="#非官方玩法" class="headerlink" title="非官方玩法"></a>非官方玩法</h2><p>这类玩法存在于树脂耗尽和版本探索100%后的长草期玩家，依据开放世界的游戏特性由玩家开发出。虽然不是官方玩法，但其本身的乐趣性并不比官方玩法差，经常引起玩家的热烈讨论（主要还是长草期过于无聊）。</p><ol><li>线下pvp。虽然游戏内并没有pvp模式，但玩家可以通过非游戏内方式比较伤害，怪物击杀时间，秀操作，甚至秀最大怪物伤害。</li><li>玩家攻略。玩家提供游戏的解读和解析，并制作各种探索、战斗、养成攻略。</li><li>利用环境&#x2F;世界怪物伤害实现游戏内pvp。比如草地放火大战、冻结水面融化使玩家落水、水面感电大战等等。</li><li>捉迷藏。限定区域和时间，不借助小地图寻找躲起来的其他玩家。</li><li>追逃。角色的身高、被动等会影响角色的跑步速度，选择不同角色并限定优势角色的动作（比如不能飞行）可实现追逃模式玩法。</li><li>岩创造物整活。多人模式下利用钟离的柱子，不接触水面过河。创造物更改npc路径等等。</li><li>利用实体碰撞机制实现游戏特性（真实的物理引擎）。比如某些位移技能时受到攻击会带来夸张的位移，利用风史莱姆起飞的碰撞实现夸张的位移，利用攻击卡肉机制实现跳跃能力的小提升并使出“登龙斩”。</li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上就是我作为一名个人玩家对于原神玩法的总结了，当然也肯定有不少遗漏之处。总结下来发现原神的玩法也确实非常多样（尤其是在探索阶段），光是主副线剧情也有几十个小时的游戏时间了，顶个3A大作也并不过分。总结过程大多只是介绍玩法，并没有更多主观情感的评价。不过既然能为一款游戏写下那么多内容，自然也是表达了我对原神的喜爱，尤其是世界架构和9+剧情之下的13+剧情伏笔，轻度的ACT玩法也能适合绝大多数玩家。总之希望原神越做越好，真正构建起一个有趣而美丽的提瓦特世界。</p>]]></content>
    
    
    <categories>
      
      <category>游戏</category>
      
    </categories>
    
    
    <tags>
      
      <tag>游戏</tag>
      
      <tag>原神</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>谁说《天气之子》不能和《你的名字》比较？</title>
    <link href="/post/%E8%B0%81%E8%AF%B4%E3%80%8A%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90%E3%80%8B%E4%B8%8D%E8%83%BD%E5%92%8C%E3%80%8A%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%8B%E6%AF%94%E8%BE%83%EF%BC%9F/"/>
    <url>/post/%E8%B0%81%E8%AF%B4%E3%80%8A%E5%A4%A9%E6%B0%94%E4%B9%8B%E5%AD%90%E3%80%8B%E4%B8%8D%E8%83%BD%E5%92%8C%E3%80%8A%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97%E3%80%8B%E6%AF%94%E8%BE%83%EF%BC%9F/</url>
    
    <content type="html"><![CDATA[<p>利益相关，新海诚多年粉丝，去年《天气之子》国内上映的时候，在了解了一些背景之后也是立刻去影院观看了诚哥三年的又一新作。虽然一些背景的了解带来了轻微的剧透，但丝毫不影响我的观感（和我本人的观影习惯有关，不怎么在意剧透，毕竟除了剧情还有更多可以关注的维度），所以总体观感非常棒，看完之后仍留有很多思考的地方。</p><p>意料之外的是这部非常对我胃口的作品却在圈内引发了大量争议，什么剧情老套，结局争议，诚哥水平不再等等大量负向的言论涌出，又有大量对此反驳的解析向内容产出，最后甚至有两个阵营的创作者互喷对撕的局面，用乌烟瘴气来形容完全不过分。当然我自己看到喜欢的作品被喷成这样也是有点生气，所以也是第一时间去翻了小说设定集，补充一些电影细节的了解，顺便打算写篇文章好好分析一番。可惜自己比较懒，写了个提纲讨论热度就下来了，于是又懒得写了。</p><p>如今B站上线《天气之子》，于是这个鸽了半年多的文章企划再次启动。主题是《天气之子》和《你的名字。》的对比分析，正如标题所示。可能会有标题党的嫌疑，不过去年争议阶段确实拿两部作品对比的言论大有所在，基本都是一边倒的《天气之子》不如《君名》，但是正儿八经对两部作品对比分析的文章却少之又少。然后就有《天气之子》的粉丝大喝“有什么好比较的“，”捧一踩一有必要吗”，我的观点是<strong>同样是新海诚的作品，主角和剧情架构又有很多类似的地方，有什么不可以比较的呢，有比较才会有好坏的结果，才能进一步促进市场产生更优质的内容。</strong></p><hr><p>先来说一些两部作品相同的内容——同样的新海诚总监督，同样的人设田中将贺，同样的音乐RADWIMPS。尽管争议很多，在画面和音乐上却毫无争议，一致好评。壁纸狂魔新海诚，每一帧依然都是壁纸；而作为T0级别的人设田中将贺，角色还是香；演出也都非常到位，没有什么大规模的让人吐槽的奇怪演出。音乐鬼才RADWIMPS，在有了前作的铺垫上似乎更有经验和名气了，几首主题曲完美契合作品，情感表达也更加丰富，所以我在预告片的时候就被那首《愛にできることはまだあるがい》副歌部分深深吸引到，期待国内引进了。</p><p>然后是一些值得进行对比的点，主要从剧情节奏、人物塑造、作品深度三个角度进行分析。</p><h2 id="剧情节奏"><a href="#剧情节奏" class="headerlink" title="剧情节奏"></a>剧情节奏</h2><p>先说结论，这点上无疑是《君名》更胜一筹。在预告片中，《君名》只透露了一个身体交换的爆点，而在正片中这只占到了一小部分，之后的时空错位揭晓的时候让人大呼精彩，这也是新海诚第一次将一个故事讲述得如此精彩。<strong>穿越和互换身体两大永不过时的设定总能玩出点让观众高潮的新花样。</strong>而且整体节奏也非常清晰且有吸引力，用一个欢乐的互换身体作为前奏，然后突然转折引出矛盾，带领观众一起解谜，然后进入核心拯救女主和世界的部分（过程还有许多曲折），在日剧跑和陨石坠落的高潮中完美落幕，最后的相遇结局一反以往的新海诚——“诚哥终于相信爱情了”再次引入一个讨论的高潮。无论是故事本身的趣味，还是故事讲述的波澜，《君名》都足够吸引更加大众化的观众，这也注定了其在票房和大众口碑上的双丰收。</p><p>而对应的，《天气之子》的整体剧情则相对平淡很多，预告片可以说是毫不吝啬地讲完了整个故事，唯有的期待只剩下“这次少男少女又该怎样拯救世界”，不过好在正片给了这个想法啪啪打脸，不是拯救世界，而是放弃世界拯救女主。《天气之子》没有《君名》那样的爆点要素，一切都显得更加平淡，100%晴天女孩什么的，不过如此，激不起观众的兴趣。此外，《天气之子》的剧情拉的很长，由很多小故事组成，观众的注意力在本就不是那么突出的主线剧情上被多次分散，所以若是只关注主线故事怎么发展，自然少不了平淡无聊的抱怨。</p><p>虽然在主线剧情表现略逊一筹，但是我觉得《天气之子》的节奏基本没什么大的问题。先来拆分一下剧情（剧透警告）：</p><ol><li>帆高离家出走，东京闯荡，最后在圭介的事务所暂住。</li><li>帆高“救”阳菜，天气巫女的能力出现，枪的冲突埋下伏笔。</li><li>阳菜为了维持生计，100%晴天女孩企划启动，在花火大会达到高潮。</li><li>代价出现了，女主身体透明化，福利院和警察两大矛盾纷纷指向男女主。</li><li>在恶劣的天气中主角团逃过一劫，在宾馆轻松的一夜。</li><li>突然女主祭献，天气放晴，男主拯救女主，矛盾正面交锋，全片高潮。</li><li>东京被淹，结局交代，男女主重逢。</li></ol><p>看起来只是简单的平铺直叙，但是情感唤起程度却在不断波动，在一段紧张的片段之后一定会补上舒缓的片段（比如夏美大姐姐的胸），在平淡之后也会稍稍补充一些高潮部分（比如中间的花火大会），看似缓和了又突然引发了矛盾（宾馆一夜天亮后阳菜消失）。在主线上又不断推进，最高潮部分的展开做足了铺垫。情绪流的起伏至少让我既不会觉得无聊也不会突然接受爆炸的信息而跟不上节奏。所以，稍稍用点心的话，剧情还是颇为有趣的（站在制作组的角度）。</p><h2 id="人物塑造"><a href="#人物塑造" class="headerlink" title="人物塑造"></a>人物塑造</h2><p>《君名》的人物塑造，可以说是基本没有，人物都是为剧情服务的，除了男女主，其他配角基本只是个工具人。男女主因为有比较强的情感表达与交流，所以还不至于沦为工具人的地步，毕竟主打少男少女的爱恋的作品讲述情感也是相当重要的。不过还有一个疑问，男女主是怎么喜欢上彼此的？在《前前前世》的BGM中，男女主在争吵中似乎就莫名其妙地喜欢上对方了，虽然也可以理解，毕竟和人交换身体什么的，总能萌生出异样的情感。男主的设定是一个喜欢打工餐厅前辈的都市高中生，女主设定是一心想去东京大都市的乡村神社继承人，如此简单的设定之后也没有做更多的解剖，自然也就少了很多角色魅力，让人总体对《君名》这部作品有感，而对其中的角色没什么太多的感情。好在感情戏和泪点制造的相当出色，而且爱恋故事似乎对于人物塑造什么的也不是那么重要，观众也不在乎，扳回一局。</p><p>《天气之子》的人物塑造则出色得太多。首先是男女主的设定，一个离家出走，独自闯荡东京，一个父母双亡，还要照顾上学的弟弟。这样的设定直接就立体了很多，不是随便抓一个人就可以开始的故事，稍微特殊的人群（小人物）也更容易植入更加值得思考的问题。男女主本身设定上的类似点，男女主前期的互助，到后期的奋不顾身也要为了对方，拯救对方，至少逻辑上没什么大的问题，所以男女主情感上的交流与发展也显得更加自然、真挚而动人。再说说主要的配角，男二中年大叔圭介，年轻的时候和男主类似的性格，而随着年龄的增大迫于社会各方面的压力而妥协，最终在枪战对峙中一瞬间找回了自己的初心。女二夏美大姐姐，初入社会忙着找工作的元气大姐姐，敢想敢做，一度开始被社会蚕食，又能在关键时刻放飞自我。还有男三把妹达人凪，年纪小小却有自己的理解和想要守护的东西，还有古板的警察。。。除了（Besides）最主要的男女主，主要配角的塑造也都相当成功，甚至可以被解读成社会中人的各种不同阶段，妙啊。出色的人物塑造，自然会把观众的注意力引向对于人物的喜爱，比如我可太喜欢夏美大姐姐了。</p><p><img src="https://pic4.zhimg.com/80/v2-4c455fea5a72a6bb9f85a70d64e5d5bb_1440w.jpg" alt="偷偷抱走大姐姐"></p><h2 id="作品深度"><a href="#作品深度" class="headerlink" title="作品深度"></a>作品深度</h2><p>《君名》的深度，并不容易理解，这是一种类似于宗教信仰之类的概念，是人与人之间的连接，是使命与任务之类的抽象概念。在表的爱情故事之下，隐藏的是新海诚的哲学思考，这里的表达和诚哥早期的作品还是有很多相似程度的，是一部纯粹的理想主义作品。</p><p>《天气之子》的深度，更容易理解但是变得复杂了。最明显的一些主题探讨：</p><ol><li>天空是比海洋更深邃的地方，天空从以前就属于不同的世界。这是一种对自然的敬畏，在自然面前，人能做到的极为有限，倒是和宫崎骏的作品有共同之处，最终的结局也在表达这样的观点。</li><li>代价，天气巫女可以通过牺牲自己换来暂时的理想天气，那么，电车难题应该怎么解决？可以为了集体牺牲个体吗？</li><li>初心，不同社会阶段的人群，面对社会的毒打，又该怎样保持初心，还是融入社会之中呢？</li><li>小人物，作品的主视角都面向了繁华都市中接近于底层的人们，很容易想到星爷小人物主题的故事，整个社会又应该对这一群体做一些什么呢？</li></ol><p>整体来说，《天气之子》可以很有深度，加上使用一个颇具争议的结局让观众来解读零散的主题。我并不认为如此复杂的主题是一件好事，甚至我自己也理不清到底在讲什么样的主题，有兴趣的人可以去看大佬们的深度解析。但是我佩服新海诚，能够突破自己，第一次讲述了一个那么复杂的故事，让一个理想主义的作品发生在现实主义的背景下，通过出色的主配角人物塑造发人深思。</p><h2 id="总结与彩蛋"><a href="#总结与彩蛋" class="headerlink" title="总结与彩蛋"></a>总结与彩蛋</h2><p>分析了那么多，主要还是想说《天气之子》比起《君名》，并不是那么不堪，整体上并不输《君名》。至于口碑和票房上的差距，原因只是正如新海诚自己所说的——“这并不是面向所有人的作品”，如果你恰好和我同感，就一起在bilibili去看看刚刚上线的《天气之子》吧。</p><p>P.S. 天空坠落的那个片段，男主脸上的挂彩，不知不觉绝想到了《幽灵公主》里的女主，进而又想到了《天空之城》的设定，还有《千与千寻》里的白龙莫名和天空里的龙也有点类似来着，所以自然想到了和宫崎骏作品的主题。至于其他联动彩蛋什么的，其他人都讲烂了，我就懒得讲了。</p><p><img src="https://pic2.zhimg.com/80/v2-798f144fc0d5cd6d230fc0696bcb4a31_1440w.jpg" alt="天气之子"></p><p><img src="https://pic4.zhimg.com/80/v2-a643d1daa562d41c96748c8c4faeb883_1440w.jpg" alt="幽灵公主"></p>]]></content>
    
    
    <categories>
      
      <category>动漫</category>
      
    </categories>
    
    
    <tags>
      
      <tag>动漫</tag>
      
      <tag>新海诚</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
